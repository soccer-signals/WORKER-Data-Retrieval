{
  "{\"sourceRoot\":\"/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval\",\"filename\":\"/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval/app.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval",
      "filename": "/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval/app.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval/app.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval/app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _Sportmonks_Api_Connect = require(\"./Modules/Sportmonks_Api_Connect\");\n\nvar _dns = require(\"dns\");\n\nvar _DataHistory = _interopRequireDefault(require(\"./Database Models/Data-History\"));\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// Imports\nvar express = require(\"express\"),\n    Api = express(); // Variables\n\n\nvar $port = process.env.PORT || 7100,\n    $refreshRate = 3;\n\n_mongoose[\"default\"].set('useFindAndModify', false);\n\n_mongoose[\"default\"].connect('mongodb+srv://robertkingsleyiv:Mompex35@@@cluster0-arlog.mongodb.net/test?retryWrites=true&w=majority', {\n  useNewUrlParser: true\n}).then(function () {\n  console.log(\"Database Connection Established\");\n});\n\nvar APPLICATION_DATA;\nvar count = 0;\n\nfunction getApiDataAndSetVar() {\n  (0, _Sportmonks_Api_Connect.refreshData)().then(function (data) {\n    count++;\n    console.log(count);\n    APPLICATION_DATA = data;\n  });\n}\n\nsetInterval(getApiDataAndSetVar, $refreshRate * 1000);\n\nfunction onNewMinute() {\n  var today = new Date();\n  var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate() + \" \" + today.getHours() + \":\" + today.getMinutes();\n  var updateHistory = new _DataHistory[\"default\"]({\n    Data: APPLICATION_DATA.finished,\n    Date: date\n  });\n  updateHistory.save().then(function () {\n    return console.log('Data History Uploaded');\n  });\n}\n\nvar today = new Date();\nvar time = new Date();\nvar secondsRemaining = (60 - time.getSeconds()) * 1000;\nsetTimeout(function () {\n  setInterval(onNewMinute, 60000);\n  onNewMinute();\n}, secondsRemaining);\nvar app = express();\napp.get(\"/client-data\", function (req, res) {\n  res.send(APPLICATION_DATA);\n});\napp.listen($port, function () {\n  console.log(\"HTTP/S Server Listening on: \".concat($port));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsIkFwaSIsIiRwb3J0IiwicHJvY2VzcyIsImVudiIsIlBPUlQiLCIkcmVmcmVzaFJhdGUiLCJtb25nb29zZSIsInNldCIsImNvbm5lY3QiLCJ1c2VOZXdVcmxQYXJzZXIiLCJ0aGVuIiwiY29uc29sZSIsImxvZyIsIkFQUExJQ0FUSU9OX0RBVEEiLCJjb3VudCIsImdldEFwaURhdGFBbmRTZXRWYXIiLCJkYXRhIiwic2V0SW50ZXJ2YWwiLCJvbk5ld01pbnV0ZSIsInRvZGF5IiwiRGF0ZSIsImRhdGUiLCJnZXRGdWxsWWVhciIsImdldE1vbnRoIiwiZ2V0RGF0ZSIsImdldEhvdXJzIiwiZ2V0TWludXRlcyIsInVwZGF0ZUhpc3RvcnkiLCJkYXRhVXBkYXRlcyIsIkRhdGEiLCJmaW5pc2hlZCIsInNhdmUiLCJ0aW1lIiwic2Vjb25kc1JlbWFpbmluZyIsImdldFNlY29uZHMiLCJzZXRUaW1lb3V0IiwiYXBwIiwiZ2V0IiwicmVxIiwicmVzIiwic2VuZCIsImxpc3RlbiJdLCJtYXBwaW5ncyI6Ijs7QUFDQTs7QUFDQTs7QUFTUTs7QUFFUjs7OztBQWJBO0FBSUEsSUFBUUEsT0FBTyxHQUFXQyxPQUFPLENBQUMsU0FBRCxDQUFqQztBQUFBLElBQ1FDLEdBQUcsR0FBZUYsT0FBTyxFQURqQyxDLENBRUE7OztBQUNBLElBQVFHLEtBQUssR0FBYUMsT0FBTyxDQUFDQyxHQUFSLENBQVlDLElBQVosSUFBb0IsSUFBOUM7QUFBQSxJQUNRQyxZQUFZLEdBQU0sQ0FEMUI7O0FBT0FDLHFCQUFTQyxHQUFULENBQWEsa0JBQWIsRUFBaUMsS0FBakM7O0FBQ0FELHFCQUFTRSxPQUFULENBQWlCLHVHQUFqQixFQUEwSDtBQUN4SEMsRUFBQUEsZUFBZSxFQUFFO0FBRHVHLENBQTFILEVBRUdDLElBRkgsQ0FFUSxZQUFNO0FBQ1ZDLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLGlDQUFaO0FBQ0gsQ0FKRDs7QUFNQSxJQUFJQyxnQkFBSjtBQUNFLElBQUlDLEtBQUssR0FBRyxDQUFaOztBQUNGLFNBQVNDLG1CQUFULEdBQThCO0FBQzFCLDZDQUFjTCxJQUFkLENBQW1CLFVBQUFNLElBQUksRUFBRztBQUN0QkYsSUFBQUEsS0FBSztBQUNMSCxJQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUUsS0FBWjtBQUNBRCxJQUFBQSxnQkFBZ0IsR0FBR0csSUFBbkI7QUFDRixHQUpGO0FBS0g7O0FBQ0RDLFdBQVcsQ0FBQ0YsbUJBQUQsRUFBc0JWLFlBQVksR0FBRyxJQUFyQyxDQUFYOztBQUNBLFNBQVNhLFdBQVQsR0FBdUI7QUFDckIsTUFBSUMsS0FBSyxHQUFHLElBQUlDLElBQUosRUFBWjtBQUNBLE1BQUlDLElBQUksR0FBR0YsS0FBSyxDQUFDRyxXQUFOLEtBQXNCLEdBQXRCLElBQTZCSCxLQUFLLENBQUNJLFFBQU4sS0FBbUIsQ0FBaEQsSUFBcUQsR0FBckQsR0FBMkRKLEtBQUssQ0FBQ0ssT0FBTixFQUEzRCxHQUE2RSxHQUE3RSxHQUFtRkwsS0FBSyxDQUFDTSxRQUFOLEVBQW5GLEdBQXNHLEdBQXRHLEdBQTRHTixLQUFLLENBQUNPLFVBQU4sRUFBdkg7QUFFQSxNQUFNQyxhQUFhLEdBQUcsSUFBSUMsdUJBQUosQ0FBZ0I7QUFDcENDLElBQUFBLElBQUksRUFBRWhCLGdCQUFnQixDQUFDaUIsUUFEYTtBQUVwQ1YsSUFBQUEsSUFBSSxFQUFFQztBQUY4QixHQUFoQixDQUF0QjtBQUlBTSxFQUFBQSxhQUFhLENBQUNJLElBQWQsR0FBcUJyQixJQUFyQixDQUEwQjtBQUFBLFdBQU1DLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLHVCQUFaLENBQU47QUFBQSxHQUExQjtBQUlEOztBQUlELElBQUlPLEtBQUssR0FBRyxJQUFJQyxJQUFKLEVBQVo7QUFDQSxJQUFJWSxJQUFJLEdBQUcsSUFBSVosSUFBSixFQUFYO0FBQ0EsSUFBSWEsZ0JBQWdCLEdBQUcsQ0FBQyxLQUFLRCxJQUFJLENBQUNFLFVBQUwsRUFBTixJQUEyQixJQUFsRDtBQUNBQyxVQUFVLENBQUMsWUFBWTtBQUNyQmxCLEVBQUFBLFdBQVcsQ0FBQ0MsV0FBRCxFQUFjLEtBQWQsQ0FBWDtBQUNBQSxFQUFBQSxXQUFXO0FBQ1osQ0FIUyxFQUdQZSxnQkFITyxDQUFWO0FBS0EsSUFBSUcsR0FBRyxHQUFHdEMsT0FBTyxFQUFqQjtBQUVBc0MsR0FBRyxDQUFDQyxHQUFKLENBQVEsY0FBUixFQUF3QixVQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBWTtBQUNoQ0EsRUFBQUEsR0FBRyxDQUFDQyxJQUFKLENBQVMzQixnQkFBVDtBQUNILENBRkQ7QUFNQXVCLEdBQUcsQ0FBQ0ssTUFBSixDQUFXeEMsS0FBWCxFQUFrQixZQUFJO0FBQ2xCVSxFQUFBQSxPQUFPLENBQUNDLEdBQVIsdUNBQTJDWCxLQUEzQztBQUNILENBRkQiLCJzb3VyY2VSb290IjoiL1VzZXJzL3JvYmVydGZhbmtoYXVzZXIvRG9jdW1lbnRzL0dpdEh1Yi9Tb2NjZXItU2lnbmFscy1BUEkvU2VydmljZXMvRGF0YS1SZXRyaWV2YWwiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbXBvcnRzXG5pbXBvcnQge3JlZnJlc2hEYXRhfSBmcm9tIFwiLi9Nb2R1bGVzL1Nwb3J0bW9ua3NfQXBpX0Nvbm5lY3RcIlxuaW1wb3J0IHsgbG9va3VwIH0gZnJvbSBcImRuc1wiO1xuXG5jb25zdCAgIGV4cHJlc3MgICAgICAgICA9IHJlcXVpcmUoXCJleHByZXNzXCIpLFxuICAgICAgICBBcGkgICAgICAgICAgICAgPSBleHByZXNzKCk7XG4vLyBWYXJpYWJsZXNcbmNvbnN0ICAgJHBvcnQgICAgICAgICAgID0gcHJvY2Vzcy5lbnYuUE9SVCB8fCA3MTAwLFxuICAgICAgICAkcmVmcmVzaFJhdGUgICAgPSAzO1xuXG5cbiAgICAgICAgaW1wb3J0IGRhdGFVcGRhdGVzIGZyb20gICcuL0RhdGFiYXNlIE1vZGVscy9EYXRhLUhpc3RvcnknXG4gXG5pbXBvcnQgbW9uZ29vc2UgZnJvbSBcIm1vbmdvb3NlXCJcbm1vbmdvb3NlLnNldCgndXNlRmluZEFuZE1vZGlmeScsIGZhbHNlKTtcbm1vbmdvb3NlLmNvbm5lY3QoJ21vbmdvZGIrc3J2Oi8vcm9iZXJ0a2luZ3NsZXlpdjpNb21wZXgzNUBAQGNsdXN0ZXIwLWFybG9nLm1vbmdvZGIubmV0L3Rlc3Q/cmV0cnlXcml0ZXM9dHJ1ZSZ3PW1ham9yaXR5Jywge1xuICB1c2VOZXdVcmxQYXJzZXI6IHRydWVcbn0pLnRoZW4oKCkgPT4ge1xuICAgIGNvbnNvbGUubG9nKFwiRGF0YWJhc2UgQ29ubmVjdGlvbiBFc3RhYmxpc2hlZFwiKVxufSk7XG5cbnZhciBBUFBMSUNBVElPTl9EQVRBXG4gIHZhciBjb3VudCA9IDBcbmZ1bmN0aW9uIGdldEFwaURhdGFBbmRTZXRWYXIoKXtcbiAgICByZWZyZXNoRGF0YSgpLnRoZW4oZGF0YSA9PntcbiAgICAgICAgY291bnQrK1xuICAgICAgICBjb25zb2xlLmxvZyhjb3VudClcbiAgICAgICAgQVBQTElDQVRJT05fREFUQSA9IGRhdGFcbiAgICAgfSlcbn1cbnNldEludGVydmFsKGdldEFwaURhdGFBbmRTZXRWYXIsICRyZWZyZXNoUmF0ZSAqIDEwMDApXG5mdW5jdGlvbiBvbk5ld01pbnV0ZSgpIHtcbiAgdmFyIHRvZGF5ID0gbmV3IERhdGUoKTtcbiAgdmFyIGRhdGUgPSB0b2RheS5nZXRGdWxsWWVhcigpICsgJy0nICsgKHRvZGF5LmdldE1vbnRoKCkgKyAxKSArICctJyArIHRvZGF5LmdldERhdGUoKSArIFwiIFwiICsgdG9kYXkuZ2V0SG91cnMoKSArIFwiOlwiICsgdG9kYXkuZ2V0TWludXRlcygpO1xuXG4gIGNvbnN0IHVwZGF0ZUhpc3RvcnkgPSBuZXcgZGF0YVVwZGF0ZXMoe1xuICAgIERhdGE6IEFQUExJQ0FUSU9OX0RBVEEuZmluaXNoZWQsXG4gICAgRGF0ZTogZGF0ZVxuICB9KTtcbiAgdXBkYXRlSGlzdG9yeS5zYXZlKCkudGhlbigoKSA9PiBjb25zb2xlLmxvZygnRGF0YSBIaXN0b3J5IFVwbG9hZGVkJykpO1xuXG5cblxufVxuXG5cblxudmFyIHRvZGF5ID0gbmV3IERhdGUoKTtcbnZhciB0aW1lID0gbmV3IERhdGUoKTtcbnZhciBzZWNvbmRzUmVtYWluaW5nID0gKDYwIC0gdGltZS5nZXRTZWNvbmRzKCkpICogMTAwMFxuc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gIHNldEludGVydmFsKG9uTmV3TWludXRlLCA2MDAwMCk7XG4gIG9uTmV3TWludXRlKClcbn0sIHNlY29uZHNSZW1haW5pbmcpO1xuXG52YXIgYXBwID0gZXhwcmVzcygpXG5cbmFwcC5nZXQoXCIvY2xpZW50LWRhdGFcIiwgKHJlcSwgcmVzKT0+e1xuICAgIHJlcy5zZW5kKEFQUExJQ0FUSU9OX0RBVEEpXG59KVxuXG5cblxuYXBwLmxpc3RlbigkcG9ydCwgKCk9PntcbiAgICBjb25zb2xlLmxvZyhgSFRUUC9TIFNlcnZlciBMaXN0ZW5pbmcgb246ICR7JHBvcnR9YClcbn0pXG5cblxuXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "express",
        "require",
        "Api",
        "$port",
        "process",
        "env",
        "PORT",
        "$refreshRate",
        "mongoose",
        "set",
        "connect",
        "useNewUrlParser",
        "then",
        "console",
        "log",
        "APPLICATION_DATA",
        "count",
        "getApiDataAndSetVar",
        "data",
        "setInterval",
        "onNewMinute",
        "today",
        "Date",
        "date",
        "getFullYear",
        "getMonth",
        "getDate",
        "getHours",
        "getMinutes",
        "updateHistory",
        "dataUpdates",
        "Data",
        "finished",
        "save",
        "time",
        "secondsRemaining",
        "getSeconds",
        "setTimeout",
        "app",
        "get",
        "req",
        "res",
        "send",
        "listen"
      ],
      "mappings": ";;AACA;;AACA;;AASQ;;AAER;;;;AAbA;AAIA,IAAQA,OAAO,GAAWC,OAAO,CAAC,SAAD,CAAjC;AAAA,IACQC,GAAG,GAAeF,OAAO,EADjC,C,CAEA;;;AACA,IAAQG,KAAK,GAAaC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAA9C;AAAA,IACQC,YAAY,GAAM,CAD1B;;AAOAC,qBAASC,GAAT,CAAa,kBAAb,EAAiC,KAAjC;;AACAD,qBAASE,OAAT,CAAiB,uGAAjB,EAA0H;AACxHC,EAAAA,eAAe,EAAE;AADuG,CAA1H,EAEGC,IAFH,CAEQ,YAAM;AACVC,EAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AACH,CAJD;;AAMA,IAAIC,gBAAJ;AACE,IAAIC,KAAK,GAAG,CAAZ;;AACF,SAASC,mBAAT,GAA8B;AAC1B,6CAAcL,IAAd,CAAmB,UAAAM,IAAI,EAAG;AACtBF,IAAAA,KAAK;AACLH,IAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACAD,IAAAA,gBAAgB,GAAGG,IAAnB;AACF,GAJF;AAKH;;AACDC,WAAW,CAACF,mBAAD,EAAsBV,YAAY,GAAG,IAArC,CAAX;;AACA,SAASa,WAAT,GAAuB;AACrB,MAAIC,KAAK,GAAG,IAAIC,IAAJ,EAAZ;AACA,MAAIC,IAAI,GAAGF,KAAK,CAACG,WAAN,KAAsB,GAAtB,IAA6BH,KAAK,CAACI,QAAN,KAAmB,CAAhD,IAAqD,GAArD,GAA2DJ,KAAK,CAACK,OAAN,EAA3D,GAA6E,GAA7E,GAAmFL,KAAK,CAACM,QAAN,EAAnF,GAAsG,GAAtG,GAA4GN,KAAK,CAACO,UAAN,EAAvH;AAEA,MAAMC,aAAa,GAAG,IAAIC,uBAAJ,CAAgB;AACpCC,IAAAA,IAAI,EAAEhB,gBAAgB,CAACiB,QADa;AAEpCV,IAAAA,IAAI,EAAEC;AAF8B,GAAhB,CAAtB;AAIAM,EAAAA,aAAa,CAACI,IAAd,GAAqBrB,IAArB,CAA0B;AAAA,WAAMC,OAAO,CAACC,GAAR,CAAY,uBAAZ,CAAN;AAAA,GAA1B;AAID;;AAID,IAAIO,KAAK,GAAG,IAAIC,IAAJ,EAAZ;AACA,IAAIY,IAAI,GAAG,IAAIZ,IAAJ,EAAX;AACA,IAAIa,gBAAgB,GAAG,CAAC,KAAKD,IAAI,CAACE,UAAL,EAAN,IAA2B,IAAlD;AACAC,UAAU,CAAC,YAAY;AACrBlB,EAAAA,WAAW,CAACC,WAAD,EAAc,KAAd,CAAX;AACAA,EAAAA,WAAW;AACZ,CAHS,EAGPe,gBAHO,CAAV;AAKA,IAAIG,GAAG,GAAGtC,OAAO,EAAjB;AAEAsC,GAAG,CAACC,GAAJ,CAAQ,cAAR,EAAwB,UAACC,GAAD,EAAMC,GAAN,EAAY;AAChCA,EAAAA,GAAG,CAACC,IAAJ,CAAS3B,gBAAT;AACH,CAFD;AAMAuB,GAAG,CAACK,MAAJ,CAAWxC,KAAX,EAAkB,YAAI;AAClBU,EAAAA,OAAO,CAACC,GAAR,uCAA2CX,KAA3C;AACH,CAFD",
      "sourceRoot": "/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval",
      "sourcesContent": [
        "// Imports\nimport {refreshData} from \"./Modules/Sportmonks_Api_Connect\"\nimport { lookup } from \"dns\";\n\nconst   express         = require(\"express\"),\n        Api             = express();\n// Variables\nconst   $port           = process.env.PORT || 7100,\n        $refreshRate    = 3;\n\n\n        import dataUpdates from  './Database Models/Data-History'\n \nimport mongoose from \"mongoose\"\nmongoose.set('useFindAndModify', false);\nmongoose.connect('mongodb+srv://robertkingsleyiv:Mompex35@@@cluster0-arlog.mongodb.net/test?retryWrites=true&w=majority', {\n  useNewUrlParser: true\n}).then(() => {\n    console.log(\"Database Connection Established\")\n});\n\nvar APPLICATION_DATA\n  var count = 0\nfunction getApiDataAndSetVar(){\n    refreshData().then(data =>{\n        count++\n        console.log(count)\n        APPLICATION_DATA = data\n     })\n}\nsetInterval(getApiDataAndSetVar, $refreshRate * 1000)\nfunction onNewMinute() {\n  var today = new Date();\n  var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate() + \" \" + today.getHours() + \":\" + today.getMinutes();\n\n  const updateHistory = new dataUpdates({\n    Data: APPLICATION_DATA.finished,\n    Date: date\n  });\n  updateHistory.save().then(() => console.log('Data History Uploaded'));\n\n\n\n}\n\n\n\nvar today = new Date();\nvar time = new Date();\nvar secondsRemaining = (60 - time.getSeconds()) * 1000\nsetTimeout(function () {\n  setInterval(onNewMinute, 60000);\n  onNewMinute()\n}, secondsRemaining);\n\nvar app = express()\n\napp.get(\"/client-data\", (req, res)=>{\n    res.send(APPLICATION_DATA)\n})\n\n\n\napp.listen($port, ()=>{\n    console.log(`HTTP/S Server Listening on: ${$port}`)\n})\n\n\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1562411782664
  },
  "{\"sourceRoot\":\"/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval/Modules\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval\",\"filename\":\"/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval/Modules/Sportmonks_Api_Connect.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval/Modules",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval",
      "filename": "/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval/Modules/Sportmonks_Api_Connect.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval/Modules/Sportmonks_Api_Connect.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval/Modules/Sportmonks_Api_Connect.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval/Modules",
        "sourceFileName": "Sportmonks_Api_Connect.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.countriesDownload = countriesDownload;\nexports.refreshData = refreshData;\n\nvar _DataHistory = _interopRequireDefault(require(\"./../Database Models/Data-History\"));\n\nvar _User = _interopRequireDefault(require(\"./../Database Models/User\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar SportmonksApi = require(\"sportmonks\").SportmonksApi;\n\nvar apiKey = \"e26BGpAseLRsnrB0jg01ZnSyZFeLNq8b8ruymhZvR5xe9zYRxKnUVJsd6f5p\";\nvar sportmonks = new SportmonksApi(apiKey);\n\nvar _ = require('lodash');\n\nvar livescoreParams = {\n  localTeam: true,\n  visitorTeam: true,\n  odds: true,\n  inplayOdds: true,\n  stats: true,\n  league: true\n};\nvar countries = [];\n\nfunction $time() {\n  var today = new Date();\n  var MS_PER_MINUTE = 60000;\n  var fiveMinutesAgo = new Date(today - 5 * MS_PER_MINUTE);\n  var tenMinutesAgo = new Date(today - 10 * MS_PER_MINUTE);\n  var fifteenMinutesAgo = new Date(today - 15 * MS_PER_MINUTE);\n  var fiveMinutesAgoParsed = fiveMinutesAgo.getFullYear() + '-' + (fiveMinutesAgo.getMonth() + 1) + '-' + fiveMinutesAgo.getDate() + \" \" + fiveMinutesAgo.getHours() + \":\" + fiveMinutesAgo.getMinutes();\n  var tenMinutesAgoParsed = tenMinutesAgo.getFullYear() + '-' + (tenMinutesAgo.getMonth() + 1) + '-' + tenMinutesAgo.getDate() + \" \" + tenMinutesAgo.getHours() + \":\" + tenMinutesAgo.getMinutes();\n  var fifteenMinutesAgoParsed = fifteenMinutesAgo.getFullYear() + '-' + (fifteenMinutesAgo.getMonth() + 1) + '-' + fifteenMinutesAgo.getDate() + \" \" + fifteenMinutesAgo.getHours() + \":\" + fifteenMinutesAgo.getMinutes();\n  return {\n    fiveMinutesAgoParsed: fiveMinutesAgoParsed,\n    tenMinutesAgoParsed: tenMinutesAgoParsed,\n    fifteenMinutesAgoParsed: fifteenMinutesAgoParsed\n  };\n}\n\nfunction countriesDownload(cb) {\n  return new Promise(function (resolve) {\n    sportmonks.get(\"v2.0/countries\", {\n      page: 1\n    }).then(function (resp) {\n      countries = resp.data;\n      sportmonks.get(\"v2.0/countries\", {\n        page: 2\n      }).then(function (resp) {\n        var a = countries.concat(resp.data);\n        sportmonks.get(\"v2.0/countries\", {\n          page: 3\n        }).then(function (resp) {\n          var b = a.concat(resp.data);\n          sportmonks.get(\"v2.0/countries\", {\n            page: 4\n          }).then(function (resp) {\n            var c = b.concat(resp.data);\n            sportmonks.get(\"v2.0/countries\", {\n              page: 5\n            }).then(function (resp) {\n              var d = c.concat(resp.data);\n              console.log(\"Countries Downloaded.\");\n              countries = d;\n              resolve(countries);\n            });\n          });\n        });\n      });\n    });\n  });\n}\n\nfunction refreshData() {\n  return new Promise(function (resolve) {\n    var finished = [];\n    var leagues = [];\n    var games = [];\n    var playingLeagues = []; // Declare Time Variables\n\n    var fiveMinutesAgo = $time().fiveMinutesAgoParsed;\n    var tenMinutesAgo = $time().tenMinutesAgoParsed;\n    var fifteenMinutesAgo = $time().fifteenMinutesAgoParsed;\n    sportmonks.get(\"v2.0/livescores\", livescoreParams).then(function (resp) {\n      var apiData = resp.data;\n      var dataFiveMinAgo = [];\n      var dataTenMinAgo = [];\n      var dataFifteenMinAgo = [];\n\n      _DataHistory[\"default\"].find({\n        Date: fiveMinutesAgo\n      }, function (err, resp) {\n        dataFiveMinAgo = resp[resp.length - 1];\n\n        _DataHistory[\"default\"].find({\n          Date: tenMinutesAgo\n        }, function (err, resp) {\n          dataTenMinAgo = resp[resp.length - 1];\n\n          _DataHistory[\"default\"].find({\n            Date: fifteenMinutesAgo\n          }, function (err, resp) {\n            dataFifteenMinAgo = resp[resp.length - 1];\n            apiData.forEach(function (current_value, index) {\n              var gameOdds = [];\n              var bkmkrArr = [];\n              var inplayOdds = [];\n\n              if (dataFiveMinAgo != null || undefined) {\n                var finallys = [];\n                dataFiveMinAgo.Data.forEach(function (league) {\n                  league.children.forEach(function (child) {\n                    if (child.id === current_value.id) {\n                      finallys.push(_.pick(child, 'id', 'localTeam_stats', 'visitorTeam_stats'));\n                    }\n                  });\n                });\n              }\n\n              if (dataTenMinAgo != null || undefined) {\n                var finallys2 = [];\n                dataTenMinAgo.Data.forEach(function (league) {\n                  league.children.forEach(function (child) {\n                    if (child.id === current_value.id) {\n                      finallys2.push(_.pick(child, 'id', 'localTeam_stats', 'visitorTeam_stats'));\n                    }\n                  });\n                });\n              }\n\n              if (dataFifteenMinAgo != null || undefined) {\n                var finallys3 = [];\n                dataFifteenMinAgo.Data.forEach(function (league) {\n                  league.children.forEach(function (child) {\n                    if (child.id === current_value.id) {\n                      finallys3.push(_.pick(child, 'id', 'localTeam_stats', 'visitorTeam_stats'));\n                    }\n                  });\n                });\n              }\n\n              current_value.odds.data.forEach(function (odds) {\n                if (odds.name === \"3Way Result\") {\n                  gameOdds.push({\n                    name: odds.name,\n                    bookmakers: odds.bookmaker.data.filter(function (bookmaker) {\n                      return bookmaker.name === \"bet365\" || bookmaker.name === \"Betfair\";\n                    }).map(function (ofChosenBookmakers) {\n                      return {\n                        name: ofChosenBookmakers.name,\n                        data: ofChosenBookmakers.odds.data.map(function (dataItem) {\n                          return {\n                            \"name\": dataItem.label,\n                            \"value\": dataItem.value\n                          };\n                        })\n                      };\n                    })\n                  });\n                }\n              });\n              current_value.inplayOdds.data.forEach(function (inplayOdd) {\n                if (inplayOdd.market_id === 1) {\n                  inplayOdds.push({\n                    inplayOdd: inplayOdd\n                  });\n                }\n              });\n              playingLeagues.push({\n                \"id\": current_value.league.data.id,\n                \"Name\": current_value.league.data.name,\n                \"Logo\": current_value.league.data.logo_path,\n                \"Country\": current_value.league.data.country_id\n              });\n              games.push({\n                \"id\": current_value.id,\n                \"match\": \"\".concat(current_value.localTeam.data.name, \" VS \").concat(current_value.visitorTeam.data.name),\n                \"time\": current_value.time.minute,\n                \"league\": _.pick(current_value.league.data, 'id', 'name', 'country_id'),\n                \"localTeam\": {\n                  // data: _.pick(current_value.localTeam.data,\n                  //     'id',\n                  //     'name',\n                  //     'logo_path'\n                  // )\n                  data: current_value.localTeam.data\n                },\n                \"visitorTeam\": {\n                  // data: _.pick(current_value.visitorTeam.data,\n                  //     'id',\n                  //     'name',\n                  //     'logo_path'\n                  // )\n                  data: current_value.visitorTeam.data\n                },\n                \"scores\": {\n                  localteam_score: current_value.scores.localteam_score,\n                  visitorteam_score: current_value.scores.visitorteam_score\n                },\n                \"localTeam_stats\": current_value.stats.data[0],\n                \"visitorTeam_stats\": current_value.stats.data[1],\n                \"odds\": gameOdds,\n                \"liveOdds\": inplayOdds,\n                \"fiveMinHistory\": finallys,\n                \"TenMinHistory\": finallys2,\n                \"fifteenMinHistory\": finallys3\n              });\n            });\n            leagues = Array.from(new Set(playingLeagues.map(function (a) {\n              return a.id;\n            }))).map(function (id) {\n              return playingLeagues.find(function (a) {\n                return a.id === id;\n              });\n            });\n            leagues.forEach(function (league, index) {\n              finished.push({\n                league: league.Name,\n                id: league.id,\n                league_country: countries.filter(function (country) {\n                  return country.id === league.Country;\n                }),\n                children: games.filter(function (game) {\n                  return game.league.id === league.id;\n                })\n              });\n            });\n            resolve({\n              finished: finished,\n              games: games\n            });\n          });\n        });\n      });\n    });\n  });\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlNwb3J0bW9ua3NfQXBpX0Nvbm5lY3QuanMiXSwibmFtZXMiOlsiU3BvcnRtb25rc0FwaSIsInJlcXVpcmUiLCJhcGlLZXkiLCJzcG9ydG1vbmtzIiwiXyIsImxpdmVzY29yZVBhcmFtcyIsImxvY2FsVGVhbSIsInZpc2l0b3JUZWFtIiwib2RkcyIsImlucGxheU9kZHMiLCJzdGF0cyIsImxlYWd1ZSIsImNvdW50cmllcyIsIiR0aW1lIiwidG9kYXkiLCJEYXRlIiwiTVNfUEVSX01JTlVURSIsImZpdmVNaW51dGVzQWdvIiwidGVuTWludXRlc0FnbyIsImZpZnRlZW5NaW51dGVzQWdvIiwiZml2ZU1pbnV0ZXNBZ29QYXJzZWQiLCJnZXRGdWxsWWVhciIsImdldE1vbnRoIiwiZ2V0RGF0ZSIsImdldEhvdXJzIiwiZ2V0TWludXRlcyIsInRlbk1pbnV0ZXNBZ29QYXJzZWQiLCJmaWZ0ZWVuTWludXRlc0Fnb1BhcnNlZCIsImNvdW50cmllc0Rvd25sb2FkIiwiY2IiLCJQcm9taXNlIiwicmVzb2x2ZSIsImdldCIsInBhZ2UiLCJ0aGVuIiwicmVzcCIsImRhdGEiLCJhIiwiY29uY2F0IiwiYiIsImMiLCJkIiwiY29uc29sZSIsImxvZyIsInJlZnJlc2hEYXRhIiwiZmluaXNoZWQiLCJsZWFndWVzIiwiZ2FtZXMiLCJwbGF5aW5nTGVhZ3VlcyIsImFwaURhdGEiLCJkYXRhRml2ZU1pbkFnbyIsImRhdGFUZW5NaW5BZ28iLCJkYXRhRmlmdGVlbk1pbkFnbyIsImRhdGFVcGRhdGVzIiwiZmluZCIsImVyciIsImxlbmd0aCIsImZvckVhY2giLCJjdXJyZW50X3ZhbHVlIiwiaW5kZXgiLCJnYW1lT2RkcyIsImJrbWtyQXJyIiwidW5kZWZpbmVkIiwiZmluYWxseXMiLCJEYXRhIiwiY2hpbGRyZW4iLCJjaGlsZCIsImlkIiwicHVzaCIsInBpY2siLCJmaW5hbGx5czIiLCJmaW5hbGx5czMiLCJuYW1lIiwiYm9va21ha2VycyIsImJvb2ttYWtlciIsImZpbHRlciIsIm1hcCIsIm9mQ2hvc2VuQm9va21ha2VycyIsImRhdGFJdGVtIiwibGFiZWwiLCJ2YWx1ZSIsImlucGxheU9kZCIsIm1hcmtldF9pZCIsImxvZ29fcGF0aCIsImNvdW50cnlfaWQiLCJ0aW1lIiwibWludXRlIiwibG9jYWx0ZWFtX3Njb3JlIiwic2NvcmVzIiwidmlzaXRvcnRlYW1fc2NvcmUiLCJBcnJheSIsImZyb20iLCJTZXQiLCJOYW1lIiwibGVhZ3VlX2NvdW50cnkiLCJjb3VudHJ5IiwiQ291bnRyeSIsImdhbWUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBTUE7O0FBQ0k7Ozs7QUFMQSxJQUFNQSxhQUFhLEdBQUdDLE9BQU8sQ0FBQyxZQUFELENBQVAsQ0FBc0JELGFBQTVDOztBQUNBLElBQU1FLE1BQU0sR0FBRyw4REFBZjtBQUNBLElBQU1DLFVBQVUsR0FBRyxJQUFJSCxhQUFKLENBQWtCRSxNQUFsQixDQUFuQjs7QUFJQSxJQUFJRSxDQUFDLEdBQUdILE9BQU8sQ0FBQyxRQUFELENBQWY7O0FBRUEsSUFBSUksZUFBZSxHQUFHO0FBQ2xCQyxFQUFBQSxTQUFTLEVBQUUsSUFETztBQUVsQkMsRUFBQUEsV0FBVyxFQUFFLElBRks7QUFHbEJDLEVBQUFBLElBQUksRUFBRSxJQUhZO0FBSWxCQyxFQUFBQSxVQUFVLEVBQUUsSUFKTTtBQUtsQkMsRUFBQUEsS0FBSyxFQUFFLElBTFc7QUFNbEJDLEVBQUFBLE1BQU0sRUFBRTtBQU5VLENBQXRCO0FBVUEsSUFBSUMsU0FBUyxHQUFHLEVBQWhCOztBQUNBLFNBQVNDLEtBQVQsR0FBaUI7QUFFVCxNQUFJQyxLQUFLLEdBQUcsSUFBSUMsSUFBSixFQUFaO0FBRUEsTUFBSUMsYUFBYSxHQUFHLEtBQXBCO0FBQ0EsTUFBSUMsY0FBYyxHQUFHLElBQUlGLElBQUosQ0FBU0QsS0FBSyxHQUFHLElBQUlFLGFBQXJCLENBQXJCO0FBQ0EsTUFBSUUsYUFBYSxHQUFHLElBQUlILElBQUosQ0FBU0QsS0FBSyxHQUFHLEtBQUtFLGFBQXRCLENBQXBCO0FBQ0EsTUFBSUcs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SCxhQWhCRDtBQWlCQXBDLFlBQUFBLE9BQU8sQ0FBQztBQUNKYyxjQUFBQSxRQUFRLEVBQVJBLFFBREk7QUFFSkUsY0FBQUEsS0FBSyxFQUFMQTtBQUZJLGFBQUQsQ0FBUDtBQUlILFdBaExEO0FBaUxILFNBckxEO0FBc0xILE9BMUxEO0FBMkxILEtBbE1EO0FBbU1ILEdBaE5NLENBQVA7QUFpTkgiLCJzb3VyY2VSb290IjoiL1VzZXJzL3JvYmVydGZhbmtoYXVzZXIvRG9jdW1lbnRzL0dpdEh1Yi9Tb2NjZXItU2lnbmFscy1BUEkvU2VydmljZXMvRGF0YS1SZXRyaWV2YWwvTW9kdWxlcyIsInNvdXJjZXNDb250ZW50IjpbIlxuXG4gICAgY29uc3QgU3BvcnRtb25rc0FwaSA9IHJlcXVpcmUoXCJzcG9ydG1vbmtzXCIpLlNwb3J0bW9ua3NBcGk7XG4gICAgY29uc3QgYXBpS2V5ID0gXCJlMjZCR3BBc2VMUnNuckIwamcwMVpuU3laRmVMTnE4YjhydXltaFp2UjV4ZTl6WVJ4S25VVkpzZDZmNXBcIjtcbiAgICBjb25zdCBzcG9ydG1vbmtzID0gbmV3IFNwb3J0bW9ua3NBcGkoYXBpS2V5KTtcblxuaW1wb3J0IGRhdGFVcGRhdGVzIGZyb20gICcuLy4uL0RhdGFiYXNlIE1vZGVscy9EYXRhLUhpc3RvcnknXG4gICAgaW1wb3J0IFVzZXIgZnJvbSAnLi8uLi9EYXRhYmFzZSBNb2RlbHMvVXNlcidcbiAgICB2YXIgXyA9IHJlcXVpcmUoJ2xvZGFzaCcpXG5cbiAgICB2YXIgbGl2ZXNjb3JlUGFyYW1zID0ge1xuICAgICAgICBsb2NhbFRlYW06IHRydWUsXG4gICAgICAgIHZpc2l0b3JUZWFtOiB0cnVlLFxuICAgICAgICBvZGRzOiB0cnVlLFxuICAgICAgICBpbnBsYXlPZGRzOiB0cnVlLFxuICAgICAgICBzdGF0czogdHJ1ZSxcbiAgICAgICAgbGVhZ3VlOiB0cnVlLFxuICAgIFxuICAgIH1cbiAgICBcbiAgICB2YXIgY291bnRyaWVzID0gW11cbiAgICBmdW5jdGlvbiAkdGltZSgpIHtcbiAgICBcbiAgICAgICAgICAgIHZhciB0b2RheSA9IG5ldyBEYXRlKCk7XG4gICAgXG4gICAgICAgICAgICB2YXIgTVNfUEVSX01JTlVURSA9IDYwMDAwO1xuICAgICAgICAgICAgdmFyIGZpdmVNaW51dGVzQWdvID0gbmV3IERhdGUodG9kYXkgLSA1ICogTVNfUEVSX01JTlVURSk7XG4gICAgICAgICAgICB2YXIgdGVuTWludXRlc0FnbyA9IG5ldyBEYXRlKHRvZGF5IC0gMTAgKiBNU19QRVJfTUlOVVRFKTtcbiAgICAgICAgICAgIHZhciBmaWZ0ZWVuTWludXRlc0FnbyA9IG5ldyBEYXRlKHRvZGF5IC0gMTUgKiBNU19QRVJfTUlOVVRFKTtcbiAgICAgICAgICAgIHZhciBmaXZlTWludXRlc0Fnb1BhcnNlZCA9IGZpdmVNaW51dGVzQWdvLmdldEZ1bGxZZWFyKCkgKyAnLScgKyAoZml2ZU1pbnV0ZXNBZ28uZ2V0TW9udGgoKSArIDEpICsgJy0nICsgZml2ZU1pbnV0ZXNBZ28uZ2V0RGF0ZSgpICsgXCIgXCIgKyBmaXZlTWludXRlc0Fnby5nZXRIb3VycygpICsgXCI6XCIgKyBmaXZlTWludXRlc0Fnby5nZXRNaW51dGVzKCk7XG4gICAgICAgICAgICB2YXIgdGVuTWludXRlc0Fnb1BhcnNlZCA9IHRlbk1pbnV0ZXNBZ28uZ2V0RnVsbFllYXIoKSArICctJyArICh0ZW5NaW51dGVzQWdvLmdldE1vbnRoKCkgKyAxKSArICctJyArIHRlbk1pbnV0ZXNBZ28uZ2V0RGF0ZSgpICsgXCIgXCIgKyB0ZW5NaW51dGVzQWdvLmdldEhvdXJzKCkgKyBcIjpcIiArIHRlbk1pbnV0ZXNBZ28uZ2V0TWludXRlcygpO1xuICAgICAgICAgICAgdmFyIGZpZnRlZW5NaW51dGVzQWdvUGFyc2VkID0gZmlmdGVlbk1pbnV0ZXNBZ28uZ2V0RnVsbFllYXIoKSArICctJyArIChmaWZ0ZWVuTWludXRlc0Fnby5nZXRNb250aCgpICsgMSkgKyAnLScgKyBmaWZ0ZWVuTWludXRlc0Fnby5nZXREYXRlKCkgKyBcIiBcIiArIGZpZnRlZW5NaW51dGVzQWdvLmdldEhvdXJzKCkgKyBcIjpcIiArIGZpZnRlZW5NaW51dGVzQWdvLmdldE1pbnV0ZXMoKTtcbiAgICAgICAgXG4gICAgICAgICAgICByZXR1cm4gKHtcbiAgICAgICAgICAgICAgICBmaXZlTWludXRlc0Fnb1BhcnNlZCxcbiAgICAgICAgICAgICAgICB0ZW5NaW51dGVzQWdvUGFyc2VkLFxuICAgICAgICAgICAgICAgIGZpZnRlZW5NaW51dGVzQWdvUGFyc2VkXG4gICAgICAgICAgICB9KVxuICAgIFxuICAgIFxuICAgIFxuICAgIH1cbiAgICBcblxuICAgICAgIGV4cG9ydCBmdW5jdGlvbiBjb3VudHJpZXNEb3dubG9hZCAoY2IpIHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSkge1xuICAgICAgICAgICAgICAgIHNwb3J0bW9ua3MuZ2V0KFwidjIuMC9jb3VudHJpZXNcIiwge1xuICAgICAgICAgICAgICAgICAgICBwYWdlOiAxXG4gICAgICAgICAgICAgICAgfSkudGhlbihyZXNwID0+IHtcbiAgICAgICAgICAgICAgICAgICAgY291bnRyaWVzID0gcmVzcC5kYXRhXG4gICAgICAgICAgICAgICAgICAgIHNwb3J0bW9ua3MuZ2V0KFwidjIuMC9jb3VudHJpZXNcIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgcGFnZTogMlxuICAgICAgICAgICAgICAgICAgICB9KS50aGVuKHJlc3AgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGEgPSBjb3VudHJpZXMuY29uY2F0KHJlc3AuZGF0YSlcbiAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgIHNwb3J0bW9ua3MuZ2V0KFwidjIuMC9jb3VudHJpZXNcIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhZ2U6IDNcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pLnRoZW4ocmVzcCA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGIgPSBhLmNvbmNhdChyZXNwLmRhdGEpXG4gICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3BvcnRtb25rcy5nZXQoXCJ2Mi4wL2NvdW50cmllc1wiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhZ2U6IDRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KS50aGVuKHJlc3AgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgYyA9IGIuY29uY2F0KHJlc3AuZGF0YSlcbiAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3BvcnRtb25rcy5nZXQoXCJ2Mi4wL2NvdW50cmllc1wiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYWdlOiA1XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pLnRoZW4ocmVzcCA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgZCA9IGMuY29uY2F0KHJlc3AuZGF0YSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiQ291bnRyaWVzIERvd25sb2FkZWQuXCIpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb3VudHJpZXMgPSBkXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXNvbHZlKGNvdW50cmllcylcbiAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICBcbiAgICAgICAgICAgICAgICAgICAgfSlcbiAgICBcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuICAgICAgICBleHBvcnQgZnVuY3Rpb24gcmVmcmVzaERhdGEgKCkge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlKSB7XG4gICAgICAgICAgICAgICAgdmFyIGZpbmlzaGVkID0gW11cbiAgICAgICAgICAgICAgICB2YXIgbGVhZ3VlcyA9IFtdXG4gICAgICAgICAgICAgICAgdmFyIGdhbWVzID0gW11cbiAgICAgICAgICAgICAgICB2YXIgcGxheWluZ0xlYWd1ZXMgPSBbXVxuICAgICAgICAgICBcbiAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgLy8gRGVjbGFyZSBUaW1lIFZhcmlhYmxlc1xuICAgICAgICAgICAgICAgIHZhciBmaXZlTWludXRlc0FnbyA9ICR0aW1lKCkuZml2ZU1pbnV0ZXNBZ29QYXJzZWRcbiAgICAgICAgICAgICAgICB2YXIgdGVuTWludXRlc0FnbyA9ICR0aW1lKCkudGVuTWludXRlc0Fnb1BhcnNlZFxuICAgICAgICAgICAgICAgIHZhciBmaWZ0ZWVuTWludXRlc0FnbyA9ICR0aW1lKCkuZmlmdGVlbk1pbnV0ZXNBZ29QYXJzZWRcbiAgICBcbiAgICBcbiAgICAgICAgICAgICAgICBzcG9ydG1vbmtzLmdldChcInYyLjAvbGl2ZXNjb3Jlc1wiLCBsaXZlc2NvcmVQYXJhbXMpLnRoZW4ocmVzcCA9PiB7XG4gICAgICAgICAgICAgXG4gICAgICAgICAgICAgdmFyICAgICAgIGFwaURhdGEgPSByZXNwLmRhdGFcbiAgICAgICAgICAgICAgICAgICAgdmFyIGRhdGFGaXZlTWluQWdvID0gW11cbiAgICAgICAgICAgICAgICAgICAgdmFyIGRhdGFUZW5NaW5BZ28gPSBbXVxuICAgICAgICAgICAgICAgICAgICB2YXIgZGF0YUZpZnRlZW5NaW5BZ28gPSBbXVxuICAgIFxuICAgICAgICAgICAgICAgICAgICBkYXRhVXBkYXRlcy5maW5kKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIERhdGU6IGZpdmVNaW51dGVzQWdvXG4gICAgICAgICAgICAgICAgICAgIH0sIChlcnIsIHJlc3ApID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGFGaXZlTWluQWdvID0gcmVzcFtyZXNwLmxlbmd0aCAtIDFdXG4gICAgICAgICAgICAgICAgICAgICAgICBkYXRhVXBkYXRlcy5maW5kKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBEYXRlOiB0ZW5NaW51dGVzQWdvXG4gICAgICAgICAgICAgICAgICAgICAgICB9LCAoZXJyLCByZXNwKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YVRlbk1pbkFnbyA9IHJlc3BbcmVzcC5sZW5ndGggLSAxXVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGFVcGRhdGVzLmZpbmQoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBEYXRlOiBmaWZ0ZWVuTWludXRlc0Fnb1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sIChlcnIsIHJlc3ApID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YUZpZnRlZW5NaW5BZ28gPSByZXNwW3Jlc3AubGVuZ3RoIC0gMV1cbiAgICBcbiAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXBpRGF0YS5mb3JFYWNoKChjdXJyZW50X3ZhbHVlLCBpbmRleCkgPT4ge1xuICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGdhbWVPZGRzID0gW11cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBia21rckFyciA9IFtdXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgaW5wbGF5T2RkcyA9IFtdXG4gICAgXG4gICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZGF0YUZpdmVNaW5BZ28gIT0gbnVsbCB8fCB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgZmluYWxseXMgPSBbXVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGFGaXZlTWluQWdvLkRhdGEuZm9yRWFjaChsZWFndWUgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZWFndWUuY2hpbGRyZW4uZm9yRWFjaChjaGlsZCA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoY2hpbGQuaWQgPT09IGN1cnJlbnRfdmFsdWUuaWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmaW5hbGx5cy5wdXNoKF8ucGljayhjaGlsZCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2lkJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2xvY2FsVGVhbV9zdGF0cycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICd2aXNpdG9yVGVhbV9zdGF0cydcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZGF0YVRlbk1pbkFnbyAhPSBudWxsIHx8IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBmaW5hbGx5czIgPSBbXVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGFUZW5NaW5BZ28uRGF0YS5mb3JFYWNoKGxlYWd1ZSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxlYWd1ZS5jaGlsZHJlbi5mb3JFYWNoKGNoaWxkID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChjaGlsZC5pZCA9PT0gY3VycmVudF92YWx1ZS5pZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpbmFsbHlzMi5wdXNoKF8ucGljayhjaGlsZCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2lkJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2xvY2FsVGVhbV9zdGF0cycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICd2aXNpdG9yVGVhbV9zdGF0cydcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZGF0YUZpZnRlZW5NaW5BZ28gIT0gbnVsbCB8fCB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgZmluYWxseXMzID0gW11cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhRmlmdGVlbk1pbkFnby5EYXRhLmZvckVhY2gobGVhZ3VlID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGVhZ3VlLmNoaWxkcmVuLmZvckVhY2goY2hpbGQgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGNoaWxkLmlkID09PSBjdXJyZW50X3ZhbHVlLmlkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmluYWxseXMzLnB1c2goXy5waWNrKGNoaWxkLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnaWQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnbG9jYWxUZWFtX3N0YXRzJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3Zpc2l0b3JUZWFtX3N0YXRzJ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICkpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICBcbiAgICBcbiAgICBcbiAgICBcbiAgICBcbiAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbnRfdmFsdWUub2Rkcy5kYXRhLmZvckVhY2gob2RkcyA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG9kZHMubmFtZSA9PT0gXCIzV2F5IFJlc3VsdFwiKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdhbWVPZGRzLnB1c2goe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IG9kZHMubmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBib29rbWFrZXJzOiBvZGRzLmJvb2ttYWtlci5kYXRhLmZpbHRlcihib29rbWFrZXIgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gYm9va21ha2VyLm5hbWUgPT09IFwiYmV0MzY1XCIgfHwgYm9va21ha2VyLm5hbWUgPT09IFwiQmV0ZmFpclwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSkubWFwKG9mQ2hvc2VuQm9va21ha2VycyA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBvZkNob3NlbkJvb2ttYWtlcnMubmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGE6IG9mQ2hvc2VuQm9va21ha2Vycy5vZGRzLmRhdGEubWFwKGRhdGFJdGVtID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIm5hbWVcIjogZGF0YUl0ZW0ubGFiZWwsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwidmFsdWVcIjogZGF0YUl0ZW0udmFsdWVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjdXJyZW50X3ZhbHVlLmlucGxheU9kZHMuZGF0YS5mb3JFYWNoKGlucGxheU9kZCA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGlucGxheU9kZC5tYXJrZXRfaWQgPT09IDEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5wbGF5T2Rkcy5wdXNoKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlucGxheU9kZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICBcbiAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgXG4gICAgXG4gICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwbGF5aW5nTGVhZ3Vlcy5wdXNoKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImlkXCI6IGN1cnJlbnRfdmFsdWUubGVhZ3VlLmRhdGEuaWQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJOYW1lXCI6IGN1cnJlbnRfdmFsdWUubGVhZ3VlLmRhdGEubmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIkxvZ29cIjogY3VycmVudF92YWx1ZS5sZWFndWUuZGF0YS5sb2dvX3BhdGgsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJDb3VudHJ5XCI6IGN1cnJlbnRfdmFsdWUubGVhZ3VlLmRhdGEuY291bnRyeV9pZFxuICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdhbWVzLnB1c2goe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiaWRcIjogY3VycmVudF92YWx1ZS5pZCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIm1hdGNoXCI6IGAke2N1cnJlbnRfdmFsdWUubG9jYWxUZWFtLmRhdGEubmFtZX0gVlMgJHtjdXJyZW50X3ZhbHVlLnZpc2l0b3JUZWFtLmRhdGEubmFtZX1gLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwidGltZVwiOiBjdXJyZW50X3ZhbHVlLnRpbWUubWludXRlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwibGVhZ3VlXCI6IF8ucGljayhjdXJyZW50X3ZhbHVlLmxlYWd1ZS5kYXRhLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnaWQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnbmFtZScsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdjb3VudHJ5X2lkJ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJsb2NhbFRlYW1cIjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBkYXRhOiBfLnBpY2soY3VycmVudF92YWx1ZS5sb2NhbFRlYW0uZGF0YSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICdpZCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAnbmFtZScsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAnbG9nb19wYXRoJ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyApXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGE6IGN1cnJlbnRfdmFsdWUubG9jYWxUZWFtLmRhdGFcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwidmlzaXRvclRlYW1cIjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBkYXRhOiBfLnBpY2soY3VycmVudF92YWx1ZS52aXNpdG9yVGVhbS5kYXRhLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgJ2lkJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICduYW1lJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICdsb2dvX3BhdGgnXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YTogY3VycmVudF92YWx1ZS52aXNpdG9yVGVhbS5kYXRhXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcInNjb3Jlc1wiOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxvY2FsdGVhbV9zY29yZTogY3VycmVudF92YWx1ZS5zY29yZXMubG9jYWx0ZWFtX3Njb3JlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2aXNpdG9ydGVhbV9zY29yZTogY3VycmVudF92YWx1ZS5zY29yZXMudmlzaXRvcnRlYW1fc2NvcmVcbiAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwibG9jYWxUZWFtX3N0YXRzXCI6IGN1cnJlbnRfdmFsdWUuc3RhdHMuZGF0YVswXSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcInZpc2l0b3JUZWFtX3N0YXRzXCI6IGN1cnJlbnRfdmFsdWUuc3RhdHMuZGF0YVsxXSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIm9kZHNcIjogZ2FtZU9kZHMsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJsaXZlT2Rkc1wiOiBpbnBsYXlPZGRzLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiZml2ZU1pbkhpc3RvcnlcIjogZmluYWxseXMsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJUZW5NaW5IaXN0b3J5XCI6IGZpbmFsbHlzMixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImZpZnRlZW5NaW5IaXN0b3J5XCI6IGZpbmFsbHlzMyxcbiAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxlYWd1ZXMgPSBBcnJheS5mcm9tKG5ldyBTZXQocGxheWluZ0xlYWd1ZXMubWFwKGEgPT4gYS5pZCkpKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLm1hcChpZCA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHBsYXlpbmdMZWFndWVzLmZpbmQoYSA9PiBhLmlkID09PSBpZClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxlYWd1ZXMuZm9yRWFjaCgobGVhZ3VlLCBpbmRleCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmluaXNoZWQucHVzaCh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxlYWd1ZTogbGVhZ3VlLk5hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlkOiBsZWFndWUuaWQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGVhZ3VlX2NvdW50cnk6IGNvdW50cmllcy5maWx0ZXIoY291bnRyeSA9PiB7cmV0dXJuIGNvdW50cnkuaWQgPT09IGxlYWd1ZS5Db3VudHJ5fSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBnYW1lcy5maWx0ZXIoZ2FtZSA9PiB7XG4gICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZ2FtZS5sZWFndWUuaWQgPT09IGxlYWd1ZS5pZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIClcbiAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZSh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmaW5pc2hlZCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdhbWVzXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIH0pXG4gICAgICAgIH1cblxuICAgIFxuICAgIFxuICAgIFxuICAgIFxuICAgIFxuICAgIFxuICAgIFxuICAgIFxuXG4gXG5cblxuXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "Sportmonks_Api_Connect.js"
      ],
      "names": [
        "SportmonksApi",
        "require",
        "apiKey",
        "sportmonks",
        "_",
        "livescoreParams",
        "localTeam",
        "visitorTeam",
        "odds",
        "inplayOdds",
        "stats",
        "league",
        "countries",
        "$time",
        "today",
        "Date",
        "MS_PER_MINUTE",
        "fiveMinutesAgo",
        "tenMinutesAgo",
        "fifteenMinutesAgo",
        "fiveMinutesAgoParsed",
        "getFullYear",
        "getMonth",
        "getDate",
        "getHours",
        "getMinutes",
        "tenMinutesAgoParsed",
        "fifteenMinutesAgoParsed",
        "countriesDownload",
        "cb",
        "Promise",
        "resolve",
        "get",
        "page",
        "then",
        "resp",
        "data",
        "a",
        "concat",
        "b",
        "c",
        "d",
        "console",
        "log",
        "refreshData",
        "finished",
        "leagues",
        "games",
        "playingLeagues",
        "apiData",
        "dataFiveMinAgo",
        "dataTenMinAgo",
        "dataFifteenMinAgo",
        "dataUpdates",
        "find",
        "err",
        "length",
        "forEach",
        "current_value",
        "index",
        "gameOdds",
        "bkmkrArr",
        "undefined",
        "finallys",
        "Data",
        "children",
        "child",
        "id",
        "push",
        "pick",
        "finallys2",
        "finallys3",
        "name",
        "bookmakers",
        "bookmaker",
        "filter",
        "map",
        "ofChosenBookmakers",
        "dataItem",
        "label",
        "value",
        "inplayOdd",
        "market_id",
        "logo_path",
        "country_id",
        "time",
        "minute",
        "localteam_score",
        "scores",
        "visitorteam_score",
        "Array",
        "from",
        "Set",
        "Name",
        "league_country",
        "country",
        "Country",
        "game"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval/Modules",
      "sourcesContent": [
        "\n\n    const SportmonksApi = require(\"sportmonks\").SportmonksApi;\n    const apiKey = \"e26BGpAseLRsnrB0jg01ZnSyZFeLNq8b8ruymhZvR5xe9zYRxKnUVJsd6f5p\";\n    const sportmonks = new SportmonksApi(apiKey);\n\nimport dataUpdates from  './../Database Models/Data-History'\n    import User from './../Database Models/User'\n    var _ = require('lodash')\n\n    var livescoreParams = {\n        localTeam: true,\n        visitorTeam: true,\n        odds: true,\n        inplayOdds: true,\n        stats: true,\n        league: true,\n    \n    }\n    \n    var countries = []\n    function $time() {\n    \n            var today = new Date();\n    \n            var MS_PER_MINUTE = 60000;\n            var fiveMinutesAgo = new Date(today - 5 * MS_PER_MINUTE);\n            var tenMinutesAgo = new Date(today - 10 * MS_PER_MINUTE);\n            var fifteenMinutesAgo = new Date(today - 15 * MS_PER_MINUTE);\n            var fiveMinutesAgoParsed = fiveMinutesAgo.getFullYear() + '-' + (fiveMinutesAgo.getMonth() + 1) + '-' + fiveMinutesAgo.getDate() + \" \" + fiveMinutesAgo.getHours() + \":\" + fiveMinutesAgo.getMinutes();\n            var tenMinutesAgoParsed = tenMinutesAgo.getFullYear() + '-' + (tenMinutesAgo.getMonth() + 1) + '-' + tenMinutesAgo.getDate() + \" \" + tenMinutesAgo.getHours() + \":\" + tenMinutesAgo.getMinutes();\n            var fifteenMinutesAgoParsed = fifteenMinutesAgo.getFullYear() + '-' + (fifteenMinutesAgo.getMonth() + 1) + '-' + fifteenMinutesAgo.getDate() + \" \" + fifteenMinutesAgo.getHours() + \":\" + fifteenMinutesAgo.getMinutes();\n        \n            return ({\n                fiveMinutesAgoParsed,\n                tenMinutesAgoParsed,\n                fifteenMinutesAgoParsed\n            })\n    \n    \n    \n    }\n    \n\n       export function countriesDownload (cb) {\n            return new Promise(function (resolve) {\n                sportmonks.get(\"v2.0/countries\", {\n                    page: 1\n                }).then(resp => {\n                    countries = resp.data\n                    sportmonks.get(\"v2.0/countries\", {\n                        page: 2\n                    }).then(resp => {\n                        var a = countries.concat(resp.data)\n    \n                        sportmonks.get(\"v2.0/countries\", {\n                            page: 3\n                        }).then(resp => {\n                            var b = a.concat(resp.data)\n    \n                            sportmonks.get(\"v2.0/countries\", {\n                                page: 4\n                            }).then(resp => {\n                                var c = b.concat(resp.data)\n    \n                                sportmonks.get(\"v2.0/countries\", {\n                                    page: 5\n                                }).then(resp => {\n                                    var d = c.concat(resp.data)\n                                    console.log(\"Countries Downloaded.\")\n                                    countries = d\n                                    resolve(countries)\n    \n                                })\n                            })\n    \n                        })\n    \n                    })\n    \n                })\n            })\n        }\n        export function refreshData () {\n            return new Promise(function (resolve) {\n                var finished = []\n                var leagues = []\n                var games = []\n                var playingLeagues = []\n           \n           \n                // Declare Time Variables\n                var fiveMinutesAgo = $time().fiveMinutesAgoParsed\n                var tenMinutesAgo = $time().tenMinutesAgoParsed\n                var fifteenMinutesAgo = $time().fifteenMinutesAgoParsed\n    \n    \n                sportmonks.get(\"v2.0/livescores\", livescoreParams).then(resp => {\n             \n             var       apiData = resp.data\n                    var dataFiveMinAgo = []\n                    var dataTenMinAgo = []\n                    var dataFifteenMinAgo = []\n    \n                    dataUpdates.find({\n                        Date: fiveMinutesAgo\n                    }, (err, resp) => {\n                        dataFiveMinAgo = resp[resp.length - 1]\n                        dataUpdates.find({\n                            Date: tenMinutesAgo\n                        }, (err, resp) => {\n                            dataTenMinAgo = resp[resp.length - 1]\n                            dataUpdates.find({\n                                Date: fifteenMinutesAgo\n                            }, (err, resp) => {\n                                dataFifteenMinAgo = resp[resp.length - 1]\n    \n    \n                                apiData.forEach((current_value, index) => {\n    \n                                    var gameOdds = []\n                                    var bkmkrArr = []\n                                    var inplayOdds = []\n    \n    \n                                    if (dataFiveMinAgo != null || undefined) {\n                                        var finallys = []\n                                        dataFiveMinAgo.Data.forEach(league => {\n                                            league.children.forEach(child => {\n                                                if (child.id === current_value.id) {\n                                                    finallys.push(_.pick(child,\n                                                        'id',\n                                                        'localTeam_stats',\n                                                        'visitorTeam_stats'\n                                                    ))\n                                                }\n                                            })\n    \n                                        })\n                                    }\n    \n                                    if (dataTenMinAgo != null || undefined) {\n                                        var finallys2 = []\n                                        dataTenMinAgo.Data.forEach(league => {\n                                            league.children.forEach(child => {\n                                                if (child.id === current_value.id) {\n                                                    finallys2.push(_.pick(child,\n                                                        'id',\n                                                        'localTeam_stats',\n                                                        'visitorTeam_stats'\n                                                    ))\n                                                }\n                                            })\n    \n                                        })\n                                    }\n    \n                                    if (dataFifteenMinAgo != null || undefined) {\n                                        var finallys3 = []\n                                        dataFifteenMinAgo.Data.forEach(league => {\n                                            league.children.forEach(child => {\n                                                if (child.id === current_value.id) {\n                                                    finallys3.push(_.pick(child,\n                                                        'id',\n                                                        'localTeam_stats',\n                                                        'visitorTeam_stats'\n                                                    ))\n                                                }\n                                            })\n    \n                                        })\n                                    }\n    \n    \n    \n    \n    \n    \n                                    current_value.odds.data.forEach(odds => {\n                                        if (odds.name === \"3Way Result\") {\n                                            gameOdds.push({\n                                                    name: odds.name,\n                                                    bookmakers: odds.bookmaker.data.filter(bookmaker => {\n                                                        return bookmaker.name === \"bet365\" || bookmaker.name === \"Betfair\"\n                                                    }).map(ofChosenBookmakers => {\n                                                        return {\n                                                            name: ofChosenBookmakers.name,\n                                                            data: ofChosenBookmakers.odds.data.map(dataItem => {\n                                                                return {\n                                                                    \"name\": dataItem.label,\n                                                                    \"value\": dataItem.value\n                                                                }\n                                                            })\n    \n                                                        }\n                                                    })\n    \n                                                }\n    \n                                            )\n                                        }\n                                    })\n                                    current_value.inplayOdds.data.forEach(inplayOdd => {\n                                        if (inplayOdd.market_id === 1) {\n                                            inplayOdds.push({\n                                                inplayOdd\n                                            })\n                                        }\n    \n    \n                                    })\n    \n    \n    \n                                    playingLeagues.push({\n                                        \"id\": current_value.league.data.id,\n                                        \"Name\": current_value.league.data.name,\n                                        \"Logo\": current_value.league.data.logo_path,\n                                        \"Country\": current_value.league.data.country_id\n    \n                                    })\n                                    games.push({\n                                        \"id\": current_value.id,\n                                        \"match\": `${current_value.localTeam.data.name} VS ${current_value.visitorTeam.data.name}`,\n                                        \"time\": current_value.time.minute,\n                                        \"league\": _.pick(current_value.league.data,\n                                            'id',\n                                            'name',\n                                            'country_id'\n                                        ),\n                                        \"localTeam\": {\n                                            // data: _.pick(current_value.localTeam.data,\n                                            //     'id',\n                                            //     'name',\n                                            //     'logo_path'\n                                            // )\n                                            data: current_value.localTeam.data\n                                        },\n                                        \"visitorTeam\": {\n                                            // data: _.pick(current_value.visitorTeam.data,\n                                            //     'id',\n                                            //     'name',\n                                            //     'logo_path'\n                                            // )\n                                            data: current_value.visitorTeam.data\n                                        },\n                                        \"scores\": {\n                                            localteam_score: current_value.scores.localteam_score,\n                                            visitorteam_score: current_value.scores.visitorteam_score\n    \n                                        },\n    \n                                        \"localTeam_stats\": current_value.stats.data[0],\n                                        \"visitorTeam_stats\": current_value.stats.data[1],\n                                        \"odds\": gameOdds,\n                                        \"liveOdds\": inplayOdds,\n                                        \"fiveMinHistory\": finallys,\n                                        \"TenMinHistory\": finallys2,\n                                        \"fifteenMinHistory\": finallys3,\n    \n                                    })\n    \n                                })\n                                leagues = Array.from(new Set(playingLeagues.map(a => a.id)))\n                                    .map(id => {\n                                        return playingLeagues.find(a => a.id === id)\n                                    })\n                                leagues.forEach((league, index) => {\n                                    finished.push({\n                                            league: league.Name,\n                                            id: league.id,\n                              \n                                            league_country: countries.filter(country => {return country.id === league.Country}),\n                                           \n    \n                                            children: games.filter(game => {\n    \n                                                return game.league.id === league.id\n                                            })\n                                        }\n    \n                                    )\n    \n                                })\n                                resolve({\n                                    finished,\n                                    games\n                                })\n                            });\n                        });\n                    });\n                })\n            })\n        }\n\n    \n    \n    \n    \n    \n    \n    \n    \n\n \n\n\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1562410169105
  },
  "{\"sourceRoot\":\"/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval/Database Models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval\",\"filename\":\"/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval/Database Models/Data-History.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval/Database Models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval",
      "filename": "/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval/Database Models/Data-History.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval/Database Models/Data-History.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval/Database Models/Data-History.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval/Database Models",
        "sourceFileName": "Data-History.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar mongoose = require('mongoose');\n\nvar _default = mongoose.model('DataHistory', {\n  Data: Array,\n  Date: String\n});\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkRhdGEtSGlzdG9yeS5qcyJdLCJuYW1lcyI6WyJtb25nb29zZSIsInJlcXVpcmUiLCJtb2RlbCIsIkRhdGEiLCJBcnJheSIsIkRhdGUiLCJTdHJpbmciXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSxJQUFNQSxRQUFRLEdBQUdDLE9BQU8sQ0FBQyxVQUFELENBQXhCOztlQUdlRCxRQUFRLENBQUNFLEtBQVQsQ0FBZSxhQUFmLEVBQThCO0FBQUVDLEVBQUFBLElBQUksRUFBRUMsS0FBUjtBQUFlQyxFQUFBQSxJQUFJLEVBQUVDO0FBQXJCLENBQTlCLEMiLCJzb3VyY2VSb290IjoiL1VzZXJzL3JvYmVydGZhbmtoYXVzZXIvRG9jdW1lbnRzL0dpdEh1Yi9Tb2NjZXItU2lnbmFscy1BUEkvU2VydmljZXMvRGF0YS1SZXRyaWV2YWwvRGF0YWJhc2UgTW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgbW9uZ29vc2UgPSByZXF1aXJlKCdtb25nb29zZScpO1xuXG5cbmV4cG9ydCBkZWZhdWx0IG1vbmdvb3NlLm1vZGVsKCdEYXRhSGlzdG9yeScsIHsgRGF0YTogQXJyYXksIERhdGU6IFN0cmluZyB9KSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "Data-History.js"
      ],
      "names": [
        "mongoose",
        "require",
        "model",
        "Data",
        "Array",
        "Date",
        "String"
      ],
      "mappings": ";;;;;;;AAAA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;eAGeD,QAAQ,CAACE,KAAT,CAAe,aAAf,EAA8B;AAAEC,EAAAA,IAAI,EAAEC,KAAR;AAAeC,EAAAA,IAAI,EAAEC;AAArB,CAA9B,C",
      "sourceRoot": "/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval/Database Models",
      "sourcesContent": [
        "const mongoose = require('mongoose');\n\n\nexport default mongoose.model('DataHistory', { Data: Array, Date: String })"
      ]
    },
    "sourceType": "script",
    "mtime": 1562359979109
  },
  "{\"sourceRoot\":\"/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval/Database Models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval\",\"filename\":\"/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval/Database Models/User.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval/Database Models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval",
      "filename": "/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval/Database Models/User.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval/Database Models/User.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval/Database Models/User.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval/Database Models",
        "sourceFileName": "User.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar mongoose = require('mongoose');\n\nvar _default = mongoose.model('User', {\n  _id: String,\n  email: String,\n  name: {\n    first: String,\n    Middle: String,\n    Last: String\n  },\n  userData: {\n    filters: [],\n    signals: [],\n    shortList: []\n  },\n  signalAlerts: [],\n  currentlyTrueSignals: []\n});\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlVzZXIuanMiXSwibmFtZXMiOlsibW9uZ29vc2UiLCJyZXF1aXJlIiwibW9kZWwiLCJfaWQiLCJTdHJpbmciLCJlbWFpbCIsIm5hbWUiLCJmaXJzdCIsIk1pZGRsZSIsIkxhc3QiLCJ1c2VyRGF0YSIsImZpbHRlcnMiLCJzaWduYWxzIiwic2hvcnRMaXN0Iiwic2lnbmFsQWxlcnRzIiwiY3VycmVudGx5VHJ1ZVNpZ25hbHMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSxJQUFNQSxRQUFRLEdBQUdDLE9BQU8sQ0FBQyxVQUFELENBQXhCOztlQUdlRCxRQUFRLENBQUNFLEtBQVQsQ0FBZSxNQUFmLEVBQXVCO0FBQ2xDQyxFQUFBQSxHQUFHLEVBQUdDLE1BRDRCO0FBRWxDQyxFQUFBQSxLQUFLLEVBQUVELE1BRjJCO0FBR2xDRSxFQUFBQSxJQUFJLEVBQUU7QUFBQ0MsSUFBQUEsS0FBSyxFQUFFSCxNQUFSO0FBQWdCSSxJQUFBQSxNQUFNLEVBQUNKLE1BQXZCO0FBQStCSyxJQUFBQSxJQUFJLEVBQUNMO0FBQXBDLEdBSDRCO0FBSWxDTSxFQUFBQSxRQUFRLEVBQUU7QUFDTkMsSUFBQUEsT0FBTyxFQUFFLEVBREg7QUFFTkMsSUFBQUEsT0FBTyxFQUFFLEVBRkg7QUFHTkMsSUFBQUEsU0FBUyxFQUFFO0FBSEwsR0FKd0I7QUFTbENDLEVBQUFBLFlBQVksRUFBQyxFQVRxQjtBQVVsQ0MsRUFBQUEsb0JBQW9CLEVBQUU7QUFWWSxDQUF2QixDIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9yb2JlcnRmYW5raGF1c2VyL0RvY3VtZW50cy9HaXRIdWIvU29jY2VyLVNpZ25hbHMtQVBJL1NlcnZpY2VzL0RhdGEtUmV0cmlldmFsL0RhdGFiYXNlIE1vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IG1vbmdvb3NlID0gcmVxdWlyZSgnbW9uZ29vc2UnKTtcblxuXG5leHBvcnQgZGVmYXVsdCBtb25nb29zZS5tb2RlbCgnVXNlcicsIHsgXG4gICAgX2lkOiAgU3RyaW5nLFxuICAgIGVtYWlsOiBTdHJpbmcsXG4gICAgbmFtZToge2ZpcnN0OiBTdHJpbmcsIE1pZGRsZTpTdHJpbmcsIExhc3Q6U3RyaW5nfSwgXG4gICAgdXNlckRhdGE6IHtcbiAgICAgICAgZmlsdGVyczogW10sXG4gICAgICAgIHNpZ25hbHM6IFtdLFxuICAgICAgICBzaG9ydExpc3Q6IFtdLFxuICAgICAgfSxcbiAgICBzaWduYWxBbGVydHM6W10sXG4gICAgY3VycmVudGx5VHJ1ZVNpZ25hbHM6IFtdXG5cbn0pIl19",
    "map": {
      "version": 3,
      "sources": [
        "User.js"
      ],
      "names": [
        "mongoose",
        "require",
        "model",
        "_id",
        "String",
        "email",
        "name",
        "first",
        "Middle",
        "Last",
        "userData",
        "filters",
        "signals",
        "shortList",
        "signalAlerts",
        "currentlyTrueSignals"
      ],
      "mappings": ";;;;;;;AAAA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;eAGeD,QAAQ,CAACE,KAAT,CAAe,MAAf,EAAuB;AAClCC,EAAAA,GAAG,EAAGC,MAD4B;AAElCC,EAAAA,KAAK,EAAED,MAF2B;AAGlCE,EAAAA,IAAI,EAAE;AAACC,IAAAA,KAAK,EAAEH,MAAR;AAAgBI,IAAAA,MAAM,EAACJ,MAAvB;AAA+BK,IAAAA,IAAI,EAACL;AAApC,GAH4B;AAIlCM,EAAAA,QAAQ,EAAE;AACNC,IAAAA,OAAO,EAAE,EADH;AAENC,IAAAA,OAAO,EAAE,EAFH;AAGNC,IAAAA,SAAS,EAAE;AAHL,GAJwB;AASlCC,EAAAA,YAAY,EAAC,EATqB;AAUlCC,EAAAA,oBAAoB,EAAE;AAVY,CAAvB,C",
      "sourceRoot": "/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval/Database Models",
      "sourcesContent": [
        "const mongoose = require('mongoose');\n\n\nexport default mongoose.model('User', { \n    _id:  String,\n    email: String,\n    name: {first: String, Middle:String, Last:String}, \n    userData: {\n        filters: [],\n        signals: [],\n        shortList: [],\n      },\n    signalAlerts:[],\n    currentlyTrueSignals: []\n\n})"
      ]
    },
    "sourceType": "script",
    "mtime": 1562360004174
  }
}