{
  "{\"sourceRoot\":\"/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval\",\"filename\":\"/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval/app.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval",
      "filename": "/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval/app.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval/app.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval/app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _Sportmonks_Api_Connect = require(\"./Modules/Sportmonks_Api_Connect\");\n\nvar _dns = require(\"dns\");\n\nvar _DataHistory = _interopRequireDefault(require(\"./Database Models/Data-History\"));\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// Imports\nArray.prototype.diff = function (a) {\n  return this.filter(function (i) {\n    return a.indexOf(i) < 0;\n  });\n};\n\nvar express = require(\"express\"),\n    Api = express(); // Variables\n\n\nvar $port = process.env.PORT || 7100,\n    $refreshRate = 3;\n\n_mongoose[\"default\"].set('useFindAndModify', false);\n\n_mongoose[\"default\"].connect('mongodb+srv://robertkingsleyiv:Mompex35@@@cluster0-arlog.mongodb.net/test?retryWrites=true&w=majority', {\n  useNewUrlParser: true\n}).then(function () {\n  console.log(\"Database Connection Established\");\n});\n\nvar APPLICATION_DATA;\nvar count = 0;\n\nfunction getApiDataAndSetVar() {\n  (0, _Sportmonks_Api_Connect.refreshData)().then(function (data) {\n    count++;\n    console.log(count);\n    APPLICATION_DATA = data;\n  });\n}\n\nsetInterval(getApiDataAndSetVar, $refreshRate * 1000);\n\nfunction onNewMinute() {\n  var today = new Date();\n  var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate() + \" \" + today.getHours() + \":\" + today.getMinutes();\n  var updateHistory = new _DataHistory[\"default\"]({\n    Data: APPLICATION_DATA.finished,\n    Date: date\n  });\n  updateHistory.save().then(function () {\n    return console.log('Data History Uploaded');\n  });\n}\n\nvar today = new Date();\nvar time = new Date();\nvar secondsRemaining = (60 - time.getSeconds()) * 1000;\nsetTimeout(function () {\n  setInterval(onNewMinute, 60000);\n  onNewMinute();\n}, secondsRemaining);\nvar app = express();\napp.get(\"/client-data\", function (req, res) {\n  res.send(APPLICATION_DATA);\n});\napp.listen($port, function () {\n  console.log(\"HTTP/S Server Listening on: \".concat($port));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJBcnJheSIsInByb3RvdHlwZSIsImRpZmYiLCJhIiwiZmlsdGVyIiwiaSIsImluZGV4T2YiLCJleHByZXNzIiwicmVxdWlyZSIsIkFwaSIsIiRwb3J0IiwicHJvY2VzcyIsImVudiIsIlBPUlQiLCIkcmVmcmVzaFJhdGUiLCJtb25nb29zZSIsInNldCIsImNvbm5lY3QiLCJ1c2VOZXdVcmxQYXJzZXIiLCJ0aGVuIiwiY29uc29sZSIsImxvZyIsIkFQUExJQ0FUSU9OX0RBVEEiLCJjb3VudCIsImdldEFwaURhdGFBbmRTZXRWYXIiLCJkYXRhIiwic2V0SW50ZXJ2YWwiLCJvbk5ld01pbnV0ZSIsInRvZGF5IiwiRGF0ZSIsImRhdGUiLCJnZXRGdWxsWWVhciIsImdldE1vbnRoIiwiZ2V0RGF0ZSIsImdldEhvdXJzIiwiZ2V0TWludXRlcyIsInVwZGF0ZUhpc3RvcnkiLCJkYXRhVXBkYXRlcyIsIkRhdGEiLCJmaW5pc2hlZCIsInNhdmUiLCJ0aW1lIiwic2Vjb25kc1JlbWFpbmluZyIsImdldFNlY29uZHMiLCJzZXRUaW1lb3V0IiwiYXBwIiwiZ2V0IiwicmVxIiwicmVzIiwic2VuZCIsImxpc3RlbiJdLCJtYXBwaW5ncyI6Ijs7QUFDQTs7QUFDQTs7QUFXUTs7QUFFUjs7OztBQWZBO0FBR0FBLEtBQUssQ0FBQ0MsU0FBTixDQUFnQkMsSUFBaEIsR0FBdUIsVUFBU0MsQ0FBVCxFQUFZO0FBQy9CLFNBQU8sS0FBS0MsTUFBTCxDQUFZLFVBQVNDLENBQVQsRUFBWTtBQUFDLFdBQU9GLENBQUMsQ0FBQ0csT0FBRixDQUFVRCxDQUFWLElBQWUsQ0FBdEI7QUFBeUIsR0FBbEQsQ0FBUDtBQUNILENBRkQ7O0FBR0EsSUFBUUUsT0FBTyxHQUFXQyxPQUFPLENBQUMsU0FBRCxDQUFqQztBQUFBLElBQ1FDLEdBQUcsR0FBZUYsT0FBTyxFQURqQyxDLENBRUE7OztBQUNBLElBQVFHLEtBQUssR0FBYUMsT0FBTyxDQUFDQyxHQUFSLENBQVlDLElBQVosSUFBb0IsSUFBOUM7QUFBQSxJQUNRQyxZQUFZLEdBQU0sQ0FEMUI7O0FBT0FDLHFCQUFTQyxHQUFULENBQWEsa0JBQWIsRUFBaUMsS0FBakM7O0FBQ0FELHFCQUFTRSxPQUFULENBQWlCLHVHQUFqQixFQUEwSDtBQUN4SEMsRUFBQUEsZUFBZSxFQUFFO0FBRHVHLENBQTFILEVBRUdDLElBRkgsQ0FFUSxZQUFNO0FBQ1ZDLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLGlDQUFaO0FBQ0gsQ0FKRDs7QUFPQSxJQUFJQyxnQkFBSjtBQUNFLElBQUlDLEtBQUssR0FBRyxDQUFaOztBQUNGLFNBQVNDLG1CQUFULEdBQThCO0FBRTFCLDZDQUFjTCxJQUFkLENBQW1CLFVBQUFNLElBQUksRUFBRztBQUV0QkYsSUFBQUEsS0FBSztBQUNMSCxJQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUUsS0FBWjtBQUNBRCxJQUFBQSxnQkFBZ0IsR0FBR0csSUFBbkI7QUFDRixHQUxGO0FBTUg7O0FBQ0RDLFdBQVcsQ0FBQ0YsbUJBQUQsRUFBc0JWLFlBQVksR0FBRyxJQUFyQyxDQUFYOztBQUNBLFNBQVNhLFdBQVQsR0FBdUI7QUFDckIsTUFBSUMsS0FBSyxHQUFHLElBQUlDLElBQUosRUFBWjtBQUNBLE1BQUlDLElBQUksR0FBR0YsS0FBSyxDQUFDRyxXQUFOLEtBQXNCLEdBQXRCLElBQTZCSCxLQUFLLENBQUNJLFFBQU4sS0FBbUIsQ0FBaEQsSUFBcUQsR0FBckQsR0FBMkRKLEtBQUssQ0FBQ0ssT0FBTixFQUEzRCxHQUE2RSxHQUE3RSxHQUFtRkwsS0FBSyxDQUFDTSxRQUFOLEVBQW5GLEdBQXNHLEdBQXRHLEdBQTRHTixLQUFLLENBQUNPLFVBQU4sRUFBdkg7QUFFQSxNQUFNQyxhQUFhLEdBQUcsSUFBSUMsdUJBQUosQ0FBZ0I7QUFDcENDLElBQUFBLElBQUksRUFBRWhCLGdCQUFnQixDQUFDaUIsUUFEYTtBQUVwQ1YsSUFBQUEsSUFBSSxFQUFFQztBQUY4QixHQUFoQixDQUF0QjtBQUlBTSxFQUFBQSxhQUFhLENBQUNJLElBQWQsR0FBcUJyQixJQUFyQixDQUEwQjtBQUFBLFdBQU1DLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLHVCQUFaLENBQU47QUFBQSxHQUExQjtBQUNEOztBQUNELElBQUlPLEtBQUssR0FBRyxJQUFJQyxJQUFKLEVBQVo7QUFDQSxJQUFJWSxJQUFJLEdBQUcsSUFBSVosSUFBSixFQUFYO0FBQ0EsSUFBSWEsZ0JBQWdCLEdBQUcsQ0FBQyxLQUFLRCxJQUFJLENBQUNFLFVBQUwsRUFBTixJQUEyQixJQUFsRDtBQUNBQyxVQUFVLENBQUMsWUFBWTtBQUNyQmxCLEVBQUFBLFdBQVcsQ0FBQ0MsV0FBRCxFQUFjLEtBQWQsQ0FBWDtBQUNBQSxFQUFBQSxXQUFXO0FBQ1osQ0FIUyxFQUdQZSxnQkFITyxDQUFWO0FBUUEsSUFBSUcsR0FBRyxHQUFHdEMsT0FBTyxFQUFqQjtBQUVBc0MsR0FBRyxDQUFDQyxHQUFKLENBQVEsY0FBUixFQUF3QixVQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBWTtBQUNoQ0EsRUFBQUEsR0FBRyxDQUFDQyxJQUFKLENBQVMzQixnQkFBVDtBQUNILENBRkQ7QUFNQXVCLEdBQUcsQ0FBQ0ssTUFBSixDQUFXeEMsS0FBWCxFQUFrQixZQUFJO0FBQ2xCVSxFQUFBQSxPQUFPLENBQUNDLEdBQVIsdUNBQTJDWCxLQUEzQztBQUNILENBRkQiLCJzb3VyY2VSb290IjoiL1VzZXJzL3JvYmVydGZhbmtoYXVzZXIvRG9jdW1lbnRzL0dpdEh1Yi9Tb2NjZXItU2lnbmFscy1BUEkvU2VydmljZXMvRGF0YS1SZXRyaWV2YWwiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbXBvcnRzXG5pbXBvcnQge3JlZnJlc2hEYXRhfSBmcm9tIFwiLi9Nb2R1bGVzL1Nwb3J0bW9ua3NfQXBpX0Nvbm5lY3RcIlxuaW1wb3J0IHsgbG9va3VwIH0gZnJvbSBcImRuc1wiO1xuQXJyYXkucHJvdG90eXBlLmRpZmYgPSBmdW5jdGlvbihhKSB7XG4gICAgcmV0dXJuIHRoaXMuZmlsdGVyKGZ1bmN0aW9uKGkpIHtyZXR1cm4gYS5pbmRleE9mKGkpIDwgMDt9KTtcbn07XG5jb25zdCAgIGV4cHJlc3MgICAgICAgICA9IHJlcXVpcmUoXCJleHByZXNzXCIpLFxuICAgICAgICBBcGkgICAgICAgICAgICAgPSBleHByZXNzKCk7XG4vLyBWYXJpYWJsZXNcbmNvbnN0ICAgJHBvcnQgICAgICAgICAgID0gcHJvY2Vzcy5lbnYuUE9SVCB8fCA3MTAwLFxuICAgICAgICAkcmVmcmVzaFJhdGUgICAgPSAzO1xuXG5cbiAgICAgICAgaW1wb3J0IGRhdGFVcGRhdGVzIGZyb20gICcuL0RhdGFiYXNlIE1vZGVscy9EYXRhLUhpc3RvcnknXG4gXG5pbXBvcnQgbW9uZ29vc2UgZnJvbSBcIm1vbmdvb3NlXCJcbm1vbmdvb3NlLnNldCgndXNlRmluZEFuZE1vZGlmeScsIGZhbHNlKTtcbm1vbmdvb3NlLmNvbm5lY3QoJ21vbmdvZGIrc3J2Oi8vcm9iZXJ0a2luZ3NsZXlpdjpNb21wZXgzNUBAQGNsdXN0ZXIwLWFybG9nLm1vbmdvZGIubmV0L3Rlc3Q/cmV0cnlXcml0ZXM9dHJ1ZSZ3PW1ham9yaXR5Jywge1xuICB1c2VOZXdVcmxQYXJzZXI6IHRydWVcbn0pLnRoZW4oKCkgPT4ge1xuICAgIGNvbnNvbGUubG9nKFwiRGF0YWJhc2UgQ29ubmVjdGlvbiBFc3RhYmxpc2hlZFwiKVxufSk7XG5cblxudmFyIEFQUExJQ0FUSU9OX0RBVEFcbiAgdmFyIGNvdW50ID0gMFxuZnVuY3Rpb24gZ2V0QXBpRGF0YUFuZFNldFZhcigpe1xuIFxuICAgIHJlZnJlc2hEYXRhKCkudGhlbihkYXRhID0+e1xuXG4gICAgICAgIGNvdW50KytcbiAgICAgICAgY29uc29sZS5sb2coY291bnQpXG4gICAgICAgIEFQUExJQ0FUSU9OX0RBVEEgPSBkYXRhXG4gICAgIH0pXG59XG5zZXRJbnRlcnZhbChnZXRBcGlEYXRhQW5kU2V0VmFyLCAkcmVmcmVzaFJhdGUgKiAxMDAwKVxuZnVuY3Rpb24gb25OZXdNaW51dGUoKSB7XG4gIHZhciB0b2RheSA9IG5ldyBEYXRlKCk7XG4gIHZhciBkYXRlID0gdG9kYXkuZ2V0RnVsbFllYXIoKSArICctJyArICh0b2RheS5nZXRNb250aCgpICsgMSkgKyAnLScgKyB0b2RheS5nZXREYXRlKCkgKyBcIiBcIiArIHRvZGF5LmdldEhvdXJzKCkgKyBcIjpcIiArIHRvZGF5LmdldE1pbnV0ZXMoKTtcblxuICBjb25zdCB1cGRhdGVIaXN0b3J5ID0gbmV3IGRhdGFVcGRhdGVzKHtcbiAgICBEYXRhOiBBUFBMSUNBVElPTl9EQVRBLmZpbmlzaGVkLFxuICAgIERhdGU6IGRhdGVcbiAgfSk7XG4gIHVwZGF0ZUhpc3Rvcnkuc2F2ZSgpLnRoZW4oKCkgPT4gY29uc29sZS5sb2coJ0RhdGEgSGlzdG9yeSBVcGxvYWRlZCcpKTtcbn1cbnZhciB0b2RheSA9IG5ldyBEYXRlKCk7XG52YXIgdGltZSA9IG5ldyBEYXRlKCk7XG52YXIgc2Vjb25kc1JlbWFpbmluZyA9ICg2MCAtIHRpbWUuZ2V0U2Vjb25kcygpKSAqIDEwMDBcbnNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICBzZXRJbnRlcnZhbChvbk5ld01pbnV0ZSwgNjAwMDApO1xuICBvbk5ld01pbnV0ZSgpXG59LCBzZWNvbmRzUmVtYWluaW5nKTtcblxuXG5cblxudmFyIGFwcCA9IGV4cHJlc3MoKVxuXG5hcHAuZ2V0KFwiL2NsaWVudC1kYXRhXCIsIChyZXEsIHJlcyk9PntcbiAgICByZXMuc2VuZChBUFBMSUNBVElPTl9EQVRBKVxufSlcblxuXG5cbmFwcC5saXN0ZW4oJHBvcnQsICgpPT57XG4gICAgY29uc29sZS5sb2coYEhUVFAvUyBTZXJ2ZXIgTGlzdGVuaW5nIG9uOiAkeyRwb3J0fWApXG59KVxuXG5cblxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "Array",
        "prototype",
        "diff",
        "a",
        "filter",
        "i",
        "indexOf",
        "express",
        "require",
        "Api",
        "$port",
        "process",
        "env",
        "PORT",
        "$refreshRate",
        "mongoose",
        "set",
        "connect",
        "useNewUrlParser",
        "then",
        "console",
        "log",
        "APPLICATION_DATA",
        "count",
        "getApiDataAndSetVar",
        "data",
        "setInterval",
        "onNewMinute",
        "today",
        "Date",
        "date",
        "getFullYear",
        "getMonth",
        "getDate",
        "getHours",
        "getMinutes",
        "updateHistory",
        "dataUpdates",
        "Data",
        "finished",
        "save",
        "time",
        "secondsRemaining",
        "getSeconds",
        "setTimeout",
        "app",
        "get",
        "req",
        "res",
        "send",
        "listen"
      ],
      "mappings": ";;AACA;;AACA;;AAWQ;;AAER;;;;AAfA;AAGAA,KAAK,CAACC,SAAN,CAAgBC,IAAhB,GAAuB,UAASC,CAAT,EAAY;AAC/B,SAAO,KAAKC,MAAL,CAAY,UAASC,CAAT,EAAY;AAAC,WAAOF,CAAC,CAACG,OAAF,CAAUD,CAAV,IAAe,CAAtB;AAAyB,GAAlD,CAAP;AACH,CAFD;;AAGA,IAAQE,OAAO,GAAWC,OAAO,CAAC,SAAD,CAAjC;AAAA,IACQC,GAAG,GAAeF,OAAO,EADjC,C,CAEA;;;AACA,IAAQG,KAAK,GAAaC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAA9C;AAAA,IACQC,YAAY,GAAM,CAD1B;;AAOAC,qBAASC,GAAT,CAAa,kBAAb,EAAiC,KAAjC;;AACAD,qBAASE,OAAT,CAAiB,uGAAjB,EAA0H;AACxHC,EAAAA,eAAe,EAAE;AADuG,CAA1H,EAEGC,IAFH,CAEQ,YAAM;AACVC,EAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AACH,CAJD;;AAOA,IAAIC,gBAAJ;AACE,IAAIC,KAAK,GAAG,CAAZ;;AACF,SAASC,mBAAT,GAA8B;AAE1B,6CAAcL,IAAd,CAAmB,UAAAM,IAAI,EAAG;AAEtBF,IAAAA,KAAK;AACLH,IAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACAD,IAAAA,gBAAgB,GAAGG,IAAnB;AACF,GALF;AAMH;;AACDC,WAAW,CAACF,mBAAD,EAAsBV,YAAY,GAAG,IAArC,CAAX;;AACA,SAASa,WAAT,GAAuB;AACrB,MAAIC,KAAK,GAAG,IAAIC,IAAJ,EAAZ;AACA,MAAIC,IAAI,GAAGF,KAAK,CAACG,WAAN,KAAsB,GAAtB,IAA6BH,KAAK,CAACI,QAAN,KAAmB,CAAhD,IAAqD,GAArD,GAA2DJ,KAAK,CAACK,OAAN,EAA3D,GAA6E,GAA7E,GAAmFL,KAAK,CAACM,QAAN,EAAnF,GAAsG,GAAtG,GAA4GN,KAAK,CAACO,UAAN,EAAvH;AAEA,MAAMC,aAAa,GAAG,IAAIC,uBAAJ,CAAgB;AACpCC,IAAAA,IAAI,EAAEhB,gBAAgB,CAACiB,QADa;AAEpCV,IAAAA,IAAI,EAAEC;AAF8B,GAAhB,CAAtB;AAIAM,EAAAA,aAAa,CAACI,IAAd,GAAqBrB,IAArB,CAA0B;AAAA,WAAMC,OAAO,CAACC,GAAR,CAAY,uBAAZ,CAAN;AAAA,GAA1B;AACD;;AACD,IAAIO,KAAK,GAAG,IAAIC,IAAJ,EAAZ;AACA,IAAIY,IAAI,GAAG,IAAIZ,IAAJ,EAAX;AACA,IAAIa,gBAAgB,GAAG,CAAC,KAAKD,IAAI,CAACE,UAAL,EAAN,IAA2B,IAAlD;AACAC,UAAU,CAAC,YAAY;AACrBlB,EAAAA,WAAW,CAACC,WAAD,EAAc,KAAd,CAAX;AACAA,EAAAA,WAAW;AACZ,CAHS,EAGPe,gBAHO,CAAV;AAQA,IAAIG,GAAG,GAAGtC,OAAO,EAAjB;AAEAsC,GAAG,CAACC,GAAJ,CAAQ,cAAR,EAAwB,UAACC,GAAD,EAAMC,GAAN,EAAY;AAChCA,EAAAA,GAAG,CAACC,IAAJ,CAAS3B,gBAAT;AACH,CAFD;AAMAuB,GAAG,CAACK,MAAJ,CAAWxC,KAAX,EAAkB,YAAI;AAClBU,EAAAA,OAAO,CAACC,GAAR,uCAA2CX,KAA3C;AACH,CAFD",
      "sourceRoot": "/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval",
      "sourcesContent": [
        "// Imports\nimport {refreshData} from \"./Modules/Sportmonks_Api_Connect\"\nimport { lookup } from \"dns\";\nArray.prototype.diff = function(a) {\n    return this.filter(function(i) {return a.indexOf(i) < 0;});\n};\nconst   express         = require(\"express\"),\n        Api             = express();\n// Variables\nconst   $port           = process.env.PORT || 7100,\n        $refreshRate    = 3;\n\n\n        import dataUpdates from  './Database Models/Data-History'\n \nimport mongoose from \"mongoose\"\nmongoose.set('useFindAndModify', false);\nmongoose.connect('mongodb+srv://robertkingsleyiv:Mompex35@@@cluster0-arlog.mongodb.net/test?retryWrites=true&w=majority', {\n  useNewUrlParser: true\n}).then(() => {\n    console.log(\"Database Connection Established\")\n});\n\n\nvar APPLICATION_DATA\n  var count = 0\nfunction getApiDataAndSetVar(){\n \n    refreshData().then(data =>{\n\n        count++\n        console.log(count)\n        APPLICATION_DATA = data\n     })\n}\nsetInterval(getApiDataAndSetVar, $refreshRate * 1000)\nfunction onNewMinute() {\n  var today = new Date();\n  var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate() + \" \" + today.getHours() + \":\" + today.getMinutes();\n\n  const updateHistory = new dataUpdates({\n    Data: APPLICATION_DATA.finished,\n    Date: date\n  });\n  updateHistory.save().then(() => console.log('Data History Uploaded'));\n}\nvar today = new Date();\nvar time = new Date();\nvar secondsRemaining = (60 - time.getSeconds()) * 1000\nsetTimeout(function () {\n  setInterval(onNewMinute, 60000);\n  onNewMinute()\n}, secondsRemaining);\n\n\n\n\nvar app = express()\n\napp.get(\"/client-data\", (req, res)=>{\n    res.send(APPLICATION_DATA)\n})\n\n\n\napp.listen($port, ()=>{\n    console.log(`HTTP/S Server Listening on: ${$port}`)\n})\n\n\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1562436420992
  },
  "{\"sourceRoot\":\"/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval/Modules\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval\",\"filename\":\"/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval/Modules/Sportmonks_Api_Connect.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval/Modules",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval",
      "filename": "/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval/Modules/Sportmonks_Api_Connect.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval/Modules/Sportmonks_Api_Connect.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval/Modules/Sportmonks_Api_Connect.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval/Modules",
        "sourceFileName": "Sportmonks_Api_Connect.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.refreshData = refreshData;\n\nvar _DataHistory = _interopRequireDefault(require(\"./../Database Models/Data-History\"));\n\nvar _User = _interopRequireDefault(require(\"./../Database Models/User\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar SportmonksApi = require(\"sportmonks\").SportmonksApi;\n\nvar apiKey = \"e26BGpAseLRsnrB0jg01ZnSyZFeLNq8b8ruymhZvR5xe9zYRxKnUVJsd6f5p\";\nvar sportmonks = new SportmonksApi(apiKey);\n\nvar _ = require('lodash');\n\nvar livescoreParams = {\n  localTeam: true,\n  visitorTeam: true,\n  odds: true,\n  inplayOdds: true,\n  stats: true,\n  league: true\n};\n\nfunction $time() {\n  var today = new Date();\n  var MS_PER_MINUTE = 60000;\n  var fiveMinutesAgo = new Date(today - 5 * MS_PER_MINUTE);\n  var tenMinutesAgo = new Date(today - 10 * MS_PER_MINUTE);\n  var fifteenMinutesAgo = new Date(today - 15 * MS_PER_MINUTE);\n  var fiveMinutesAgoParsed = fiveMinutesAgo.getFullYear() + '-' + (fiveMinutesAgo.getMonth() + 1) + '-' + fiveMinutesAgo.getDate() + \" \" + fiveMinutesAgo.getHours() + \":\" + fiveMinutesAgo.getMinutes();\n  var tenMinutesAgoParsed = tenMinutesAgo.getFullYear() + '-' + (tenMinutesAgo.getMonth() + 1) + '-' + tenMinutesAgo.getDate() + \" \" + tenMinutesAgo.getHours() + \":\" + tenMinutesAgo.getMinutes();\n  var fifteenMinutesAgoParsed = fifteenMinutesAgo.getFullYear() + '-' + (fifteenMinutesAgo.getMonth() + 1) + '-' + fifteenMinutesAgo.getDate() + \" \" + fifteenMinutesAgo.getHours() + \":\" + fifteenMinutesAgo.getMinutes();\n  return {\n    fiveMinutesAgoParsed: fiveMinutesAgoParsed,\n    tenMinutesAgoParsed: tenMinutesAgoParsed,\n    fifteenMinutesAgoParsed: fifteenMinutesAgoParsed\n  };\n}\n\nfunction countriesDownload(cb) {\n  return new Promise(function (resolve) {\n    sportmonks.get(\"v2.0/countries\", {\n      page: 1\n    }).then(function (resp) {\n      var countries = resp.data;\n      sportmonks.get(\"v2.0/countries\", {\n        page: 2\n      }).then(function (resp) {\n        var a = countries.concat(resp.data);\n        sportmonks.get(\"v2.0/countries\", {\n          page: 3\n        }).then(function (resp) {\n          var b = a.concat(resp.data);\n          sportmonks.get(\"v2.0/countries\", {\n            page: 4\n          }).then(function (resp) {\n            var c = b.concat(resp.data);\n            sportmonks.get(\"v2.0/countries\", {\n              page: 5\n            }).then(function (resp) {\n              var d = c.concat(resp.data);\n              countries = d;\n              resolve(countries);\n            });\n          });\n        });\n      });\n    });\n  });\n}\n\nvar countries;\ncountriesDownload().then(function (resp) {\n  countries = resp;\n});\n\nfunction refreshData() {\n  return new Promise(function (resolve) {\n    var finished = [];\n    var leagues = [];\n    var games = [];\n    var playingLeagues = []; // Declare Time Variables\n\n    var fiveMinutesAgo = $time().fiveMinutesAgoParsed;\n    var tenMinutesAgo = $time().tenMinutesAgoParsed;\n    var fifteenMinutesAgo = $time().fifteenMinutesAgoParsed;\n    sportmonks.get(\"v2.0/livescores/now\", livescoreParams).then(function (resp) {\n      var apiData = resp.data;\n      var dataFiveMinAgo = [];\n      var dataTenMinAgo = [];\n      var dataFifteenMinAgo = [];\n\n      _DataHistory[\"default\"].find({\n        Date: fiveMinutesAgo\n      }, function (err, resp) {\n        dataFiveMinAgo = resp[resp.length - 1];\n\n        _DataHistory[\"default\"].find({\n          Date: tenMinutesAgo\n        }, function (err, resp) {\n          dataTenMinAgo = resp[resp.length - 1];\n\n          _DataHistory[\"default\"].find({\n            Date: fifteenMinutesAgo\n          }, function (err, resp) {\n            dataFifteenMinAgo = resp[resp.length - 1];\n            apiData.forEach(function (current_value, index) {\n              var gameOdds = [];\n              var bkmkrArr = [];\n              var inplayOdds = [];\n\n              if (dataFiveMinAgo != null || undefined) {\n                var finallys = [];\n                dataFiveMinAgo.Data.forEach(function (league) {\n                  league.children.forEach(function (child) {\n                    if (child.id === current_value.id) {\n                      finallys.push(_.pick(child, 'id', 'localTeam_stats', 'visitorTeam_stats'));\n                    }\n                  });\n                });\n              }\n\n              if (dataTenMinAgo != null || undefined) {\n                var finallys2 = [];\n                dataTenMinAgo.Data.forEach(function (league) {\n                  league.children.forEach(function (child) {\n                    if (child.id === current_value.id) {\n                      finallys2.push(_.pick(child, 'id', 'localTeam_stats', 'visitorTeam_stats'));\n                    }\n                  });\n                });\n              }\n\n              if (dataFifteenMinAgo != null || undefined) {\n                var finallys3 = [];\n                dataFifteenMinAgo.Data.forEach(function (league) {\n                  league.children.forEach(function (child) {\n                    if (child.id === current_value.id) {\n                      finallys3.push(_.pick(child, 'id', 'localTeam_stats', 'visitorTeam_stats'));\n                    }\n                  });\n                });\n              }\n\n              current_value.odds.data.forEach(function (odds) {\n                if (odds.name === \"3Way Result\") {\n                  gameOdds.push({\n                    name: odds.name,\n                    bookmakers: odds.bookmaker.data.filter(function (bookmaker) {\n                      return bookmaker.name === \"bet365\" || bookmaker.name === \"Betfair\";\n                    }).map(function (ofChosenBookmakers) {\n                      return {\n                        name: ofChosenBookmakers.name,\n                        data: ofChosenBookmakers.odds.data.map(function (dataItem) {\n                          return {\n                            \"name\": dataItem.label,\n                            \"value\": dataItem.value\n                          };\n                        })\n                      };\n                    })\n                  });\n                }\n              });\n              current_value.inplayOdds.data.forEach(function (inplayOdd) {\n                if (inplayOdd.market_id === 1) {\n                  inplayOdds.push({\n                    inplayOdd: inplayOdd\n                  });\n                }\n              });\n              playingLeagues.push({\n                \"id\": current_value.league.data.id,\n                \"Name\": current_value.league.data.name,\n                \"Logo\": current_value.league.data.logo_path,\n                \"Country\": current_value.league.data.country_id\n              });\n              games.push({\n                \"id\": current_value.id,\n                \"match\": \"\".concat(current_value.localTeam.data.name, \" VS \").concat(current_value.visitorTeam.data.name),\n                \"time\": current_value.time.minute,\n                \"league\": _.pick(current_value.league.data, 'id', 'name', 'country_id'),\n                \"localTeam\": {\n                  // data: _.pick(current_value.localTeam.data,\n                  //     'id',\n                  //     'name',\n                  //     'logo_path'\n                  // )\n                  data: current_value.localTeam.data\n                },\n                \"visitorTeam\": {\n                  // data: _.pick(current_value.visitorTeam.data,\n                  //     'id',\n                  //     'name',\n                  //     'logo_path'\n                  // )\n                  data: current_value.visitorTeam.data\n                },\n                \"scores\": {\n                  localteam_score: current_value.scores.localteam_score,\n                  visitorteam_score: current_value.scores.visitorteam_score\n                },\n                \"localTeam_stats\": current_value.stats.data[0],\n                \"visitorTeam_stats\": current_value.stats.data[1],\n                \"odds\": gameOdds,\n                \"liveOdds\": inplayOdds,\n                \"fiveMinHistory\": finallys,\n                \"TenMinHistory\": finallys2,\n                \"fifteenMinHistory\": finallys3\n              });\n            });\n            leagues = Array.from(new Set(playingLeagues.map(function (a) {\n              return a.id;\n            }))).map(function (id) {\n              return playingLeagues.find(function (a) {\n                return a.id === id;\n              });\n            });\n            leagues.forEach(function (league, index) {\n              finished.push({\n                league: league.Name,\n                id: league.id,\n                league_country: countries.filter(function (country) {\n                  return country.id === league.Country;\n                }),\n                children: games.filter(function (game) {\n                  return game.league.id === league.id;\n                })\n              });\n            });\n            resolve({\n              finished: finished,\n              games: games\n            });\n          });\n        });\n      });\n    });\n  });\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlNwb3J0bW9ua3NfQXBpX0Nvbm5lY3QuanMiXSwibmFtZXMiOlsiU3BvcnRtb25rc0FwaSIsInJlcXVpcmUiLCJhcGlLZXkiLCJzcG9ydG1vbmtzIiwiXyIsImxpdmVzY29yZVBhcmFtcyIsImxvY2FsVGVhbSIsInZpc2l0b3JUZWFtIiwib2RkcyIsImlucGxheU9kZHMiLCJzdGF0cyIsImxlYWd1ZSIsIiR0aW1lIiwidG9kYXkiLCJEYXRlIiwiTVNfUEVSX01JTlVURSIsImZpdmVNaW51dGVzQWdvIiwidGVuTWludXRlc0FnbyIsImZpZnRlZW5NaW51dGVzQWdvIiwiZml2ZU1pbnV0ZXNBZ29QYXJzZWQiLCJnZXRGdWxsWWVhciIsImdldE1vbnRoIiwiZ2V0RGF0ZSIsImdldEhvdXJzIiwiZ2V0TWludXRlcyIsInRlbk1pbnV0ZXNBZ29QYXJzZWQiLCJmaWZ0ZWVuTWludXRlc0Fnb1BhcnNlZCIsImNvdW50cmllc0Rvd25sb2FkIiwiY2IiLCJQcm9taXNlIiwicmVzb2x2ZSIsImdldCIsInBhZ2UiLCJ0aGVuIiwicmVzcCIsImNvdW50cmllcyIsImRhdGEiLCJhIiwiY29uY2F0IiwiYiIsImMiLCJkIiwicmVmcmVzaERhdGEiLCJmaW5pc2hlZCIsImxlYWd1ZXMiLCJnYW1lcyIsInBsYXlpbmdMZWFndWVzIiwiYXBpRGF0YSIsImRhdGFGaXZlTWluQWdvIiwiZGF0YVRlbk1pbkFnbyIsImRhdGFGaWZ0ZWVuTWluQWdvIiwiZGF0YVVwZGF0ZXMiLCJmaW5kIiwiZXJyIiwibGVuZ3RoIiwiZm9yRWFjaCIsImN1cnJlbnRfdmFsdWUiLCJpbmRleCIsImdhbWVPZGRzIiwiYmtta3JBcnIiLCJ1bmRlZmluZWQiLCJmaW5hbGx5cyIsIkRhdGEiLCJjaGlsZHJlbiIsImNoaWxkIiwiaWQiLCJwdXNoIiwicGljayIsImZpbmFsbHlzMiIsImZpbmFsbHlzMyIsIm5hbWUiLCJib29rbWFrZXJzIiwiYm9va21ha2VyIiwiZmlsdGVyIiwibWFwIiwib2ZDaG9zZW5Cb29rbWFrZXJzIiwiZGF0YUl0ZW0iLCJsYWJlbCIsInZhbHVlIiwiaW5wbGF5T2RkIiwibWFya2V0X2lkIiwibG9nb19wYXRoIiwiY291bnRyeV9pZCIsInRpbWUiLCJtaW51dGUiLCJsb2NhbHRlYW1fc2NvcmUiLCJzY29yZXMiLCJ2aXNpdG9ydGVhbV9zY29yZSIsIkFycmF5IiwiZnJvbSIsIlNldCIsIk5hbWUiLCJsZWFndWVfY291bnRyeSIsImNvdW50cnkiLCJDb3VudHJ5IiwiZ2FtZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQU1BOztBQUNJOzs7O0FBTEEsSUFBTUEsYUFBYSxHQUFHQyxPQUFPLENBQUMsWUFBRCxDQUFQLENBQXNCRCxhQUE1Qzs7QUFDQSxJQUFNRSxNQUFNLEdBQUcsOERBQWY7QUFDQSxJQUFNQyxVQUFVLEdBQUcsSUFBSUgsYUFBSixDQUFrQkUsTUFBbEIsQ0FBbkI7O0FBSUEsSUFBSUUsQ0FBQyxHQUFHSCxPQUFPLENBQUMsUUFBRCxDQUFmOztBQUVBLElBQUlJLGVBQWUsR0FBRztBQUNsQkMsRUFBQUEsU0FBUyxFQUFFLElBRE87QUFFbEJDLEVBQUFBLFdBQVcsRUFBRSxJQUZLO0FBR2xCQyxFQUFBQSxJQUFJLEVBQUUsSUFIWTtBQUlsQkMsRUFBQUEsVUFBVSxFQUFFLElBSk07QUFLbEJDLEVBQUFBLEtBQUssRUFBRSxJQUxXO0FBTWxCQyxFQUFBQSxNQUFNLEVBQUU7QUFOVSxDQUF0Qjs7QUFXQSxTQUFTQyxLQUFULEdBQWlCO0FBRVQsTUFBSUMsS0FBSyxHQUFHLElBQUlDLElBQUosRUFBWjtBQUVBLE1BQUlDLGFBQWEsR0FBRyxLQUFwQjtBQUNBLE1BQUlDLGNBQWMsR0FBRyxJQUFJRixJQUFKLENBQVNELEtBQUssR0FBRyxJQUFJRSxhQUFyQixDQUFyQjtBQUNBLE1BQUlFLGFBQWEsR0FBRyxJQUFJSCxJQUFKLENBQVNELEtBQUssR0FBRyxLQUFLRSxhQUF0QixDQUFwQjtBQUNBLE1BQUlHLGlCQUFpQixHQUFHLElBQUlKLElBQUosQ0FBU0QsS0FBSyxHQUFHLEtBQUtF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QWQ7QUFlSCxhQWpCRDtBQWtCQW5DLFlBQUFBLE9BQU8sQ0FBQztBQUNKYSxjQUFBQSxRQUFRLEVBQVJBLFFBREk7QUFFSkUsY0FBQUEsS0FBSyxFQUFMQTtBQUZJLGFBQUQsQ0FBUDtBQUlILFdBakxEO0FBa0xILFNBdExEO0FBdUxILE9BM0xEO0FBNExILEtBbk1EO0FBb01ILEdBak5NLENBQVA7QUFrTkgiLCJzb3VyY2VSb290IjoiL1VzZXJzL3JvYmVydGZhbmtoYXVzZXIvRG9jdW1lbnRzL0dpdEh1Yi9Tb2NjZXItU2lnbmFscy1BUEkvU2VydmljZXMvRGF0YS1SZXRyaWV2YWwvTW9kdWxlcyIsInNvdXJjZXNDb250ZW50IjpbIlxuXG4gICAgY29uc3QgU3BvcnRtb25rc0FwaSA9IHJlcXVpcmUoXCJzcG9ydG1vbmtzXCIpLlNwb3J0bW9ua3NBcGk7XG4gICAgY29uc3QgYXBpS2V5ID0gXCJlMjZCR3BBc2VMUnNuckIwamcwMVpuU3laRmVMTnE4YjhydXltaFp2UjV4ZTl6WVJ4S25VVkpzZDZmNXBcIjtcbiAgICBjb25zdCBzcG9ydG1vbmtzID0gbmV3IFNwb3J0bW9ua3NBcGkoYXBpS2V5KTtcblxuaW1wb3J0IGRhdGFVcGRhdGVzIGZyb20gICcuLy4uL0RhdGFiYXNlIE1vZGVscy9EYXRhLUhpc3RvcnknXG4gICAgaW1wb3J0IFVzZXIgZnJvbSAnLi8uLi9EYXRhYmFzZSBNb2RlbHMvVXNlcidcbiAgICB2YXIgXyA9IHJlcXVpcmUoJ2xvZGFzaCcpXG5cbiAgICB2YXIgbGl2ZXNjb3JlUGFyYW1zID0ge1xuICAgICAgICBsb2NhbFRlYW06IHRydWUsXG4gICAgICAgIHZpc2l0b3JUZWFtOiB0cnVlLFxuICAgICAgICBvZGRzOiB0cnVlLFxuICAgICAgICBpbnBsYXlPZGRzOiB0cnVlLFxuICAgICAgICBzdGF0czogdHJ1ZSxcbiAgICAgICAgbGVhZ3VlOiB0cnVlLFxuICAgIFxuICAgIH1cbiAgICBcbiAgXG4gICAgZnVuY3Rpb24gJHRpbWUoKSB7XG4gICAgXG4gICAgICAgICAgICB2YXIgdG9kYXkgPSBuZXcgRGF0ZSgpO1xuICAgIFxuICAgICAgICAgICAgdmFyIE1TX1BFUl9NSU5VVEUgPSA2MDAwMDtcbiAgICAgICAgICAgIHZhciBmaXZlTWludXRlc0FnbyA9IG5ldyBEYXRlKHRvZGF5IC0gNSAqIE1TX1BFUl9NSU5VVEUpO1xuICAgICAgICAgICAgdmFyIHRlbk1pbnV0ZXNBZ28gPSBuZXcgRGF0ZSh0b2RheSAtIDEwICogTVNfUEVSX01JTlVURSk7XG4gICAgICAgICAgICB2YXIgZmlmdGVlbk1pbnV0ZXNBZ28gPSBuZXcgRGF0ZSh0b2RheSAtIDE1ICogTVNfUEVSX01JTlVURSk7XG4gICAgICAgICAgICB2YXIgZml2ZU1pbnV0ZXNBZ29QYXJzZWQgPSBmaXZlTWludXRlc0Fnby5nZXRGdWxsWWVhcigpICsgJy0nICsgKGZpdmVNaW51dGVzQWdvLmdldE1vbnRoKCkgKyAxKSArICctJyArIGZpdmVNaW51dGVzQWdvLmdldERhdGUoKSArIFwiIFwiICsgZml2ZU1pbnV0ZXNBZ28uZ2V0SG91cnMoKSArIFwiOlwiICsgZml2ZU1pbnV0ZXNBZ28uZ2V0TWludXRlcygpO1xuICAgICAgICAgICAgdmFyIHRlbk1pbnV0ZXNBZ29QYXJzZWQgPSB0ZW5NaW51dGVzQWdvLmdldEZ1bGxZZWFyKCkgKyAnLScgKyAodGVuTWludXRlc0Fnby5nZXRNb250aCgpICsgMSkgKyAnLScgKyB0ZW5NaW51dGVzQWdvLmdldERhdGUoKSArIFwiIFwiICsgdGVuTWludXRlc0Fnby5nZXRIb3VycygpICsgXCI6XCIgKyB0ZW5NaW51dGVzQWdvLmdldE1pbnV0ZXMoKTtcbiAgICAgICAgICAgIHZhciBmaWZ0ZWVuTWludXRlc0Fnb1BhcnNlZCA9IGZpZnRlZW5NaW51dGVzQWdvLmdldEZ1bGxZZWFyKCkgKyAnLScgKyAoZmlmdGVlbk1pbnV0ZXNBZ28uZ2V0TW9udGgoKSArIDEpICsgJy0nICsgZmlmdGVlbk1pbnV0ZXNBZ28uZ2V0RGF0ZSgpICsgXCIgXCIgKyBmaWZ0ZWVuTWludXRlc0Fnby5nZXRIb3VycygpICsgXCI6XCIgKyBmaWZ0ZWVuTWludXRlc0Fnby5nZXRNaW51dGVzKCk7XG4gICAgICAgIFxuICAgICAgICAgICAgcmV0dXJuICh7XG4gICAgICAgICAgICAgICAgZml2ZU1pbnV0ZXNBZ29QYXJzZWQsXG4gICAgICAgICAgICAgICAgdGVuTWludXRlc0Fnb1BhcnNlZCxcbiAgICAgICAgICAgICAgICBmaWZ0ZWVuTWludXRlc0Fnb1BhcnNlZFxuICAgICAgICAgICAgfSlcbiAgICBcbiAgICBcbiAgICBcbiAgICB9XG5cblxuIGZ1bmN0aW9uIGNvdW50cmllc0Rvd25sb2FkIChjYikge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKCAocmVzb2x2ZSkgPT4ge1xuICAgICAgICAgICAgICAgIHNwb3J0bW9ua3MuZ2V0KFwidjIuMC9jb3VudHJpZXNcIiwge1xuICAgICAgICAgICAgICAgICAgICBwYWdlOiAxXG4gICAgICAgICAgICAgICAgfSkudGhlbihyZXNwID0+IHtcbiAgICAgICAgICAgICAgICAgICB2YXIgY291bnRyaWVzID0gcmVzcC5kYXRhXG4gICAgICAgICAgICAgICAgICAgIHNwb3J0bW9ua3MuZ2V0KFwidjIuMC9jb3VudHJpZXNcIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgcGFnZTogMlxuICAgICAgICAgICAgICAgICAgICB9KS50aGVuKHJlc3AgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGEgPSBjb3VudHJpZXMuY29uY2F0KHJlc3AuZGF0YSlcbiAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgIHNwb3J0bW9ua3MuZ2V0KFwidjIuMC9jb3VudHJpZXNcIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhZ2U6IDNcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pLnRoZW4ocmVzcCA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGIgPSBhLmNvbmNhdChyZXNwLmRhdGEpXG4gICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3BvcnRtb25rcy5nZXQoXCJ2Mi4wL2NvdW50cmllc1wiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhZ2U6IDRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KS50aGVuKHJlc3AgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgYyA9IGIuY29uY2F0KHJlc3AuZGF0YSlcbiAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3BvcnRtb25rcy5nZXQoXCJ2Mi4wL2NvdW50cmllc1wiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYWdlOiA1XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pLnRoZW4ocmVzcCA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgZCA9IGMuY29uY2F0KHJlc3AuZGF0YSlcbiAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY291bnRyaWVzID0gZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZShjb3VudHJpZXMpXG4gICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgXG4gICAgICAgICAgICAgICAgICAgIH0pXG4gICAgXG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIH0pXG4gICAgICAgIH1cbiAgICAgICAgdmFyIGNvdW50cmllc1xuICAgICAgIGNvdW50cmllc0Rvd25sb2FkKCkudGhlbigocmVzcCk9PntcbiAgICAgICAgY291bnRyaWVzID0gcmVzcFxuICAgICAgIH1cblxuICAgICAgIClcbiAgICAgICAgZXhwb3J0IGZ1bmN0aW9uIHJlZnJlc2hEYXRhICgpIHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT57XG4gICAgICAgICAgICAgICAgdmFyIGZpbmlzaGVkID0gW11cbiAgICAgICAgICAgICAgICB2YXIgbGVhZ3VlcyA9IFtdXG4gICAgICAgICAgICAgICAgdmFyIGdhbWVzID0gW11cbiAgICAgICAgICAgICAgICB2YXIgcGxheWluZ0xlYWd1ZXMgPSBbXVxuICAgICAgICAgICBcbiAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgLy8gRGVjbGFyZSBUaW1lIFZhcmlhYmxlc1xuICAgICAgICAgICAgICAgIHZhciBmaXZlTWludXRlc0FnbyA9ICR0aW1lKCkuZml2ZU1pbnV0ZXNBZ29QYXJzZWRcbiAgICAgICAgICAgICAgICB2YXIgdGVuTWludXRlc0FnbyA9ICR0aW1lKCkudGVuTWludXRlc0Fnb1BhcnNlZFxuICAgICAgICAgICAgICAgIHZhciBmaWZ0ZWVuTWludXRlc0FnbyA9ICR0aW1lKCkuZmlmdGVlbk1pbnV0ZXNBZ29QYXJzZWRcbiAgICBcbiAgICBcbiAgICAgICAgICAgICAgICBzcG9ydG1vbmtzLmdldChcInYyLjAvbGl2ZXNjb3Jlcy9ub3dcIiwgbGl2ZXNjb3JlUGFyYW1zKS50aGVuKHJlc3AgPT4ge1xuICAgICAgICAgICAgIFxuICAgICAgICAgICAgIHZhciAgICAgICBhcGlEYXRhID0gcmVzcC5kYXRhXG4gICAgICAgICAgICAgICAgICAgIHZhciBkYXRhRml2ZU1pbkFnbyA9IFtdXG4gICAgICAgICAgICAgICAgICAgIHZhciBkYXRhVGVuTWluQWdvID0gW11cbiAgICAgICAgICAgICAgICAgICAgdmFyIGRhdGFGaWZ0ZWVuTWluQWdvID0gW11cbiAgICBcbiAgICAgICAgICAgICAgICAgICAgZGF0YVVwZGF0ZXMuZmluZCh7XG4gICAgICAgICAgICAgICAgICAgICAgICBEYXRlOiBmaXZlTWludXRlc0Fnb1xuICAgICAgICAgICAgICAgICAgICB9LCAoZXJyLCByZXNwKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBkYXRhRml2ZU1pbkFnbyA9IHJlc3BbcmVzcC5sZW5ndGggLSAxXVxuICAgICAgICAgICAgICAgICAgICAgICAgZGF0YVVwZGF0ZXMuZmluZCh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgRGF0ZTogdGVuTWludXRlc0Fnb1xuICAgICAgICAgICAgICAgICAgICAgICAgfSwgKGVyciwgcmVzcCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGFUZW5NaW5BZ28gPSByZXNwW3Jlc3AubGVuZ3RoIC0gMV1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhVXBkYXRlcy5maW5kKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRGF0ZTogZmlmdGVlbk1pbnV0ZXNBZ29cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LCAoZXJyLCByZXNwKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGFGaWZ0ZWVuTWluQWdvID0gcmVzcFtyZXNwLmxlbmd0aCAtIDFdXG4gICAgXG4gICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFwaURhdGEuZm9yRWFjaCgoY3VycmVudF92YWx1ZSwgaW5kZXgpID0+IHtcbiAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBnYW1lT2RkcyA9IFtdXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgYmtta3JBcnIgPSBbXVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGlucGxheU9kZHMgPSBbXVxuICAgIFxuICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGRhdGFGaXZlTWluQWdvICE9IG51bGwgfHwgdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGZpbmFsbHlzID0gW11cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhRml2ZU1pbkFnby5EYXRhLmZvckVhY2gobGVhZ3VlID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGVhZ3VlLmNoaWxkcmVuLmZvckVhY2goY2hpbGQgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGNoaWxkLmlkID09PSBjdXJyZW50X3ZhbHVlLmlkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmluYWxseXMucHVzaChfLnBpY2soY2hpbGQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdpZCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdsb2NhbFRlYW1fc3RhdHMnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAndmlzaXRvclRlYW1fc3RhdHMnXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGRhdGFUZW5NaW5BZ28gIT0gbnVsbCB8fCB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgZmluYWxseXMyID0gW11cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhVGVuTWluQWdvLkRhdGEuZm9yRWFjaChsZWFndWUgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZWFndWUuY2hpbGRyZW4uZm9yRWFjaChjaGlsZCA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoY2hpbGQuaWQgPT09IGN1cnJlbnRfdmFsdWUuaWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmaW5hbGx5czIucHVzaChfLnBpY2soY2hpbGQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdpZCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdsb2NhbFRlYW1fc3RhdHMnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAndmlzaXRvclRlYW1fc3RhdHMnXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGRhdGFGaWZ0ZWVuTWluQWdvICE9IG51bGwgfHwgdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGZpbmFsbHlzMyA9IFtdXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YUZpZnRlZW5NaW5BZ28uRGF0YS5mb3JFYWNoKGxlYWd1ZSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxlYWd1ZS5jaGlsZHJlbi5mb3JFYWNoKGNoaWxkID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChjaGlsZC5pZCA9PT0gY3VycmVudF92YWx1ZS5pZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpbmFsbHlzMy5wdXNoKF8ucGljayhjaGlsZCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2lkJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2xvY2FsVGVhbV9zdGF0cycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICd2aXNpdG9yVGVhbV9zdGF0cydcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgXG4gICAgXG4gICAgXG4gICAgXG4gICAgXG4gICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjdXJyZW50X3ZhbHVlLm9kZHMuZGF0YS5mb3JFYWNoKG9kZHMgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChvZGRzLm5hbWUgPT09IFwiM1dheSBSZXN1bHRcIikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBnYW1lT2Rkcy5wdXNoKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBvZGRzLm5hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYm9va21ha2Vyczogb2Rkcy5ib29rbWFrZXIuZGF0YS5maWx0ZXIoYm9va21ha2VyID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGJvb2ttYWtlci5uYW1lID09PSBcImJldDM2NVwiIHx8IGJvb2ttYWtlci5uYW1lID09PSBcIkJldGZhaXJcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pLm1hcChvZkNob3NlbkJvb2ttYWtlcnMgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogb2ZDaG9zZW5Cb29rbWFrZXJzLm5hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhOiBvZkNob3NlbkJvb2ttYWtlcnMub2Rkcy5kYXRhLm1hcChkYXRhSXRlbSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJuYW1lXCI6IGRhdGFJdGVtLmxhYmVsLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcInZhbHVlXCI6IGRhdGFJdGVtLnZhbHVlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudF92YWx1ZS5pbnBsYXlPZGRzLmRhdGEuZm9yRWFjaChpbnBsYXlPZGQgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpbnBsYXlPZGQubWFya2V0X2lkID09PSAxKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlucGxheU9kZHMucHVzaCh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbnBsYXlPZGRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgXG4gICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgIFxuICAgIFxuICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGxheWluZ0xlYWd1ZXMucHVzaCh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJpZFwiOiBjdXJyZW50X3ZhbHVlLmxlYWd1ZS5kYXRhLmlkLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiTmFtZVwiOiBjdXJyZW50X3ZhbHVlLmxlYWd1ZS5kYXRhLm5hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJMb2dvXCI6IGN1cnJlbnRfdmFsdWUubGVhZ3VlLmRhdGEubG9nb19wYXRoLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiQ291bnRyeVwiOiBjdXJyZW50X3ZhbHVlLmxlYWd1ZS5kYXRhLmNvdW50cnlfaWRcbiAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBnYW1lcy5wdXNoKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImlkXCI6IGN1cnJlbnRfdmFsdWUuaWQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJtYXRjaFwiOiBgJHtjdXJyZW50X3ZhbHVlLmxvY2FsVGVhbS5kYXRhLm5hbWV9IFZTICR7Y3VycmVudF92YWx1ZS52aXNpdG9yVGVhbS5kYXRhLm5hbWV9YCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcInRpbWVcIjogY3VycmVudF92YWx1ZS50aW1lLm1pbnV0ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImxlYWd1ZVwiOiBfLnBpY2soY3VycmVudF92YWx1ZS5sZWFndWUuZGF0YSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2lkJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ25hbWUnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnY291bnRyeV9pZCdcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwibG9jYWxUZWFtXCI6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gZGF0YTogXy5waWNrKGN1cnJlbnRfdmFsdWUubG9jYWxUZWFtLmRhdGEsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAnaWQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgJ25hbWUnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgJ2xvZ29fcGF0aCdcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhOiBjdXJyZW50X3ZhbHVlLmxvY2FsVGVhbS5kYXRhXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcInZpc2l0b3JUZWFtXCI6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gZGF0YTogXy5waWNrKGN1cnJlbnRfdmFsdWUudmlzaXRvclRlYW0uZGF0YSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICdpZCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAnbmFtZScsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAnbG9nb19wYXRoJ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyApXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGE6IGN1cnJlbnRfdmFsdWUudmlzaXRvclRlYW0uZGF0YVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJzY29yZXNcIjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsb2NhbHRlYW1fc2NvcmU6IGN1cnJlbnRfdmFsdWUuc2NvcmVzLmxvY2FsdGVhbV9zY29yZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmlzaXRvcnRlYW1fc2NvcmU6IGN1cnJlbnRfdmFsdWUuc2NvcmVzLnZpc2l0b3J0ZWFtX3Njb3JlXG4gICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImxvY2FsVGVhbV9zdGF0c1wiOiBjdXJyZW50X3ZhbHVlLnN0YXRzLmRhdGFbMF0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJ2aXNpdG9yVGVhbV9zdGF0c1wiOiBjdXJyZW50X3ZhbHVlLnN0YXRzLmRhdGFbMV0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJvZGRzXCI6IGdhbWVPZGRzLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwibGl2ZU9kZHNcIjogaW5wbGF5T2RkcyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImZpdmVNaW5IaXN0b3J5XCI6IGZpbmFsbHlzLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiVGVuTWluSGlzdG9yeVwiOiBmaW5hbGx5czIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJmaWZ0ZWVuTWluSGlzdG9yeVwiOiBmaW5hbGx5czMsXG4gICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZWFndWVzID0gQXJyYXkuZnJvbShuZXcgU2V0KHBsYXlpbmdMZWFndWVzLm1hcChhID0+IGEuaWQpKSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5tYXAoaWQgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBwbGF5aW5nTGVhZ3Vlcy5maW5kKGEgPT4gYS5pZCA9PT0gaWQpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZWFndWVzLmZvckVhY2goKGxlYWd1ZSwgaW5kZXgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpbmlzaGVkLnB1c2goe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZWFndWU6IGxlYWd1ZS5OYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZDogbGVhZ3VlLmlkLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxlYWd1ZV9jb3VudHJ5OiBjb3VudHJpZXMuZmlsdGVyKGNvdW50cnkgPT4ge3JldHVybiBjb3VudHJ5LmlkID09PSBsZWFndWUuQ291bnRyeX0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogZ2FtZXMuZmlsdGVyKGdhbWUgPT4ge1xuICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGdhbWUubGVhZ3VlLmlkID09PSBsZWFndWUuaWRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApXG4gICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc29sdmUoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmluaXNoZWQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBnYW1lc1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICB9KVxuICAgICAgICB9XG5cbiAgICBcbiAgICBcbiAgICBcbiAgICBcbiAgICBcbiAgICBcbiAgICBcbiAgICBcblxuIFxuXG5cblxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "Sportmonks_Api_Connect.js"
      ],
      "names": [
        "SportmonksApi",
        "require",
        "apiKey",
        "sportmonks",
        "_",
        "livescoreParams",
        "localTeam",
        "visitorTeam",
        "odds",
        "inplayOdds",
        "stats",
        "league",
        "$time",
        "today",
        "Date",
        "MS_PER_MINUTE",
        "fiveMinutesAgo",
        "tenMinutesAgo",
        "fifteenMinutesAgo",
        "fiveMinutesAgoParsed",
        "getFullYear",
        "getMonth",
        "getDate",
        "getHours",
        "getMinutes",
        "tenMinutesAgoParsed",
        "fifteenMinutesAgoParsed",
        "countriesDownload",
        "cb",
        "Promise",
        "resolve",
        "get",
        "page",
        "then",
        "resp",
        "countries",
        "data",
        "a",
        "concat",
        "b",
        "c",
        "d",
        "refreshData",
        "finished",
        "leagues",
        "games",
        "playingLeagues",
        "apiData",
        "dataFiveMinAgo",
        "dataTenMinAgo",
        "dataFifteenMinAgo",
        "dataUpdates",
        "find",
        "err",
        "length",
        "forEach",
        "current_value",
        "index",
        "gameOdds",
        "bkmkrArr",
        "undefined",
        "finallys",
        "Data",
        "children",
        "child",
        "id",
        "push",
        "pick",
        "finallys2",
        "finallys3",
        "name",
        "bookmakers",
        "bookmaker",
        "filter",
        "map",
        "ofChosenBookmakers",
        "dataItem",
        "label",
        "value",
        "inplayOdd",
        "market_id",
        "logo_path",
        "country_id",
        "time",
        "minute",
        "localteam_score",
        "scores",
        "visitorteam_score",
        "Array",
        "from",
        "Set",
        "Name",
        "league_country",
        "country",
        "Country",
        "game"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval/Modules",
      "sourcesContent": [
        "\n\n    const SportmonksApi = require(\"sportmonks\").SportmonksApi;\n    const apiKey = \"e26BGpAseLRsnrB0jg01ZnSyZFeLNq8b8ruymhZvR5xe9zYRxKnUVJsd6f5p\";\n    const sportmonks = new SportmonksApi(apiKey);\n\nimport dataUpdates from  './../Database Models/Data-History'\n    import User from './../Database Models/User'\n    var _ = require('lodash')\n\n    var livescoreParams = {\n        localTeam: true,\n        visitorTeam: true,\n        odds: true,\n        inplayOdds: true,\n        stats: true,\n        league: true,\n    \n    }\n    \n  \n    function $time() {\n    \n            var today = new Date();\n    \n            var MS_PER_MINUTE = 60000;\n            var fiveMinutesAgo = new Date(today - 5 * MS_PER_MINUTE);\n            var tenMinutesAgo = new Date(today - 10 * MS_PER_MINUTE);\n            var fifteenMinutesAgo = new Date(today - 15 * MS_PER_MINUTE);\n            var fiveMinutesAgoParsed = fiveMinutesAgo.getFullYear() + '-' + (fiveMinutesAgo.getMonth() + 1) + '-' + fiveMinutesAgo.getDate() + \" \" + fiveMinutesAgo.getHours() + \":\" + fiveMinutesAgo.getMinutes();\n            var tenMinutesAgoParsed = tenMinutesAgo.getFullYear() + '-' + (tenMinutesAgo.getMonth() + 1) + '-' + tenMinutesAgo.getDate() + \" \" + tenMinutesAgo.getHours() + \":\" + tenMinutesAgo.getMinutes();\n            var fifteenMinutesAgoParsed = fifteenMinutesAgo.getFullYear() + '-' + (fifteenMinutesAgo.getMonth() + 1) + '-' + fifteenMinutesAgo.getDate() + \" \" + fifteenMinutesAgo.getHours() + \":\" + fifteenMinutesAgo.getMinutes();\n        \n            return ({\n                fiveMinutesAgoParsed,\n                tenMinutesAgoParsed,\n                fifteenMinutesAgoParsed\n            })\n    \n    \n    \n    }\n\n\n function countriesDownload (cb) {\n            return new Promise( (resolve) => {\n                sportmonks.get(\"v2.0/countries\", {\n                    page: 1\n                }).then(resp => {\n                   var countries = resp.data\n                    sportmonks.get(\"v2.0/countries\", {\n                        page: 2\n                    }).then(resp => {\n                        var a = countries.concat(resp.data)\n    \n                        sportmonks.get(\"v2.0/countries\", {\n                            page: 3\n                        }).then(resp => {\n                            var b = a.concat(resp.data)\n    \n                            sportmonks.get(\"v2.0/countries\", {\n                                page: 4\n                            }).then(resp => {\n                                var c = b.concat(resp.data)\n    \n                                sportmonks.get(\"v2.0/countries\", {\n                                    page: 5\n                                }).then(resp => {\n                                    var d = c.concat(resp.data)\n                        \n                                    countries = d\n                                    resolve(countries)\n    \n                                })\n                            })\n    \n                        })\n    \n                    })\n    \n                })\n            })\n        }\n        var countries\n       countriesDownload().then((resp)=>{\n        countries = resp\n       }\n\n       )\n        export function refreshData () {\n            return new Promise((resolve) =>{\n                var finished = []\n                var leagues = []\n                var games = []\n                var playingLeagues = []\n           \n           \n                // Declare Time Variables\n                var fiveMinutesAgo = $time().fiveMinutesAgoParsed\n                var tenMinutesAgo = $time().tenMinutesAgoParsed\n                var fifteenMinutesAgo = $time().fifteenMinutesAgoParsed\n    \n    \n                sportmonks.get(\"v2.0/livescores/now\", livescoreParams).then(resp => {\n             \n             var       apiData = resp.data\n                    var dataFiveMinAgo = []\n                    var dataTenMinAgo = []\n                    var dataFifteenMinAgo = []\n    \n                    dataUpdates.find({\n                        Date: fiveMinutesAgo\n                    }, (err, resp) => {\n                        dataFiveMinAgo = resp[resp.length - 1]\n                        dataUpdates.find({\n                            Date: tenMinutesAgo\n                        }, (err, resp) => {\n                            dataTenMinAgo = resp[resp.length - 1]\n                            dataUpdates.find({\n                                Date: fifteenMinutesAgo\n                            }, (err, resp) => {\n                                dataFifteenMinAgo = resp[resp.length - 1]\n    \n    \n                                apiData.forEach((current_value, index) => {\n    \n                                    var gameOdds = []\n                                    var bkmkrArr = []\n                                    var inplayOdds = []\n    \n    \n                                    if (dataFiveMinAgo != null || undefined) {\n                                        var finallys = []\n                                        dataFiveMinAgo.Data.forEach(league => {\n                                            league.children.forEach(child => {\n                                                if (child.id === current_value.id) {\n                                                    finallys.push(_.pick(child,\n                                                        'id',\n                                                        'localTeam_stats',\n                                                        'visitorTeam_stats'\n                                                    ))\n                                                }\n                                            })\n    \n                                        })\n                                    }\n    \n                                    if (dataTenMinAgo != null || undefined) {\n                                        var finallys2 = []\n                                        dataTenMinAgo.Data.forEach(league => {\n                                            league.children.forEach(child => {\n                                                if (child.id === current_value.id) {\n                                                    finallys2.push(_.pick(child,\n                                                        'id',\n                                                        'localTeam_stats',\n                                                        'visitorTeam_stats'\n                                                    ))\n                                                }\n                                            })\n    \n                                        })\n                                    }\n    \n                                    if (dataFifteenMinAgo != null || undefined) {\n                                        var finallys3 = []\n                                        dataFifteenMinAgo.Data.forEach(league => {\n                                            league.children.forEach(child => {\n                                                if (child.id === current_value.id) {\n                                                    finallys3.push(_.pick(child,\n                                                        'id',\n                                                        'localTeam_stats',\n                                                        'visitorTeam_stats'\n                                                    ))\n                                                }\n                                            })\n    \n                                        })\n                                    }\n    \n    \n    \n    \n    \n    \n                                    current_value.odds.data.forEach(odds => {\n                                        if (odds.name === \"3Way Result\") {\n                                            gameOdds.push({\n                                                    name: odds.name,\n                                                    bookmakers: odds.bookmaker.data.filter(bookmaker => {\n                                                        return bookmaker.name === \"bet365\" || bookmaker.name === \"Betfair\"\n                                                    }).map(ofChosenBookmakers => {\n                                                        return {\n                                                            name: ofChosenBookmakers.name,\n                                                            data: ofChosenBookmakers.odds.data.map(dataItem => {\n                                                                return {\n                                                                    \"name\": dataItem.label,\n                                                                    \"value\": dataItem.value\n                                                                }\n                                                            })\n    \n                                                        }\n                                                    })\n    \n                                                }\n    \n                                            )\n                                        }\n                                    })\n                                    current_value.inplayOdds.data.forEach(inplayOdd => {\n                                        if (inplayOdd.market_id === 1) {\n                                            inplayOdds.push({\n                                                inplayOdd\n                                            })\n                                        }\n    \n    \n                                    })\n    \n    \n    \n                                    playingLeagues.push({\n                                        \"id\": current_value.league.data.id,\n                                        \"Name\": current_value.league.data.name,\n                                        \"Logo\": current_value.league.data.logo_path,\n                                        \"Country\": current_value.league.data.country_id\n    \n                                    })\n                                    games.push({\n                                        \"id\": current_value.id,\n                                        \"match\": `${current_value.localTeam.data.name} VS ${current_value.visitorTeam.data.name}`,\n                                        \"time\": current_value.time.minute,\n                                        \"league\": _.pick(current_value.league.data,\n                                            'id',\n                                            'name',\n                                            'country_id'\n                                        ),\n                                        \"localTeam\": {\n                                            // data: _.pick(current_value.localTeam.data,\n                                            //     'id',\n                                            //     'name',\n                                            //     'logo_path'\n                                            // )\n                                            data: current_value.localTeam.data\n                                        },\n                                        \"visitorTeam\": {\n                                            // data: _.pick(current_value.visitorTeam.data,\n                                            //     'id',\n                                            //     'name',\n                                            //     'logo_path'\n                                            // )\n                                            data: current_value.visitorTeam.data\n                                        },\n                                        \"scores\": {\n                                            localteam_score: current_value.scores.localteam_score,\n                                            visitorteam_score: current_value.scores.visitorteam_score\n    \n                                        },\n    \n                                        \"localTeam_stats\": current_value.stats.data[0],\n                                        \"visitorTeam_stats\": current_value.stats.data[1],\n                                        \"odds\": gameOdds,\n                                        \"liveOdds\": inplayOdds,\n                                        \"fiveMinHistory\": finallys,\n                                        \"TenMinHistory\": finallys2,\n                                        \"fifteenMinHistory\": finallys3,\n    \n                                    })\n    \n                                })\n                                leagues = Array.from(new Set(playingLeagues.map(a => a.id)))\n                                    .map(id => {\n                                        return playingLeagues.find(a => a.id === id)\n                                    })\n                                leagues.forEach((league, index) => {\n                                        \n                                    finished.push({\n                                            league: league.Name,\n                                            id: league.id,\n                              \n                                            league_country: countries.filter(country => {return country.id === league.Country}),\n                                           \n    \n                                            children: games.filter(game => {\n    \n                                                return game.league.id === league.id\n                                            })\n                                        }\n    \n                                    )\n    \n                                })\n                                resolve({\n                                    finished,\n                                    games\n                                })\n                            });\n                        });\n                    });\n                })\n            })\n        }\n\n    \n    \n    \n    \n    \n    \n    \n    \n\n \n\n\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1562601077450
  },
  "{\"sourceRoot\":\"/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval/Database Models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval\",\"filename\":\"/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval/Database Models/Data-History.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval/Database Models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval",
      "filename": "/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval/Database Models/Data-History.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval/Database Models/Data-History.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval/Database Models/Data-History.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval/Database Models",
        "sourceFileName": "Data-History.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar mongoose = require('mongoose');\n\nvar _default = mongoose.model('DataHistory', {\n  Data: Array,\n  Date: String\n});\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkRhdGEtSGlzdG9yeS5qcyJdLCJuYW1lcyI6WyJtb25nb29zZSIsInJlcXVpcmUiLCJtb2RlbCIsIkRhdGEiLCJBcnJheSIsIkRhdGUiLCJTdHJpbmciXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSxJQUFNQSxRQUFRLEdBQUdDLE9BQU8sQ0FBQyxVQUFELENBQXhCOztlQUdlRCxRQUFRLENBQUNFLEtBQVQsQ0FBZSxhQUFmLEVBQThCO0FBQUVDLEVBQUFBLElBQUksRUFBRUMsS0FBUjtBQUFlQyxFQUFBQSxJQUFJLEVBQUVDO0FBQXJCLENBQTlCLEMiLCJzb3VyY2VSb290IjoiL1VzZXJzL3JvYmVydGZhbmtoYXVzZXIvRG9jdW1lbnRzL0dpdEh1Yi9Tb2NjZXItU2lnbmFscy1BUEkvU2VydmljZXMvRGF0YS1SZXRyaWV2YWwvRGF0YWJhc2UgTW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgbW9uZ29vc2UgPSByZXF1aXJlKCdtb25nb29zZScpO1xuXG5cbmV4cG9ydCBkZWZhdWx0IG1vbmdvb3NlLm1vZGVsKCdEYXRhSGlzdG9yeScsIHsgRGF0YTogQXJyYXksIERhdGU6IFN0cmluZyB9KSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "Data-History.js"
      ],
      "names": [
        "mongoose",
        "require",
        "model",
        "Data",
        "Array",
        "Date",
        "String"
      ],
      "mappings": ";;;;;;;AAAA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;eAGeD,QAAQ,CAACE,KAAT,CAAe,aAAf,EAA8B;AAAEC,EAAAA,IAAI,EAAEC,KAAR;AAAeC,EAAAA,IAAI,EAAEC;AAArB,CAA9B,C",
      "sourceRoot": "/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval/Database Models",
      "sourcesContent": [
        "const mongoose = require('mongoose');\n\n\nexport default mongoose.model('DataHistory', { Data: Array, Date: String })"
      ]
    },
    "sourceType": "script",
    "mtime": 1562359979109
  },
  "{\"sourceRoot\":\"/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval/Database Models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval\",\"filename\":\"/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval/Database Models/User.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval/Database Models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval",
      "filename": "/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval/Database Models/User.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval/Database Models/User.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval/Database Models/User.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval/Database Models",
        "sourceFileName": "User.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar mongoose = require('mongoose');\n\nvar _default = mongoose.model('User', {\n  _id: String,\n  email: String,\n  name: {\n    first: String,\n    Middle: String,\n    Last: String\n  },\n  userData: {\n    filters: [],\n    signals: [],\n    shortList: []\n  },\n  signalAlerts: [],\n  currentlyTrueSignals: []\n});\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlVzZXIuanMiXSwibmFtZXMiOlsibW9uZ29vc2UiLCJyZXF1aXJlIiwibW9kZWwiLCJfaWQiLCJTdHJpbmciLCJlbWFpbCIsIm5hbWUiLCJmaXJzdCIsIk1pZGRsZSIsIkxhc3QiLCJ1c2VyRGF0YSIsImZpbHRlcnMiLCJzaWduYWxzIiwic2hvcnRMaXN0Iiwic2lnbmFsQWxlcnRzIiwiY3VycmVudGx5VHJ1ZVNpZ25hbHMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSxJQUFNQSxRQUFRLEdBQUdDLE9BQU8sQ0FBQyxVQUFELENBQXhCOztlQUdlRCxRQUFRLENBQUNFLEtBQVQsQ0FBZSxNQUFmLEVBQXVCO0FBQ2xDQyxFQUFBQSxHQUFHLEVBQUdDLE1BRDRCO0FBRWxDQyxFQUFBQSxLQUFLLEVBQUVELE1BRjJCO0FBR2xDRSxFQUFBQSxJQUFJLEVBQUU7QUFBQ0MsSUFBQUEsS0FBSyxFQUFFSCxNQUFSO0FBQWdCSSxJQUFBQSxNQUFNLEVBQUNKLE1BQXZCO0FBQStCSyxJQUFBQSxJQUFJLEVBQUNMO0FBQXBDLEdBSDRCO0FBSWxDTSxFQUFBQSxRQUFRLEVBQUU7QUFDTkMsSUFBQUEsT0FBTyxFQUFFLEVBREg7QUFFTkMsSUFBQUEsT0FBTyxFQUFFLEVBRkg7QUFHTkMsSUFBQUEsU0FBUyxFQUFFO0FBSEwsR0FKd0I7QUFTbENDLEVBQUFBLFlBQVksRUFBQyxFQVRxQjtBQVVsQ0MsRUFBQUEsb0JBQW9CLEVBQUU7QUFWWSxDQUF2QixDIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9yb2JlcnRmYW5raGF1c2VyL0RvY3VtZW50cy9HaXRIdWIvU29jY2VyLVNpZ25hbHMtQVBJL1NlcnZpY2VzL0RhdGEtUmV0cmlldmFsL0RhdGFiYXNlIE1vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IG1vbmdvb3NlID0gcmVxdWlyZSgnbW9uZ29vc2UnKTtcblxuXG5leHBvcnQgZGVmYXVsdCBtb25nb29zZS5tb2RlbCgnVXNlcicsIHsgXG4gICAgX2lkOiAgU3RyaW5nLFxuICAgIGVtYWlsOiBTdHJpbmcsXG4gICAgbmFtZToge2ZpcnN0OiBTdHJpbmcsIE1pZGRsZTpTdHJpbmcsIExhc3Q6U3RyaW5nfSwgXG4gICAgdXNlckRhdGE6IHtcbiAgICAgICAgZmlsdGVyczogW10sXG4gICAgICAgIHNpZ25hbHM6IFtdLFxuICAgICAgICBzaG9ydExpc3Q6IFtdLFxuICAgICAgfSxcbiAgICBzaWduYWxBbGVydHM6W10sXG4gICAgY3VycmVudGx5VHJ1ZVNpZ25hbHM6IFtdXG5cbn0pIl19",
    "map": {
      "version": 3,
      "sources": [
        "User.js"
      ],
      "names": [
        "mongoose",
        "require",
        "model",
        "_id",
        "String",
        "email",
        "name",
        "first",
        "Middle",
        "Last",
        "userData",
        "filters",
        "signals",
        "shortList",
        "signalAlerts",
        "currentlyTrueSignals"
      ],
      "mappings": ";;;;;;;AAAA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;eAGeD,QAAQ,CAACE,KAAT,CAAe,MAAf,EAAuB;AAClCC,EAAAA,GAAG,EAAGC,MAD4B;AAElCC,EAAAA,KAAK,EAAED,MAF2B;AAGlCE,EAAAA,IAAI,EAAE;AAACC,IAAAA,KAAK,EAAEH,MAAR;AAAgBI,IAAAA,MAAM,EAACJ,MAAvB;AAA+BK,IAAAA,IAAI,EAACL;AAApC,GAH4B;AAIlCM,EAAAA,QAAQ,EAAE;AACNC,IAAAA,OAAO,EAAE,EADH;AAENC,IAAAA,OAAO,EAAE,EAFH;AAGNC,IAAAA,SAAS,EAAE;AAHL,GAJwB;AASlCC,EAAAA,YAAY,EAAC,EATqB;AAUlCC,EAAAA,oBAAoB,EAAE;AAVY,CAAvB,C",
      "sourceRoot": "/Users/robertfankhauser/Documents/GitHub/Soccer-Signals-API/Services/Data-Retrieval/Database Models",
      "sourcesContent": [
        "const mongoose = require('mongoose');\n\n\nexport default mongoose.model('User', { \n    _id:  String,\n    email: String,\n    name: {first: String, Middle:String, Last:String}, \n    userData: {\n        filters: [],\n        signals: [],\n        shortList: [],\n      },\n    signalAlerts:[],\n    currentlyTrueSignals: []\n\n})"
      ]
    },
    "sourceType": "script",
    "mtime": 1562360004174
  },
  "{\"sourceRoot\":\"/Users/robertfankhauser/Desktop/untitled folder/WORKER-Data-Retrieval\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/robertfankhauser/Desktop/untitled folder/WORKER-Data-Retrieval\",\"filename\":\"/Users/robertfankhauser/Desktop/untitled folder/WORKER-Data-Retrieval/app.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/robertfankhauser/Desktop/untitled folder/WORKER-Data-Retrieval\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/robertfankhauser/Desktop/untitled folder/WORKER-Data-Retrieval",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/robertfankhauser/Desktop/untitled folder/WORKER-Data-Retrieval",
      "filename": "/Users/robertfankhauser/Desktop/untitled folder/WORKER-Data-Retrieval/app.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/robertfankhauser/Desktop/untitled folder/WORKER-Data-Retrieval",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/robertfankhauser/Desktop/untitled folder/WORKER-Data-Retrieval/app.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/robertfankhauser/Desktop/untitled folder/WORKER-Data-Retrieval/app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/robertfankhauser/Desktop/untitled folder/WORKER-Data-Retrieval",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _Sportmonks_Api_Connect = require(\"./Modules/Sportmonks_Api_Connect\");\n\nvar _dns = require(\"dns\");\n\nvar _DataHistory = _interopRequireDefault(require(\"./Database Models/Data-History\"));\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// Imports\nArray.prototype.diff = function (a) {\n  return this.filter(function (i) {\n    return a.indexOf(i) < 0;\n  });\n};\n\nvar express = require(\"express\"),\n    Api = express(); // Variables\n\n\nvar $port = process.env.PORT || 7100,\n    $refreshRate = 3;\n\n_mongoose[\"default\"].set('useFindAndModify', false);\n\n_mongoose[\"default\"].connect('mongodb+srv://robertkingsleyiv:Mompex35@@@cluster0-arlog.mongodb.net/test?retryWrites=true&w=majority', {\n  useNewUrlParser: true\n}).then(function () {\n  console.log(\"Database Connection Established\");\n});\n\nvar applicationIsInit = Boolean;\nvar APPLICATION_DATA;\nvar count = 0;\n(0, _Sportmonks_Api_Connect.countriesDownload)().then(function (countries) {\n  function getApiDataAndSetVar() {\n    (0, _Sportmonks_Api_Connect.refreshData)(countries).then(function (data) {\n      count++;\n      console.log(count);\n      APPLICATION_DATA = data;\n    });\n  }\n\n  function onNewMinute() {\n    var today = new Date();\n    var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate() + \" \" + today.getHours() + \":\" + today.getMinutes();\n    var updateHistory = new _DataHistory[\"default\"]({\n      Data: APPLICATION_DATA.finished,\n      Date: date\n    });\n    updateHistory.save().then(function () {\n      return console.log('Data History Uploaded');\n    });\n  }\n\n  var today = new Date();\n  var time = new Date();\n  var secondsRemaining = (60 - time.getSeconds()) * 1000;\n  setTimeout(function () {\n    setInterval(onNewMinute, 60000);\n    onNewMinute();\n  }, secondsRemaining);\n  setInterval(getApiDataAndSetVar, $refreshRate * 1000);\n});\nvar app = express();\napp.get(\"/client-data\", function (req, res) {\n  res.send(APPLICATION_DATA);\n});\napp.listen($port, function () {\n  console.log(\"HTTP/S Server Listening on: \".concat($port));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJBcnJheSIsInByb3RvdHlwZSIsImRpZmYiLCJhIiwiZmlsdGVyIiwiaSIsImluZGV4T2YiLCJleHByZXNzIiwicmVxdWlyZSIsIkFwaSIsIiRwb3J0IiwicHJvY2VzcyIsImVudiIsIlBPUlQiLCIkcmVmcmVzaFJhdGUiLCJtb25nb29zZSIsInNldCIsImNvbm5lY3QiLCJ1c2VOZXdVcmxQYXJzZXIiLCJ0aGVuIiwiY29uc29sZSIsImxvZyIsImFwcGxpY2F0aW9uSXNJbml0IiwiQm9vbGVhbiIsIkFQUExJQ0FUSU9OX0RBVEEiLCJjb3VudCIsImNvdW50cmllcyIsImdldEFwaURhdGFBbmRTZXRWYXIiLCJkYXRhIiwib25OZXdNaW51dGUiLCJ0b2RheSIsIkRhdGUiLCJkYXRlIiwiZ2V0RnVsbFllYXIiLCJnZXRNb250aCIsImdldERhdGUiLCJnZXRIb3VycyIsImdldE1pbnV0ZXMiLCJ1cGRhdGVIaXN0b3J5IiwiZGF0YVVwZGF0ZXMiLCJEYXRhIiwiZmluaXNoZWQiLCJzYXZlIiwidGltZSIsInNlY29uZHNSZW1haW5pbmciLCJnZXRTZWNvbmRzIiwic2V0VGltZW91dCIsInNldEludGVydmFsIiwiYXBwIiwiZ2V0IiwicmVxIiwicmVzIiwic2VuZCIsImxpc3RlbiJdLCJtYXBwaW5ncyI6Ijs7QUFDQTs7QUFDQTs7QUFXQTs7QUFFQTs7OztBQWZBO0FBSUFBLEtBQUssQ0FBQ0MsU0FBTixDQUFnQkMsSUFBaEIsR0FBdUIsVUFBU0MsQ0FBVCxFQUFZO0FBQy9CLFNBQU8sS0FBS0MsTUFBTCxDQUFZLFVBQVNDLENBQVQsRUFBWTtBQUFDLFdBQU9GLENBQUMsQ0FBQ0csT0FBRixDQUFVRCxDQUFWLElBQWUsQ0FBdEI7QUFBeUIsR0FBbEQsQ0FBUDtBQUNILENBRkQ7O0FBR0EsSUFBUUUsT0FBTyxHQUFXQyxPQUFPLENBQUMsU0FBRCxDQUFqQztBQUFBLElBQ1FDLEdBQUcsR0FBZUYsT0FBTyxFQURqQyxDLENBRUE7OztBQUNBLElBQVFHLEtBQUssR0FBYUMsT0FBTyxDQUFDQyxHQUFSLENBQVlDLElBQVosSUFBb0IsSUFBOUM7QUFBQSxJQUNRQyxZQUFZLEdBQU0sQ0FEMUI7O0FBTUFDLHFCQUFTQyxHQUFULENBQWEsa0JBQWIsRUFBaUMsS0FBakM7O0FBQ0FELHFCQUFTRSxPQUFULENBQWlCLHVHQUFqQixFQUEwSDtBQUN4SEMsRUFBQUEsZUFBZSxFQUFFO0FBRHVHLENBQTFILEVBRUdDLElBRkgsQ0FFUSxZQUFNO0FBQ1ZDLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLGlDQUFaO0FBQ0gsQ0FKRDs7QUFPQSxJQUFJQyxpQkFBaUIsR0FBR0MsT0FBeEI7QUFNQSxJQUFJQyxnQkFBSjtBQUNFLElBQUlDLEtBQUssR0FBRyxDQUFaO0FBQ0EsaURBQW9CTixJQUFwQixDQUF5QixVQUFBTyxTQUFTLEVBQUU7QUFFbEMsV0FBU0MsbUJBQVQsR0FBOEI7QUFHNUIsNkNBQVlELFNBQVosRUFBdUJQLElBQXZCLENBQTRCLFVBQUFTLElBQUksRUFBRztBQUUvQkgsTUFBQUEsS0FBSztBQUNMTCxNQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUksS0FBWjtBQUNBRCxNQUFBQSxnQkFBZ0IsR0FBR0ksSUFBbkI7QUFDSCxLQUxEO0FBU0g7O0FBQ0QsV0FBU0MsV0FBVCxHQUF1QjtBQUNyQixRQUFJQyxLQUFLLEdBQUcsSUFBSUMsSUFBSixFQUFaO0FBQ0EsUUFBSUMsSUFBSSxHQUFHRixLQUFLLENBQUNHLFdBQU4sS0FBc0IsR0FBdEIsSUFBNkJILEtBQUssQ0FBQ0ksUUFBTixLQUFtQixDQUFoRCxJQUFxRCxHQUFyRCxHQUEyREosS0FBSyxDQUFDSyxPQUFOLEVBQTNELEdBQTZFLEdBQTdFLEdBQW1GTCxLQUFLLENBQUNNLFFBQU4sRUFBbkYsR0FBc0csR0FBdEcsR0FBNEdOLEtBQUssQ0FBQ08sVUFBTixFQUF2SDtBQUVBLFFBQU1DLGFBQWEsR0FBRyxJQUFJQyx1QkFBSixDQUFnQjtBQUNwQ0MsTUFBQUEsSUFBSSxFQUFFaEIsZ0JBQWdCLENBQUNpQixRQURhO0FBRXBDVixNQUFBQSxJQUFJLEVBQUVDO0FBRjhCLEtBQWhCLENBQXRCO0FBSUFNLElBQUFBLGFBQWEsQ0FBQ0ksSUFBZCxHQUFxQnZCLElBQXJCLENBQTBCO0FBQUEsYUFBTUMsT0FBTyxDQUFDQyxHQUFSLENBQVksdUJBQVosQ0FBTjtBQUFBLEtBQTFCO0FBQ0Q7O0FBQ0QsTUFBSVMsS0FBSyxHQUFHLElBQUlDLElBQUosRUFBWjtBQUNBLE1BQUlZLElBQUksR0FBRyxJQUFJWixJQUFKLEVBQVg7QUFDQSxNQUFJYSxnQkFBZ0IsR0FBRyxDQUFDLEtBQUtELElBQUksQ0FBQ0UsVUFBTCxFQUFOLElBQTJCLElBQWxEO0FBQ0FDLEVBQUFBLFVBQVUsQ0FBQyxZQUFZO0FBQ3JCQyxJQUFBQSxXQUFXLENBQUNsQixXQUFELEVBQWMsS0FBZCxDQUFYO0FBQ0FBLElBQUFBLFdBQVc7QUFDWixHQUhTLEVBR1BlLGdCQUhPLENBQVY7QUFNQUcsRUFBQUEsV0FBVyxDQUFDcEIsbUJBQUQsRUFBc0JiLFlBQVksR0FBRyxJQUFyQyxDQUFYO0FBQ0MsQ0FuQ0Q7QUF3Q0YsSUFBSWtDLEdBQUcsR0FBR3pDLE9BQU8sRUFBakI7QUFFQXlDLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLGNBQVIsRUFBd0IsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQVk7QUFDaENBLEVBQUFBLEdBQUcsQ0FBQ0MsSUFBSixDQUFTNUIsZ0JBQVQ7QUFDSCxDQUZEO0FBTUF3QixHQUFHLENBQUNLLE1BQUosQ0FBVzNDLEtBQVgsRUFBa0IsWUFBSTtBQUNsQlUsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLHVDQUEyQ1gsS0FBM0M7QUFDSCxDQUZEIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9yb2JlcnRmYW5raGF1c2VyL0Rlc2t0b3AvdW50aXRsZWQgZm9sZGVyL1dPUktFUi1EYXRhLVJldHJpZXZhbCIsInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydHNcbmltcG9ydCB7cmVmcmVzaERhdGF9IGZyb20gXCIuL01vZHVsZXMvU3BvcnRtb25rc19BcGlfQ29ubmVjdFwiXG5pbXBvcnQgeyBsb29rdXAgfSBmcm9tIFwiZG5zXCI7XG5pbXBvcnQge2NvdW50cmllc0Rvd25sb2FkfSBmcm9tICcuL01vZHVsZXMvU3BvcnRtb25rc19BcGlfQ29ubmVjdCdcbkFycmF5LnByb3RvdHlwZS5kaWZmID0gZnVuY3Rpb24oYSkge1xuICAgIHJldHVybiB0aGlzLmZpbHRlcihmdW5jdGlvbihpKSB7cmV0dXJuIGEuaW5kZXhPZihpKSA8IDA7fSk7XG59O1xuY29uc3QgICBleHByZXNzICAgICAgICAgPSByZXF1aXJlKFwiZXhwcmVzc1wiKSxcbiAgICAgICAgQXBpICAgICAgICAgICAgID0gZXhwcmVzcygpO1xuLy8gVmFyaWFibGVzXG5jb25zdCAgICRwb3J0ICAgICAgICAgICA9IHByb2Nlc3MuZW52LlBPUlQgfHwgNzEwMCxcbiAgICAgICAgJHJlZnJlc2hSYXRlICAgID0gMztcblxuaW1wb3J0IGRhdGFVcGRhdGVzIGZyb20gICcuL0RhdGFiYXNlIE1vZGVscy9EYXRhLUhpc3RvcnknXG4gXG5pbXBvcnQgbW9uZ29vc2UgZnJvbSBcIm1vbmdvb3NlXCJcbm1vbmdvb3NlLnNldCgndXNlRmluZEFuZE1vZGlmeScsIGZhbHNlKTtcbm1vbmdvb3NlLmNvbm5lY3QoJ21vbmdvZGIrc3J2Oi8vcm9iZXJ0a2luZ3NsZXlpdjpNb21wZXgzNUBAQGNsdXN0ZXIwLWFybG9nLm1vbmdvZGIubmV0L3Rlc3Q/cmV0cnlXcml0ZXM9dHJ1ZSZ3PW1ham9yaXR5Jywge1xuICB1c2VOZXdVcmxQYXJzZXI6IHRydWVcbn0pLnRoZW4oKCkgPT4ge1xuICAgIGNvbnNvbGUubG9nKFwiRGF0YWJhc2UgQ29ubmVjdGlvbiBFc3RhYmxpc2hlZFwiKVxufSk7XG5cblxudmFyIGFwcGxpY2F0aW9uSXNJbml0ID0gQm9vbGVhblxuXG5cblxuXG5cbnZhciBBUFBMSUNBVElPTl9EQVRBXG4gIHZhciBjb3VudCA9IDBcbiAgY291bnRyaWVzRG93bmxvYWQoKS50aGVuKGNvdW50cmllcz0+e1xuICAgIFxuICAgIGZ1bmN0aW9uIGdldEFwaURhdGFBbmRTZXRWYXIoKXtcblxuIFxuICAgICAgcmVmcmVzaERhdGEoY291bnRyaWVzKS50aGVuKGRhdGEgPT57XG4gIFxuICAgICAgICAgIGNvdW50KytcbiAgICAgICAgICBjb25zb2xlLmxvZyhjb3VudClcbiAgICAgICAgICBBUFBMSUNBVElPTl9EQVRBID0gZGF0YVxuICAgICAgfSlcbiBcblxuXG4gIH1cbiAgZnVuY3Rpb24gb25OZXdNaW51dGUoKSB7XG4gICAgdmFyIHRvZGF5ID0gbmV3IERhdGUoKTtcbiAgICB2YXIgZGF0ZSA9IHRvZGF5LmdldEZ1bGxZZWFyKCkgKyAnLScgKyAodG9kYXkuZ2V0TW9udGgoKSArIDEpICsgJy0nICsgdG9kYXkuZ2V0RGF0ZSgpICsgXCIgXCIgKyB0b2RheS5nZXRIb3VycygpICsgXCI6XCIgKyB0b2RheS5nZXRNaW51dGVzKCk7XG4gIFxuICAgIGNvbnN0IHVwZGF0ZUhpc3RvcnkgPSBuZXcgZGF0YVVwZGF0ZXMoe1xuICAgICAgRGF0YTogQVBQTElDQVRJT05fREFUQS5maW5pc2hlZCxcbiAgICAgIERhdGU6IGRhdGVcbiAgICB9KTtcbiAgICB1cGRhdGVIaXN0b3J5LnNhdmUoKS50aGVuKCgpID0+IGNvbnNvbGUubG9nKCdEYXRhIEhpc3RvcnkgVXBsb2FkZWQnKSk7XG4gIH1cbiAgdmFyIHRvZGF5ID0gbmV3IERhdGUoKTtcbiAgdmFyIHRpbWUgPSBuZXcgRGF0ZSgpO1xuICB2YXIgc2Vjb25kc1JlbWFpbmluZyA9ICg2MCAtIHRpbWUuZ2V0U2Vjb25kcygpKSAqIDEwMDBcbiAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgc2V0SW50ZXJ2YWwob25OZXdNaW51dGUsIDYwMDAwKTtcbiAgICBvbk5ld01pbnV0ZSgpXG4gIH0sIHNlY29uZHNSZW1haW5pbmcpO1xuICBcblxuICBzZXRJbnRlcnZhbChnZXRBcGlEYXRhQW5kU2V0VmFyLCAkcmVmcmVzaFJhdGUgKiAxMDAwKVxuICB9KVxuXG5cblxuXG52YXIgYXBwID0gZXhwcmVzcygpXG5cbmFwcC5nZXQoXCIvY2xpZW50LWRhdGFcIiwgKHJlcSwgcmVzKT0+e1xuICAgIHJlcy5zZW5kKEFQUExJQ0FUSU9OX0RBVEEpXG59KVxuXG5cblxuYXBwLmxpc3RlbigkcG9ydCwgKCk9PntcbiAgICBjb25zb2xlLmxvZyhgSFRUUC9TIFNlcnZlciBMaXN0ZW5pbmcgb246ICR7JHBvcnR9YClcbn0pXG5cblxuXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "Array",
        "prototype",
        "diff",
        "a",
        "filter",
        "i",
        "indexOf",
        "express",
        "require",
        "Api",
        "$port",
        "process",
        "env",
        "PORT",
        "$refreshRate",
        "mongoose",
        "set",
        "connect",
        "useNewUrlParser",
        "then",
        "console",
        "log",
        "applicationIsInit",
        "Boolean",
        "APPLICATION_DATA",
        "count",
        "countries",
        "getApiDataAndSetVar",
        "data",
        "onNewMinute",
        "today",
        "Date",
        "date",
        "getFullYear",
        "getMonth",
        "getDate",
        "getHours",
        "getMinutes",
        "updateHistory",
        "dataUpdates",
        "Data",
        "finished",
        "save",
        "time",
        "secondsRemaining",
        "getSeconds",
        "setTimeout",
        "setInterval",
        "app",
        "get",
        "req",
        "res",
        "send",
        "listen"
      ],
      "mappings": ";;AACA;;AACA;;AAWA;;AAEA;;;;AAfA;AAIAA,KAAK,CAACC,SAAN,CAAgBC,IAAhB,GAAuB,UAASC,CAAT,EAAY;AAC/B,SAAO,KAAKC,MAAL,CAAY,UAASC,CAAT,EAAY;AAAC,WAAOF,CAAC,CAACG,OAAF,CAAUD,CAAV,IAAe,CAAtB;AAAyB,GAAlD,CAAP;AACH,CAFD;;AAGA,IAAQE,OAAO,GAAWC,OAAO,CAAC,SAAD,CAAjC;AAAA,IACQC,GAAG,GAAeF,OAAO,EADjC,C,CAEA;;;AACA,IAAQG,KAAK,GAAaC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAA9C;AAAA,IACQC,YAAY,GAAM,CAD1B;;AAMAC,qBAASC,GAAT,CAAa,kBAAb,EAAiC,KAAjC;;AACAD,qBAASE,OAAT,CAAiB,uGAAjB,EAA0H;AACxHC,EAAAA,eAAe,EAAE;AADuG,CAA1H,EAEGC,IAFH,CAEQ,YAAM;AACVC,EAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AACH,CAJD;;AAOA,IAAIC,iBAAiB,GAAGC,OAAxB;AAMA,IAAIC,gBAAJ;AACE,IAAIC,KAAK,GAAG,CAAZ;AACA,iDAAoBN,IAApB,CAAyB,UAAAO,SAAS,EAAE;AAElC,WAASC,mBAAT,GAA8B;AAG5B,6CAAYD,SAAZ,EAAuBP,IAAvB,CAA4B,UAAAS,IAAI,EAAG;AAE/BH,MAAAA,KAAK;AACLL,MAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACAD,MAAAA,gBAAgB,GAAGI,IAAnB;AACH,KALD;AASH;;AACD,WAASC,WAAT,GAAuB;AACrB,QAAIC,KAAK,GAAG,IAAIC,IAAJ,EAAZ;AACA,QAAIC,IAAI,GAAGF,KAAK,CAACG,WAAN,KAAsB,GAAtB,IAA6BH,KAAK,CAACI,QAAN,KAAmB,CAAhD,IAAqD,GAArD,GAA2DJ,KAAK,CAACK,OAAN,EAA3D,GAA6E,GAA7E,GAAmFL,KAAK,CAACM,QAAN,EAAnF,GAAsG,GAAtG,GAA4GN,KAAK,CAACO,UAAN,EAAvH;AAEA,QAAMC,aAAa,GAAG,IAAIC,uBAAJ,CAAgB;AACpCC,MAAAA,IAAI,EAAEhB,gBAAgB,CAACiB,QADa;AAEpCV,MAAAA,IAAI,EAAEC;AAF8B,KAAhB,CAAtB;AAIAM,IAAAA,aAAa,CAACI,IAAd,GAAqBvB,IAArB,CAA0B;AAAA,aAAMC,OAAO,CAACC,GAAR,CAAY,uBAAZ,CAAN;AAAA,KAA1B;AACD;;AACD,MAAIS,KAAK,GAAG,IAAIC,IAAJ,EAAZ;AACA,MAAIY,IAAI,GAAG,IAAIZ,IAAJ,EAAX;AACA,MAAIa,gBAAgB,GAAG,CAAC,KAAKD,IAAI,CAACE,UAAL,EAAN,IAA2B,IAAlD;AACAC,EAAAA,UAAU,CAAC,YAAY;AACrBC,IAAAA,WAAW,CAAClB,WAAD,EAAc,KAAd,CAAX;AACAA,IAAAA,WAAW;AACZ,GAHS,EAGPe,gBAHO,CAAV;AAMAG,EAAAA,WAAW,CAACpB,mBAAD,EAAsBb,YAAY,GAAG,IAArC,CAAX;AACC,CAnCD;AAwCF,IAAIkC,GAAG,GAAGzC,OAAO,EAAjB;AAEAyC,GAAG,CAACC,GAAJ,CAAQ,cAAR,EAAwB,UAACC,GAAD,EAAMC,GAAN,EAAY;AAChCA,EAAAA,GAAG,CAACC,IAAJ,CAAS5B,gBAAT;AACH,CAFD;AAMAwB,GAAG,CAACK,MAAJ,CAAW3C,KAAX,EAAkB,YAAI;AAClBU,EAAAA,OAAO,CAACC,GAAR,uCAA2CX,KAA3C;AACH,CAFD",
      "sourceRoot": "/Users/robertfankhauser/Desktop/untitled folder/WORKER-Data-Retrieval",
      "sourcesContent": [
        "// Imports\nimport {refreshData} from \"./Modules/Sportmonks_Api_Connect\"\nimport { lookup } from \"dns\";\nimport {countriesDownload} from './Modules/Sportmonks_Api_Connect'\nArray.prototype.diff = function(a) {\n    return this.filter(function(i) {return a.indexOf(i) < 0;});\n};\nconst   express         = require(\"express\"),\n        Api             = express();\n// Variables\nconst   $port           = process.env.PORT || 7100,\n        $refreshRate    = 3;\n\nimport dataUpdates from  './Database Models/Data-History'\n \nimport mongoose from \"mongoose\"\nmongoose.set('useFindAndModify', false);\nmongoose.connect('mongodb+srv://robertkingsleyiv:Mompex35@@@cluster0-arlog.mongodb.net/test?retryWrites=true&w=majority', {\n  useNewUrlParser: true\n}).then(() => {\n    console.log(\"Database Connection Established\")\n});\n\n\nvar applicationIsInit = Boolean\n\n\n\n\n\nvar APPLICATION_DATA\n  var count = 0\n  countriesDownload().then(countries=>{\n    \n    function getApiDataAndSetVar(){\n\n \n      refreshData(countries).then(data =>{\n  \n          count++\n          console.log(count)\n          APPLICATION_DATA = data\n      })\n \n\n\n  }\n  function onNewMinute() {\n    var today = new Date();\n    var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate() + \" \" + today.getHours() + \":\" + today.getMinutes();\n  \n    const updateHistory = new dataUpdates({\n      Data: APPLICATION_DATA.finished,\n      Date: date\n    });\n    updateHistory.save().then(() => console.log('Data History Uploaded'));\n  }\n  var today = new Date();\n  var time = new Date();\n  var secondsRemaining = (60 - time.getSeconds()) * 1000\n  setTimeout(function () {\n    setInterval(onNewMinute, 60000);\n    onNewMinute()\n  }, secondsRemaining);\n  \n\n  setInterval(getApiDataAndSetVar, $refreshRate * 1000)\n  })\n\n\n\n\nvar app = express()\n\napp.get(\"/client-data\", (req, res)=>{\n    res.send(APPLICATION_DATA)\n})\n\n\n\napp.listen($port, ()=>{\n    console.log(`HTTP/S Server Listening on: ${$port}`)\n})\n\n\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1562617196315
  },
  "{\"sourceRoot\":\"/Users/robertfankhauser/Desktop/untitled folder/WORKER-Data-Retrieval/Modules\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/robertfankhauser/Desktop/untitled folder/WORKER-Data-Retrieval\",\"filename\":\"/Users/robertfankhauser/Desktop/untitled folder/WORKER-Data-Retrieval/Modules/Sportmonks_Api_Connect.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/robertfankhauser/Desktop/untitled folder/WORKER-Data-Retrieval\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/robertfankhauser/Desktop/untitled folder/WORKER-Data-Retrieval/Modules",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/robertfankhauser/Desktop/untitled folder/WORKER-Data-Retrieval",
      "filename": "/Users/robertfankhauser/Desktop/untitled folder/WORKER-Data-Retrieval/Modules/Sportmonks_Api_Connect.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/robertfankhauser/Desktop/untitled folder/WORKER-Data-Retrieval",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/robertfankhauser/Desktop/untitled folder/WORKER-Data-Retrieval/Modules/Sportmonks_Api_Connect.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/robertfankhauser/Desktop/untitled folder/WORKER-Data-Retrieval/Modules/Sportmonks_Api_Connect.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/robertfankhauser/Desktop/untitled folder/WORKER-Data-Retrieval/Modules",
        "sourceFileName": "Sportmonks_Api_Connect.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.countriesDownload = countriesDownload;\nexports.refreshData = refreshData;\n\nvar _DataHistory = _interopRequireDefault(require(\"./../Database Models/Data-History\"));\n\nvar _User = _interopRequireDefault(require(\"./../Database Models/User\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar SportmonksApi = require(\"sportmonks\").SportmonksApi;\n\nvar apiKey = \"e26BGpAseLRsnrB0jg01ZnSyZFeLNq8b8ruymhZvR5xe9zYRxKnUVJsd6f5p\";\nvar sportmonks = new SportmonksApi(apiKey);\n\nvar _ = require('lodash');\n\nvar livescoreParams = {\n  localTeam: true,\n  visitorTeam: true,\n  odds: true,\n  inplayOdds: true,\n  stats: true,\n  league: true\n};\n\nfunction $time() {\n  var today = new Date();\n  var MS_PER_MINUTE = 60000;\n  var fiveMinutesAgo = new Date(today - 5 * MS_PER_MINUTE);\n  var tenMinutesAgo = new Date(today - 10 * MS_PER_MINUTE);\n  var fifteenMinutesAgo = new Date(today - 15 * MS_PER_MINUTE);\n  var fiveMinutesAgoParsed = fiveMinutesAgo.getFullYear() + '-' + (fiveMinutesAgo.getMonth() + 1) + '-' + fiveMinutesAgo.getDate() + \" \" + fiveMinutesAgo.getHours() + \":\" + fiveMinutesAgo.getMinutes();\n  var tenMinutesAgoParsed = tenMinutesAgo.getFullYear() + '-' + (tenMinutesAgo.getMonth() + 1) + '-' + tenMinutesAgo.getDate() + \" \" + tenMinutesAgo.getHours() + \":\" + tenMinutesAgo.getMinutes();\n  var fifteenMinutesAgoParsed = fifteenMinutesAgo.getFullYear() + '-' + (fifteenMinutesAgo.getMonth() + 1) + '-' + fifteenMinutesAgo.getDate() + \" \" + fifteenMinutesAgo.getHours() + \":\" + fifteenMinutesAgo.getMinutes();\n  return {\n    fiveMinutesAgoParsed: fiveMinutesAgoParsed,\n    tenMinutesAgoParsed: tenMinutesAgoParsed,\n    fifteenMinutesAgoParsed: fifteenMinutesAgoParsed\n  };\n}\n\nfunction countriesDownload(cb) {\n  return new Promise(function (resolve) {\n    sportmonks.get(\"v2.0/countries\", {\n      page: 1\n    }).then(function (resp) {\n      var countries = resp.data;\n      sportmonks.get(\"v2.0/countries\", {\n        page: 2\n      }).then(function (resp) {\n        var a = countries.concat(resp.data);\n        sportmonks.get(\"v2.0/countries\", {\n          page: 3\n        }).then(function (resp) {\n          var b = a.concat(resp.data);\n          sportmonks.get(\"v2.0/countries\", {\n            page: 4\n          }).then(function (resp) {\n            var c = b.concat(resp.data);\n            sportmonks.get(\"v2.0/countries\", {\n              page: 5\n            }).then(function (resp) {\n              var d = c.concat(resp.data);\n              countries = d;\n              resolve(countries);\n            });\n          });\n        });\n      });\n    });\n  });\n}\n\nfunction refreshData(countries) {\n  return new Promise(function (resolve) {\n    var finished = [];\n    var leagues = [];\n    var games = [];\n    var playingLeagues = []; // Declare Time Variables\n\n    var fiveMinutesAgo = $time().fiveMinutesAgoParsed;\n    var tenMinutesAgo = $time().tenMinutesAgoParsed;\n    var fifteenMinutesAgo = $time().fifteenMinutesAgoParsed;\n    sportmonks.get(\"v2.0/livescores/now\", livescoreParams).then(function (resp) {\n      var apiData = resp.data;\n      var dataFiveMinAgo = [];\n      var dataTenMinAgo = [];\n      var dataFifteenMinAgo = [];\n\n      _DataHistory[\"default\"].find({\n        Date: fiveMinutesAgo\n      }, function (err, resp) {\n        dataFiveMinAgo = resp[resp.length - 1];\n\n        _DataHistory[\"default\"].find({\n          Date: tenMinutesAgo\n        }, function (err, resp) {\n          dataTenMinAgo = resp[resp.length - 1];\n\n          _DataHistory[\"default\"].find({\n            Date: fifteenMinutesAgo\n          }, function (err, resp) {\n            dataFifteenMinAgo = resp[resp.length - 1];\n            apiData.forEach(function (current_value, index) {\n              var gameOdds = [];\n              var bkmkrArr = [];\n              var inplayOdds = [];\n\n              if (dataFiveMinAgo != null || undefined) {\n                var finallys = [];\n                dataFiveMinAgo.Data.forEach(function (league) {\n                  league.children.forEach(function (child) {\n                    if (child.id === current_value.id) {\n                      finallys.push(_.pick(child, 'id', 'localTeam_stats', 'visitorTeam_stats'));\n                    }\n                  });\n                });\n              }\n\n              if (dataTenMinAgo != null || undefined) {\n                var finallys2 = [];\n                dataTenMinAgo.Data.forEach(function (league) {\n                  league.children.forEach(function (child) {\n                    if (child.id === current_value.id) {\n                      finallys2.push(_.pick(child, 'id', 'localTeam_stats', 'visitorTeam_stats'));\n                    }\n                  });\n                });\n              }\n\n              if (dataFifteenMinAgo != null || undefined) {\n                var finallys3 = [];\n                dataFifteenMinAgo.Data.forEach(function (league) {\n                  league.children.forEach(function (child) {\n                    if (child.id === current_value.id) {\n                      finallys3.push(_.pick(child, 'id', 'localTeam_stats', 'visitorTeam_stats'));\n                    }\n                  });\n                });\n              }\n\n              current_value.odds.data.forEach(function (odds) {\n                if (odds.name === \"3Way Result\") {\n                  gameOdds.push({\n                    name: odds.name,\n                    bookmakers: odds.bookmaker.data.filter(function (bookmaker) {\n                      return bookmaker.name === \"bet365\" || bookmaker.name === \"Betfair\";\n                    }).map(function (ofChosenBookmakers) {\n                      return {\n                        name: ofChosenBookmakers.name,\n                        data: ofChosenBookmakers.odds.data.map(function (dataItem) {\n                          return {\n                            \"name\": dataItem.label,\n                            \"value\": dataItem.value\n                          };\n                        })\n                      };\n                    })\n                  });\n                }\n              });\n              current_value.inplayOdds.data.forEach(function (inplayOdd) {\n                if (inplayOdd.market_id === 1) {\n                  inplayOdds.push({\n                    inplayOdd: inplayOdd\n                  });\n                }\n              });\n              playingLeagues.push({\n                \"id\": current_value.league.data.id,\n                \"Name\": current_value.league.data.name,\n                \"Logo\": current_value.league.data.logo_path,\n                \"Country\": current_value.league.data.country_id\n              });\n              games.push({\n                \"id\": current_value.id,\n                \"match\": \"\".concat(current_value.localTeam.data.name, \" VS \").concat(current_value.visitorTeam.data.name),\n                \"time\": current_value.time.minute,\n                \"league\": _.pick(current_value.league.data, 'id', 'name', 'country_id'),\n                \"localTeam\": {\n                  // data: _.pick(current_value.localTeam.data,\n                  //     'id',\n                  //     'name',\n                  //     'logo_path'\n                  // )\n                  data: current_value.localTeam.data\n                },\n                \"visitorTeam\": {\n                  // data: _.pick(current_value.visitorTeam.data,\n                  //     'id',\n                  //     'name',\n                  //     'logo_path'\n                  // )\n                  data: current_value.visitorTeam.data\n                },\n                \"scores\": {\n                  localteam_score: current_value.scores.localteam_score,\n                  visitorteam_score: current_value.scores.visitorteam_score\n                },\n                \"localTeam_stats\": current_value.stats.data[0],\n                \"visitorTeam_stats\": current_value.stats.data[1],\n                \"odds\": gameOdds,\n                \"liveOdds\": inplayOdds,\n                \"fiveMinHistory\": finallys,\n                \"TenMinHistory\": finallys2,\n                \"fifteenMinHistory\": finallys3\n              });\n            });\n            leagues = Array.from(new Set(playingLeagues.map(function (a) {\n              return a.id;\n            }))).map(function (id) {\n              return playingLeagues.find(function (a) {\n                return a.id === id;\n              });\n            });\n            leagues.forEach(function (league, index) {\n              finished.push({\n                league: league.Name,\n                id: league.id,\n                league_country: countries.filter(function (country) {\n                  return country.id === league.Country;\n                }),\n                children: games.filter(function (game) {\n                  return game.league.id === league.id;\n                })\n              });\n            });\n            resolve({\n              finished: finished,\n              games: games\n            });\n          });\n        });\n      });\n    });\n  });\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "Sportmonks_Api_Connect.js"
      ],
      "names": [
        "SportmonksApi",
        "require",
        "apiKey",
        "sportmonks",
        "_",
        "livescoreParams",
        "localTeam",
        "visitorTeam",
        "odds",
        "inplayOdds",
        "stats",
        "league",
        "$time",
        "today",
        "Date",
        "MS_PER_MINUTE",
        "fiveMinutesAgo",
        "tenMinutesAgo",
        "fifteenMinutesAgo",
        "fiveMinutesAgoParsed",
        "getFullYear",
        "getMonth",
        "getDate",
        "getHours",
        "getMinutes",
        "tenMinutesAgoParsed",
        "fifteenMinutesAgoParsed",
        "countriesDownload",
        "cb",
        "Promise",
        "resolve",
        "get",
        "page",
        "then",
        "resp",
        "countries",
        "data",
        "a",
        "concat",
        "b",
        "c",
        "d",
        "refreshData",
        "finished",
        "leagues",
        "games",
        "playingLeagues",
        "apiData",
        "dataFiveMinAgo",
        "dataTenMinAgo",
        "dataFifteenMinAgo",
        "dataUpdates",
        "find",
        "err",
        "length",
        "forEach",
        "current_value",
        "index",
        "gameOdds",
        "bkmkrArr",
        "undefined",
        "finallys",
        "Data",
        "children",
        "child",
        "id",
        "push",
        "pick",
        "finallys2",
        "finallys3",
        "name",
        "bookmakers",
        "bookmaker",
        "filter",
        "map",
        "ofChosenBookmakers",
        "dataItem",
        "label",
        "value",
        "inplayOdd",
        "market_id",
        "logo_path",
        "country_id",
        "time",
        "minute",
        "localteam_score",
        "scores",
        "visitorteam_score",
        "Array",
        "from",
        "Set",
        "Name",
        "league_country",
        "country",
        "Country",
        "game"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/robertfankhauser/Desktop/untitled folder/WORKER-Data-Retrieval/Modules",
      "sourcesContent": [
        "\n\n    const SportmonksApi = require(\"sportmonks\").SportmonksApi;\n    const apiKey = \"e26BGpAseLRsnrB0jg01ZnSyZFeLNq8b8ruymhZvR5xe9zYRxKnUVJsd6f5p\";\n    const sportmonks = new SportmonksApi(apiKey);\n\nimport dataUpdates from  './../Database Models/Data-History'\n    import User from './../Database Models/User'\n    var _ = require('lodash')\n\n    var livescoreParams = {\n        localTeam: true,\n        visitorTeam: true,\n        odds: true,\n        inplayOdds: true,\n        stats: true,\n        league: true,\n    \n    }\n    \n  \n    function $time() {\n    \n            var today = new Date();\n    \n            var MS_PER_MINUTE = 60000;\n            var fiveMinutesAgo = new Date(today - 5 * MS_PER_MINUTE);\n            var tenMinutesAgo = new Date(today - 10 * MS_PER_MINUTE);\n            var fifteenMinutesAgo = new Date(today - 15 * MS_PER_MINUTE);\n            var fiveMinutesAgoParsed = fiveMinutesAgo.getFullYear() + '-' + (fiveMinutesAgo.getMonth() + 1) + '-' + fiveMinutesAgo.getDate() + \" \" + fiveMinutesAgo.getHours() + \":\" + fiveMinutesAgo.getMinutes();\n            var tenMinutesAgoParsed = tenMinutesAgo.getFullYear() + '-' + (tenMinutesAgo.getMonth() + 1) + '-' + tenMinutesAgo.getDate() + \" \" + tenMinutesAgo.getHours() + \":\" + tenMinutesAgo.getMinutes();\n            var fifteenMinutesAgoParsed = fifteenMinutesAgo.getFullYear() + '-' + (fifteenMinutesAgo.getMonth() + 1) + '-' + fifteenMinutesAgo.getDate() + \" \" + fifteenMinutesAgo.getHours() + \":\" + fifteenMinutesAgo.getMinutes();\n        \n            return ({\n                fiveMinutesAgoParsed,\n                tenMinutesAgoParsed,\n                fifteenMinutesAgoParsed\n            })\n    \n    \n    \n    }\n\n\n export function countriesDownload (cb) {\n            return new Promise( (resolve) => {\n                sportmonks.get(\"v2.0/countries\", {\n                    page: 1\n                }).then(resp => {\n                   var countries = resp.data\n                    sportmonks.get(\"v2.0/countries\", {\n                        page: 2\n                    }).then(resp => {\n                        var a = countries.concat(resp.data)\n    \n                        sportmonks.get(\"v2.0/countries\", {\n                            page: 3\n                        }).then(resp => {\n                            var b = a.concat(resp.data)\n    \n                            sportmonks.get(\"v2.0/countries\", {\n                                page: 4\n                            }).then(resp => {\n                                var c = b.concat(resp.data)\n    \n                                sportmonks.get(\"v2.0/countries\", {\n                                    page: 5\n                                }).then(resp => {\n                                    var d = c.concat(resp.data)\n                        \n                                    countries = d\n                                    resolve(countries)\n    \n                                })\n                            })\n    \n                        })\n    \n                    })\n    \n                })\n            })\n        }\n   \n \n\n    \n        export function refreshData (countries) {\n            return new Promise((resolve) =>{\n                var finished = []\n                var leagues = []\n                var games = []\n                var playingLeagues = []\n           \n           \n                // Declare Time Variables\n                var fiveMinutesAgo = $time().fiveMinutesAgoParsed\n                var tenMinutesAgo = $time().tenMinutesAgoParsed\n                var fifteenMinutesAgo = $time().fifteenMinutesAgoParsed\n    \n    \n                sportmonks.get(\"v2.0/livescores/now\", livescoreParams).then(resp => {\n             \n             var       apiData = resp.data\n                    var dataFiveMinAgo = []\n                    var dataTenMinAgo = []\n                    var dataFifteenMinAgo = []\n    \n                    dataUpdates.find({\n                        Date: fiveMinutesAgo\n                    }, (err, resp) => {\n                        dataFiveMinAgo = resp[resp.length - 1]\n                        dataUpdates.find({\n                            Date: tenMinutesAgo\n                        }, (err, resp) => {\n                            dataTenMinAgo = resp[resp.length - 1]\n                            dataUpdates.find({\n                                Date: fifteenMinutesAgo\n                            }, (err, resp) => {\n                                dataFifteenMinAgo = resp[resp.length - 1]\n    \n    \n                                apiData.forEach((current_value, index) => {\n    \n                                    var gameOdds = []\n                                    var bkmkrArr = []\n                                    var inplayOdds = []\n    \n    \n                                    if (dataFiveMinAgo != null || undefined) {\n                                        var finallys = []\n                                        dataFiveMinAgo.Data.forEach(league => {\n                                            league.children.forEach(child => {\n                                                if (child.id === current_value.id) {\n                                                    finallys.push(_.pick(child,\n                                                        'id',\n                                                        'localTeam_stats',\n                                                        'visitorTeam_stats'\n                                                    ))\n                                                }\n                                            })\n    \n                                        })\n                                    }\n    \n                                    if (dataTenMinAgo != null || undefined) {\n                                        var finallys2 = []\n                                        dataTenMinAgo.Data.forEach(league => {\n                                            league.children.forEach(child => {\n                                                if (child.id === current_value.id) {\n                                                    finallys2.push(_.pick(child,\n                                                        'id',\n                                                        'localTeam_stats',\n                                                        'visitorTeam_stats'\n                                                    ))\n                                                }\n                                            })\n    \n                                        })\n                                    }\n    \n                                    if (dataFifteenMinAgo != null || undefined) {\n                                        var finallys3 = []\n                                        dataFifteenMinAgo.Data.forEach(league => {\n                                            league.children.forEach(child => {\n                                                if (child.id === current_value.id) {\n                                                    finallys3.push(_.pick(child,\n                                                        'id',\n                                                        'localTeam_stats',\n                                                        'visitorTeam_stats'\n                                                    ))\n                                                }\n                                            })\n    \n                                        })\n                                    }\n    \n    \n    \n    \n    \n    \n                                    current_value.odds.data.forEach(odds => {\n                                        if (odds.name === \"3Way Result\") {\n                                            gameOdds.push({\n                                                    name: odds.name,\n                                                    bookmakers: odds.bookmaker.data.filter(bookmaker => {\n                                                        return bookmaker.name === \"bet365\" || bookmaker.name === \"Betfair\"\n                                                    }).map(ofChosenBookmakers => {\n                                                        return {\n                                                            name: ofChosenBookmakers.name,\n                                                            data: ofChosenBookmakers.odds.data.map(dataItem => {\n                                                                return {\n                                                                    \"name\": dataItem.label,\n                                                                    \"value\": dataItem.value\n                                                                }\n                                                            })\n    \n                                                        }\n                                                    })\n    \n                                                }\n    \n                                            )\n                                        }\n                                    })\n                                    current_value.inplayOdds.data.forEach(inplayOdd => {\n                                        if (inplayOdd.market_id === 1) {\n                                            inplayOdds.push({\n                                                inplayOdd\n                                            })\n                                        }\n    \n    \n                                    })\n    \n    \n    \n                                    playingLeagues.push({\n                                        \"id\": current_value.league.data.id,\n                                        \"Name\": current_value.league.data.name,\n                                        \"Logo\": current_value.league.data.logo_path,\n                                        \"Country\": current_value.league.data.country_id\n    \n                                    })\n                                    games.push({\n                                        \"id\": current_value.id,\n                                        \"match\": `${current_value.localTeam.data.name} VS ${current_value.visitorTeam.data.name}`,\n                                        \"time\": current_value.time.minute,\n                                        \"league\": _.pick(current_value.league.data,\n                                            'id',\n                                            'name',\n                                            'country_id'\n                                        ),\n                                        \"localTeam\": {\n                                            // data: _.pick(current_value.localTeam.data,\n                                            //     'id',\n                                            //     'name',\n                                            //     'logo_path'\n                                            // )\n                                            data: current_value.localTeam.data\n                                        },\n                                        \"visitorTeam\": {\n                                            // data: _.pick(current_value.visitorTeam.data,\n                                            //     'id',\n                                            //     'name',\n                                            //     'logo_path'\n                                            // )\n                                            data: current_value.visitorTeam.data\n                                        },\n                                        \"scores\": {\n                                            localteam_score: current_value.scores.localteam_score,\n                                            visitorteam_score: current_value.scores.visitorteam_score\n    \n                                        },\n    \n                                        \"localTeam_stats\": current_value.stats.data[0],\n                                        \"visitorTeam_stats\": current_value.stats.data[1],\n                                        \"odds\": gameOdds,\n                                        \"liveOdds\": inplayOdds,\n                                        \"fiveMinHistory\": finallys,\n                                        \"TenMinHistory\": finallys2,\n                                        \"fifteenMinHistory\": finallys3,\n    \n                                    })\n    \n                                })\n                                leagues = Array.from(new Set(playingLeagues.map(a => a.id)))\n                                    .map(id => {\n                                        return playingLeagues.find(a => a.id === id)\n                                    })\n                                leagues.forEach((league, index) => {  \n                                    finished.push({\n                                            league: league.Name,\n                                            id: league.id,\n                              \n                                            league_country: countries.filter(country => {return country.id === league.Country}),\n                                           \n    \n                                            children: games.filter(game => {\n    \n                                                return game.league.id === league.id\n                                            })\n                                        }\n    \n                                    )\n    \n                                })\n                                resolve({\n                                    finished,\n                                    games\n                                })\n                            });\n                        });\n                    });\n                })\n            })\n        }\n\n    \n    \n    \n    \n    \n    \n    \n    \n\n \n\n\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1562616635580
  },
  "{\"sourceRoot\":\"/Users/robertfankhauser/Desktop/untitled folder/WORKER-Data-Retrieval/Database Models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/robertfankhauser/Desktop/untitled folder/WORKER-Data-Retrieval\",\"filename\":\"/Users/robertfankhauser/Desktop/untitled folder/WORKER-Data-Retrieval/Database Models/Data-History.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/robertfankhauser/Desktop/untitled folder/WORKER-Data-Retrieval\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/robertfankhauser/Desktop/untitled folder/WORKER-Data-Retrieval/Database Models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/robertfankhauser/Desktop/untitled folder/WORKER-Data-Retrieval",
      "filename": "/Users/robertfankhauser/Desktop/untitled folder/WORKER-Data-Retrieval/Database Models/Data-History.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/robertfankhauser/Desktop/untitled folder/WORKER-Data-Retrieval",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/robertfankhauser/Desktop/untitled folder/WORKER-Data-Retrieval/Database Models/Data-History.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/robertfankhauser/Desktop/untitled folder/WORKER-Data-Retrieval/Database Models/Data-History.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/robertfankhauser/Desktop/untitled folder/WORKER-Data-Retrieval/Database Models",
        "sourceFileName": "Data-History.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar mongoose = require('mongoose');\n\nvar _default = mongoose.model('DataHistory', {\n  Data: Array,\n  Date: String\n});\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkRhdGEtSGlzdG9yeS5qcyJdLCJuYW1lcyI6WyJtb25nb29zZSIsInJlcXVpcmUiLCJtb2RlbCIsIkRhdGEiLCJBcnJheSIsIkRhdGUiLCJTdHJpbmciXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSxJQUFNQSxRQUFRLEdBQUdDLE9BQU8sQ0FBQyxVQUFELENBQXhCOztlQUdlRCxRQUFRLENBQUNFLEtBQVQsQ0FBZSxhQUFmLEVBQThCO0FBQUVDLEVBQUFBLElBQUksRUFBRUMsS0FBUjtBQUFlQyxFQUFBQSxJQUFJLEVBQUVDO0FBQXJCLENBQTlCLEMiLCJzb3VyY2VSb290IjoiL1VzZXJzL3JvYmVydGZhbmtoYXVzZXIvRGVza3RvcC91bnRpdGxlZCBmb2xkZXIvV09SS0VSLURhdGEtUmV0cmlldmFsL0RhdGFiYXNlIE1vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IG1vbmdvb3NlID0gcmVxdWlyZSgnbW9uZ29vc2UnKTtcblxuXG5leHBvcnQgZGVmYXVsdCBtb25nb29zZS5tb2RlbCgnRGF0YUhpc3RvcnknLCB7IERhdGE6IEFycmF5LCBEYXRlOiBTdHJpbmcgfSkiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "Data-History.js"
      ],
      "names": [
        "mongoose",
        "require",
        "model",
        "Data",
        "Array",
        "Date",
        "String"
      ],
      "mappings": ";;;;;;;AAAA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;eAGeD,QAAQ,CAACE,KAAT,CAAe,aAAf,EAA8B;AAAEC,EAAAA,IAAI,EAAEC,KAAR;AAAeC,EAAAA,IAAI,EAAEC;AAArB,CAA9B,C",
      "sourceRoot": "/Users/robertfankhauser/Desktop/untitled folder/WORKER-Data-Retrieval/Database Models",
      "sourcesContent": [
        "const mongoose = require('mongoose');\n\n\nexport default mongoose.model('DataHistory', { Data: Array, Date: String })"
      ]
    },
    "sourceType": "script",
    "mtime": 1562616323879
  },
  "{\"sourceRoot\":\"/Users/robertfankhauser/Desktop/untitled folder/WORKER-Data-Retrieval/Database Models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/robertfankhauser/Desktop/untitled folder/WORKER-Data-Retrieval\",\"filename\":\"/Users/robertfankhauser/Desktop/untitled folder/WORKER-Data-Retrieval/Database Models/User.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/robertfankhauser/Desktop/untitled folder/WORKER-Data-Retrieval\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/robertfankhauser/Desktop/untitled folder/WORKER-Data-Retrieval/Database Models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/robertfankhauser/Desktop/untitled folder/WORKER-Data-Retrieval",
      "filename": "/Users/robertfankhauser/Desktop/untitled folder/WORKER-Data-Retrieval/Database Models/User.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/robertfankhauser/Desktop/untitled folder/WORKER-Data-Retrieval",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/robertfankhauser/Desktop/untitled folder/WORKER-Data-Retrieval/Database Models/User.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/robertfankhauser/Desktop/untitled folder/WORKER-Data-Retrieval/Database Models/User.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/robertfankhauser/Desktop/untitled folder/WORKER-Data-Retrieval/Database Models",
        "sourceFileName": "User.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar mongoose = require('mongoose');\n\nvar _default = mongoose.model('User', {\n  _id: String,\n  email: String,\n  name: {\n    first: String,\n    Middle: String,\n    Last: String\n  },\n  userData: {\n    filters: [],\n    signals: [],\n    shortList: []\n  },\n  signalAlerts: [],\n  currentlyTrueSignals: []\n});\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlVzZXIuanMiXSwibmFtZXMiOlsibW9uZ29vc2UiLCJyZXF1aXJlIiwibW9kZWwiLCJfaWQiLCJTdHJpbmciLCJlbWFpbCIsIm5hbWUiLCJmaXJzdCIsIk1pZGRsZSIsIkxhc3QiLCJ1c2VyRGF0YSIsImZpbHRlcnMiLCJzaWduYWxzIiwic2hvcnRMaXN0Iiwic2lnbmFsQWxlcnRzIiwiY3VycmVudGx5VHJ1ZVNpZ25hbHMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSxJQUFNQSxRQUFRLEdBQUdDLE9BQU8sQ0FBQyxVQUFELENBQXhCOztlQUdlRCxRQUFRLENBQUNFLEtBQVQsQ0FBZSxNQUFmLEVBQXVCO0FBQ2xDQyxFQUFBQSxHQUFHLEVBQUdDLE1BRDRCO0FBRWxDQyxFQUFBQSxLQUFLLEVBQUVELE1BRjJCO0FBR2xDRSxFQUFBQSxJQUFJLEVBQUU7QUFBQ0MsSUFBQUEsS0FBSyxFQUFFSCxNQUFSO0FBQWdCSSxJQUFBQSxNQUFNLEVBQUNKLE1BQXZCO0FBQStCSyxJQUFBQSxJQUFJLEVBQUNMO0FBQXBDLEdBSDRCO0FBSWxDTSxFQUFBQSxRQUFRLEVBQUU7QUFDTkMsSUFBQUEsT0FBTyxFQUFFLEVBREg7QUFFTkMsSUFBQUEsT0FBTyxFQUFFLEVBRkg7QUFHTkMsSUFBQUEsU0FBUyxFQUFFO0FBSEwsR0FKd0I7QUFTbENDLEVBQUFBLFlBQVksRUFBQyxFQVRxQjtBQVVsQ0MsRUFBQUEsb0JBQW9CLEVBQUU7QUFWWSxDQUF2QixDIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9yb2JlcnRmYW5raGF1c2VyL0Rlc2t0b3AvdW50aXRsZWQgZm9sZGVyL1dPUktFUi1EYXRhLVJldHJpZXZhbC9EYXRhYmFzZSBNb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBtb25nb29zZSA9IHJlcXVpcmUoJ21vbmdvb3NlJyk7XG5cblxuZXhwb3J0IGRlZmF1bHQgbW9uZ29vc2UubW9kZWwoJ1VzZXInLCB7IFxuICAgIF9pZDogIFN0cmluZyxcbiAgICBlbWFpbDogU3RyaW5nLFxuICAgIG5hbWU6IHtmaXJzdDogU3RyaW5nLCBNaWRkbGU6U3RyaW5nLCBMYXN0OlN0cmluZ30sIFxuICAgIHVzZXJEYXRhOiB7XG4gICAgICAgIGZpbHRlcnM6IFtdLFxuICAgICAgICBzaWduYWxzOiBbXSxcbiAgICAgICAgc2hvcnRMaXN0OiBbXSxcbiAgICAgIH0sXG4gICAgc2lnbmFsQWxlcnRzOltdLFxuICAgIGN1cnJlbnRseVRydWVTaWduYWxzOiBbXVxuXG59KSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "User.js"
      ],
      "names": [
        "mongoose",
        "require",
        "model",
        "_id",
        "String",
        "email",
        "name",
        "first",
        "Middle",
        "Last",
        "userData",
        "filters",
        "signals",
        "shortList",
        "signalAlerts",
        "currentlyTrueSignals"
      ],
      "mappings": ";;;;;;;AAAA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;eAGeD,QAAQ,CAACE,KAAT,CAAe,MAAf,EAAuB;AAClCC,EAAAA,GAAG,EAAGC,MAD4B;AAElCC,EAAAA,KAAK,EAAED,MAF2B;AAGlCE,EAAAA,IAAI,EAAE;AAACC,IAAAA,KAAK,EAAEH,MAAR;AAAgBI,IAAAA,MAAM,EAACJ,MAAvB;AAA+BK,IAAAA,IAAI,EAACL;AAApC,GAH4B;AAIlCM,EAAAA,QAAQ,EAAE;AACNC,IAAAA,OAAO,EAAE,EADH;AAENC,IAAAA,OAAO,EAAE,EAFH;AAGNC,IAAAA,SAAS,EAAE;AAHL,GAJwB;AASlCC,EAAAA,YAAY,EAAC,EATqB;AAUlCC,EAAAA,oBAAoB,EAAE;AAVY,CAAvB,C",
      "sourceRoot": "/Users/robertfankhauser/Desktop/untitled folder/WORKER-Data-Retrieval/Database Models",
      "sourcesContent": [
        "const mongoose = require('mongoose');\n\n\nexport default mongoose.model('User', { \n    _id:  String,\n    email: String,\n    name: {first: String, Middle:String, Last:String}, \n    userData: {\n        filters: [],\n        signals: [],\n        shortList: [],\n      },\n    signalAlerts:[],\n    currentlyTrueSignals: []\n\n})"
      ]
    },
    "sourceType": "script",
    "mtime": 1562616323879
  }
}